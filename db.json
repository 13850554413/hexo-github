{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/tags/index.md.back","path":"tags/index.md.back","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1581860639214},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1581860639217},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1581860639217},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1581860639217},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1581860639217},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1581860639217},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1581860639217},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1581860639217},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1581860639217},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1581860639217},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1581860639220},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1581860639220},{"_id":"themes/next/_config.yml","hash":"45aab4d313935b25a22ff4c70c80eda51434f0d7","modified":1581864784096},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1581860639220},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1581860639220},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1581860639237},{"_id":"source/_posts/git简记.md","hash":"d2c7c02d2ad7be148fe8369e9ab3a4ab8dfcafe1","modified":1581861597234},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1581832834797},{"_id":"source/_posts/linux简记.md","hash":"9b2b1a15e9f629a74a3728d72b7944dccb80ec54","modified":1581861743931},{"_id":"source/_posts/pacman简记.md","hash":"cff2613ec6bb683efa8298d445607a506b53d373","modified":1581861831614},{"_id":"source/_posts/shell常用快捷键.md","hash":"51a8ab9ae4542e3b7f0581c32c50a0b0212f0d4b","modified":1581862015656},{"_id":"source/_posts/python简记.md","hash":"ab3479c37f30030498c5a4bc86e6ed58aad82db0","modified":1581861925690},{"_id":"source/_posts/templates.md","hash":"0a79a637ea4c5d0cf36faf7569302a3747ed63c4","modified":1581862043889},{"_id":"source/tags/index.md.back","hash":"d0737d47bd4a9a0c704de4f181f65ef672855976","modified":1581860885372},{"_id":"source/_posts/vim简记.md","hash":"c7bc7fc8f876227cea2b3f2fc456d9b0bf526355","modified":1581862109205},{"_id":"source/tags/index.md","hash":"891b5f0706e477bb7cec1e5181493c918c42d0a9","modified":1581861286655},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1581860639220},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1581860639220},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1581860639220},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1581860639220},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1581860639224},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1581860639220},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1581860639224},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1581860639224},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1581860639224},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1581860639224},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1581860639224},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1581860639224},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1581860639224},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1581860639224},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1581860639224},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1581860639224},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1581860639224},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1581860639234},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1581860639234},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1581860639234},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1581860639234},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1581860639234},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1581860639237},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1581860639237},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1581860639320},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1581860639320},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1581860639320},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1581860639234},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1581860639234},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639254},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1581860639224},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1581860639224},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1581860639224},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1581860639224},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1581860639224},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1581860639227},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1581860639227},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1581860639227},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1581860639227},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1581860639227},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1581860639227},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1581860639227},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1581860639227},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1581860639227},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1581860639227},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1581860639227},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1581860639230},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1581860639230},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1581860639234},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1581860639234},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1581860639234},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1581860639234},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1581860639234},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1581860639234},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1581860639234},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1581860639237},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1581860639254},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1581860639237},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1581860639237},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1581860639237},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1581860639237},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1581860639237},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1581860639237},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1581860639237},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1581860639237},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1581860639254},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1581860639254},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1581860639254},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1581860639257},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1581860639257},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1581860639257},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1581860639257},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1581860639257},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1581860639257},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1581860639257},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1581860639257},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1581860639257},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1581860639257},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1581860639257},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639230},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639230},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639254},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639254},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1581860639227},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1581860639227},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1581860639227},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1581860639227},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1581860639227},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1581860639230},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1581860639230},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1581860639234},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1581860639234},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1581860639234},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1581860639234},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1581860639234},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1581860639250},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1581860639254},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1581860639254},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1581860639254},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1581860639254},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1581860639260},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1581860639260},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1581860639260},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1581860639260},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1581860639230},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1581860639260},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1581860639260},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1581860639260},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1581860639260},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1581860639260},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1581860639260},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1581860639260},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1581860639270},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1581860639277},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1581860639277},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1581860639277},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1581860639280},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1581860639287},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1581860639314},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1581860639314},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1581860639314},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1581860639314},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1581860639320},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1581860639310},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1581860639234},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1581860639247},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1581860639237},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1581860639244},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1581860639254},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1581860639260},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1581860639267},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1581860639267},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1581860639284},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1581860639287},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1581860639287},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1581860639287},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1581860639320},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1581860639320},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1581860639267},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1581860639310},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1581860639310},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1581860639320},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1581860639247},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1581860639250},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1581860639264},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1581860639280},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1581860639264},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1581860639294},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1581860639297},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1581860639310},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1581860639277},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1581860639317},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1581860639304}],"Category":[{"name":"默认分类","_id":"ck6p5v4bk00031cnoausu79bk"}],"Data":[],"Page":[{"type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntype: \"tags\"\ncomments: false\n---\n","date":"2020-02-16T13:54:46.658Z","updated":"2020-02-16T13:54:46.655Z","path":"tags/index.html","title":"","layout":"page","_id":"ck6p5v4b000011cno4d315wev","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"git笔记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**创建仓库和提交**\n\n    git init 把这个目录变成git可以管理的目录\n    git add 添加到仓库\n    git commit -m 提交到仓库\n    git status 查看仓库当前的状态\n    git diff 查看文件的变化\n\n**版本回退**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git log 查看提交日志\n    git reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\n    git reset --hard \"commit id\"    可以穿梭回去\n    git checkout -- \"file\"  撤销修改/返回上次修改的状态add之前的状态\n    git rm \"file\"   删除一个文件\n    git push -u origin master 第一次推送\n    git push 推送\n    git remote add origin \"仓库地址\"  关联远程仓库\n    git clone 克隆一个项目\n\n**分支操作**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git checout -b \"新分支\" 创建并切换到新分支\n    git branch  查看当前分支\n    git checkout \"分支名称\" 切换分支\n    git merge \"指定分支\"    合并指定分支到当前分支\n    git branch -d \"分支名称\"    删除分支\n    git branch origin --delete dev\n    git push origin :dev\n    git log --graph 查看分支合并图\n\n**更新的两种方法**\n\n    git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\n    git fetch 从另外一个仓库下载对象和引用\n    git merge 合并\n\n**远程操作**\n\n    git clone [url] 克隆／下载\n    git clone -b <branch> [url] 下载一个分支\n    git branch --set-upstream-to=origin/develop 关联一个远程分支develop\n    git remote -v 查看远程仓库信息  \n    git remote add [name] [url] 添加远程仓库  \n    git remote remove [name] 删除远程仓库name\n    git fetch [name] 从name仓库更新同步代码\n    git fetch -all 更新所有\n    git merage --no-ff [name]/master 合并到本地代码\n    git pull origin master 更新并合并自己远程仓库的代码\n    git push -u 向自己的远程仓库推送刚才同步源仓库后的代码\n\n**标签操作**\n\n    git tag <tagname>   新建一个标签\n    git tag -a <tanname> -m \"aabbbcc....\"   可以指定标签信息\n    git tag 可以查看所有标签\n    git push orgin <tagname> 推送一个本地标签\n    git push orgin --tags 推送全部未推送过的标签\n    git tag -d <tagname> 删除一个本地标签\n    git push orgin :refs/tags/<tagname> 删除一个远程标签\n    注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况\n","source":"_posts/git简记.md","raw":"---\ntitle: git笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [git,命令] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**创建仓库和提交**\n\n    git init 把这个目录变成git可以管理的目录\n    git add 添加到仓库\n    git commit -m 提交到仓库\n    git status 查看仓库当前的状态\n    git diff 查看文件的变化\n\n**版本回退**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git log 查看提交日志\n    git reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\n    git reset --hard \"commit id\"    可以穿梭回去\n    git checkout -- \"file\"  撤销修改/返回上次修改的状态add之前的状态\n    git rm \"file\"   删除一个文件\n    git push -u origin master 第一次推送\n    git push 推送\n    git remote add origin \"仓库地址\"  关联远程仓库\n    git clone 克隆一个项目\n\n**分支操作**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git checout -b \"新分支\" 创建并切换到新分支\n    git branch  查看当前分支\n    git checkout \"分支名称\" 切换分支\n    git merge \"指定分支\"    合并指定分支到当前分支\n    git branch -d \"分支名称\"    删除分支\n    git branch origin --delete dev\n    git push origin :dev\n    git log --graph 查看分支合并图\n\n**更新的两种方法**\n\n    git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\n    git fetch 从另外一个仓库下载对象和引用\n    git merge 合并\n\n**远程操作**\n\n    git clone [url] 克隆／下载\n    git clone -b <branch> [url] 下载一个分支\n    git branch --set-upstream-to=origin/develop 关联一个远程分支develop\n    git remote -v 查看远程仓库信息  \n    git remote add [name] [url] 添加远程仓库  \n    git remote remove [name] 删除远程仓库name\n    git fetch [name] 从name仓库更新同步代码\n    git fetch -all 更新所有\n    git merage --no-ff [name]/master 合并到本地代码\n    git pull origin master 更新并合并自己远程仓库的代码\n    git push -u 向自己的远程仓库推送刚才同步源仓库后的代码\n\n**标签操作**\n\n    git tag <tagname>   新建一个标签\n    git tag -a <tanname> -m \"aabbbcc....\"   可以指定标签信息\n    git tag 可以查看所有标签\n    git push orgin <tagname> 推送一个本地标签\n    git push orgin --tags 推送全部未推送过的标签\n    git tag -d <tagname> 删除一个本地标签\n    git push orgin :refs/tags/<tagname> 删除一个远程标签\n    注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况\n","slug":"git简记","published":1,"updated":"2020-02-16T13:59:57.234Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4ao00001cnob3w10y23","content":"<p><strong>创建仓库和提交</strong></p>\n<pre><code>git init 把这个目录变成git可以管理的目录\ngit add 添加到仓库\ngit commit -m 提交到仓库\ngit status 查看仓库当前的状态\ngit diff 查看文件的变化</code></pre><p><strong>版本回退</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git log 查看提交日志\ngit reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\ngit reset --hard &quot;commit id&quot;    可以穿梭回去\ngit checkout -- &quot;file&quot;  撤销修改/返回上次修改的状态add之前的状态\ngit rm &quot;file&quot;   删除一个文件\ngit push -u origin master 第一次推送\ngit push 推送\ngit remote add origin &quot;仓库地址&quot;  关联远程仓库\ngit clone 克隆一个项目</code></pre><p><strong>分支操作</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git checout -b &quot;新分支&quot; 创建并切换到新分支\ngit branch  查看当前分支\ngit checkout &quot;分支名称&quot; 切换分支\ngit merge &quot;指定分支&quot;    合并指定分支到当前分支\ngit branch -d &quot;分支名称&quot;    删除分支\ngit branch origin --delete dev\ngit push origin :dev\ngit log --graph 查看分支合并图</code></pre><p><strong>更新的两种方法</strong></p>\n<pre><code>git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\ngit fetch 从另外一个仓库下载对象和引用\ngit merge 合并</code></pre><p><strong>远程操作</strong></p>\n<pre><code>git clone [url] 克隆／下载\ngit clone -b &lt;branch&gt; [url] 下载一个分支\ngit branch --set-upstream-to=origin/develop 关联一个远程分支develop\ngit remote -v 查看远程仓库信息  \ngit remote add [name] [url] 添加远程仓库  \ngit remote remove [name] 删除远程仓库name\ngit fetch [name] 从name仓库更新同步代码\ngit fetch -all 更新所有\ngit merage --no-ff [name]/master 合并到本地代码\ngit pull origin master 更新并合并自己远程仓库的代码\ngit push -u 向自己的远程仓库推送刚才同步源仓库后的代码</code></pre><p><strong>标签操作</strong></p>\n<pre><code>git tag &lt;tagname&gt;   新建一个标签\ngit tag -a &lt;tanname&gt; -m &quot;aabbbcc....&quot;   可以指定标签信息\ngit tag 可以查看所有标签\ngit push orgin &lt;tagname&gt; 推送一个本地标签\ngit push orgin --tags 推送全部未推送过的标签\ngit tag -d &lt;tagname&gt; 删除一个本地标签\ngit push orgin :refs/tags/&lt;tagname&gt; 删除一个远程标签\n注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>创建仓库和提交</strong></p>\n<pre><code>git init 把这个目录变成git可以管理的目录\ngit add 添加到仓库\ngit commit -m 提交到仓库\ngit status 查看仓库当前的状态\ngit diff 查看文件的变化</code></pre><p><strong>版本回退</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git log 查看提交日志\ngit reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\ngit reset --hard &quot;commit id&quot;    可以穿梭回去\ngit checkout -- &quot;file&quot;  撤销修改/返回上次修改的状态add之前的状态\ngit rm &quot;file&quot;   删除一个文件\ngit push -u origin master 第一次推送\ngit push 推送\ngit remote add origin &quot;仓库地址&quot;  关联远程仓库\ngit clone 克隆一个项目</code></pre><p><strong>分支操作</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git checout -b &quot;新分支&quot; 创建并切换到新分支\ngit branch  查看当前分支\ngit checkout &quot;分支名称&quot; 切换分支\ngit merge &quot;指定分支&quot;    合并指定分支到当前分支\ngit branch -d &quot;分支名称&quot;    删除分支\ngit branch origin --delete dev\ngit push origin :dev\ngit log --graph 查看分支合并图</code></pre><p><strong>更新的两种方法</strong></p>\n<pre><code>git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\ngit fetch 从另外一个仓库下载对象和引用\ngit merge 合并</code></pre><p><strong>远程操作</strong></p>\n<pre><code>git clone [url] 克隆／下载\ngit clone -b &lt;branch&gt; [url] 下载一个分支\ngit branch --set-upstream-to=origin/develop 关联一个远程分支develop\ngit remote -v 查看远程仓库信息  \ngit remote add [name] [url] 添加远程仓库  \ngit remote remove [name] 删除远程仓库name\ngit fetch [name] 从name仓库更新同步代码\ngit fetch -all 更新所有\ngit merage --no-ff [name]/master 合并到本地代码\ngit pull origin master 更新并合并自己远程仓库的代码\ngit push -u 向自己的远程仓库推送刚才同步源仓库后的代码</code></pre><p><strong>标签操作</strong></p>\n<pre><code>git tag &lt;tagname&gt;   新建一个标签\ngit tag -a &lt;tanname&gt; -m &quot;aabbbcc....&quot;   可以指定标签信息\ngit tag 可以查看所有标签\ngit push orgin &lt;tagname&gt; 推送一个本地标签\ngit push orgin --tags 推送全部未推送过的标签\ngit tag -d &lt;tagname&gt; 删除一个本地标签\ngit push orgin :refs/tags/&lt;tagname&gt; 删除一个远程标签\n注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况</code></pre>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2020-02-16T06:00:34.797Z","updated":"2020-02-16T06:00:34.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4b400021cno9q152eyc","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"linux笔记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**linux命令这么多我该怎么记-如何查找Linux的命令**\nhttps://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\n\n*find        查找*\n> -name         名称\n  -maxdepth     递归层级(大)  \n  -mindepth     递归层级(小)  \n  -user         用户  \n  -group        属组  \n  -perm         权限  \n  -not          非(-not -user [name] #不是name用户,group等也可以组合)  \n  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  \n\n    free -m     查看内存的使用\n    uname -a    查看内核版本\n    locate      简单的查找文件\n    ldd \t查看命令依赖\n    whereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\n    which       搜索命令位置\n    nl          查看文件内容会显示行号\n    wc          统计文件信息\n    type        查看是不是shell自带命令\n    history     查看最近的所有命令可以陪grep使用，效果更好\n    whoami      查看当前用户\n    useradd     创建用户\n    chmod       权限操作\n    chown       修改文件所有者(属主)\n    alias       取别名\n    df -h       显示已经挂载的分区列表\n    du -sh      查看目录占用空间\n    du -h       查看文件大小\n    sed 's/stringa1/stringa2/g' example.txt 替换命令，将example.txt文件中的 \"string1\" 替换成 \"string2\"\n    dump -0aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的完整备份\n    nohup       使用nohup在登出ssh会话后仍继续运行命令\n    ranger      文件浏览\n    lsblk\t查看磁盘挂载\n\n**进程管理**\n\n    kill pid    杀掉进程\n\n**暂停并在后台运行命令**\n\n    ctrl + z    暂停应用程序\n    bg          让其在后台运行\n    fg          重新将运用程序唤到前台\n\n**linux命令行快捷键**\n\n    ctrl + u    剪切光标前的内容\n    ctrl + k    剪切光标至行未的内容\n    crrl + y    粘帖\n    ctrl + e    移动光标至行抹\n    ctrl + a    移动光标到行首\n    alt  + f    跳到下一个空格\n    alt  + b    跳到上一个空格\n    alt  + Backspace  删除前一个单词\n    ctrl + w    剪切光标前一个单词\n    ctrl + l    清屏\n    stty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n    ^a^b^       替换上一个命令a变成b(命令输错可用)\n\n**命令复用**\n\n    !!          重复上一条命令\n    c         重复上一条以ec开头的命令\n    !76         用命令历史(history)中的76号命令\n\n**{}()语法**\n\n    touch name{1..10}.text\n    $(cmd)  #执行cmd在替换原来的命令\n    ()  # 命令组括号中的命令会在开一个子shell执行\n\n","source":"_posts/linux简记.md","raw":"---\ntitle: linux笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [linux,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**linux命令这么多我该怎么记-如何查找Linux的命令**\nhttps://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\n\n*find        查找*\n> -name         名称\n  -maxdepth     递归层级(大)  \n  -mindepth     递归层级(小)  \n  -user         用户  \n  -group        属组  \n  -perm         权限  \n  -not          非(-not -user [name] #不是name用户,group等也可以组合)  \n  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  \n\n    free -m     查看内存的使用\n    uname -a    查看内核版本\n    locate      简单的查找文件\n    ldd \t查看命令依赖\n    whereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\n    which       搜索命令位置\n    nl          查看文件内容会显示行号\n    wc          统计文件信息\n    type        查看是不是shell自带命令\n    history     查看最近的所有命令可以陪grep使用，效果更好\n    whoami      查看当前用户\n    useradd     创建用户\n    chmod       权限操作\n    chown       修改文件所有者(属主)\n    alias       取别名\n    df -h       显示已经挂载的分区列表\n    du -sh      查看目录占用空间\n    du -h       查看文件大小\n    sed 's/stringa1/stringa2/g' example.txt 替换命令，将example.txt文件中的 \"string1\" 替换成 \"string2\"\n    dump -0aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的完整备份\n    nohup       使用nohup在登出ssh会话后仍继续运行命令\n    ranger      文件浏览\n    lsblk\t查看磁盘挂载\n\n**进程管理**\n\n    kill pid    杀掉进程\n\n**暂停并在后台运行命令**\n\n    ctrl + z    暂停应用程序\n    bg          让其在后台运行\n    fg          重新将运用程序唤到前台\n\n**linux命令行快捷键**\n\n    ctrl + u    剪切光标前的内容\n    ctrl + k    剪切光标至行未的内容\n    crrl + y    粘帖\n    ctrl + e    移动光标至行抹\n    ctrl + a    移动光标到行首\n    alt  + f    跳到下一个空格\n    alt  + b    跳到上一个空格\n    alt  + Backspace  删除前一个单词\n    ctrl + w    剪切光标前一个单词\n    ctrl + l    清屏\n    stty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n    ^a^b^       替换上一个命令a变成b(命令输错可用)\n\n**命令复用**\n\n    !!          重复上一条命令\n    c         重复上一条以ec开头的命令\n    !76         用命令历史(history)中的76号命令\n\n**{}()语法**\n\n    touch name{1..10}.text\n    $(cmd)  #执行cmd在替换原来的命令\n    ()  # 命令组括号中的命令会在开一个子shell执行\n\n","slug":"linux简记","published":1,"updated":"2020-02-16T14:02:23.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4bo00051cnob1q1ep1w","content":"<p><strong>linux命令这么多我该怎么记-如何查找Linux的命令</strong><br><a href=\"https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\" target=\"_blank\" rel=\"noopener\">https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html</a></p>\n<p><em>find        查找</em></p>\n<blockquote>\n<p>-name         名称<br>  -maxdepth     递归层级(大)<br>  -mindepth     递归层级(小)<br>  -user         用户<br>  -group        属组<br>  -perm         权限<br>  -not          非(-not -user [name] #不是name用户,group等也可以组合)<br>  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  </p>\n</blockquote>\n<pre><code>free -m     查看内存的使用\nuname -a    查看内核版本\nlocate      简单的查找文件\nldd     查看命令依赖\nwhereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\nwhich       搜索命令位置\nnl          查看文件内容会显示行号\nwc          统计文件信息\ntype        查看是不是shell自带命令\nhistory     查看最近的所有命令可以陪grep使用，效果更好\nwhoami      查看当前用户\nuseradd     创建用户\nchmod       权限操作\nchown       修改文件所有者(属主)\nalias       取别名\ndf -h       显示已经挂载的分区列表\ndu -sh      查看目录占用空间\ndu -h       查看文件大小\nsed &apos;s/stringa1/stringa2/g&apos; example.txt 替换命令，将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;\ndump -0aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的完整备份\nnohup       使用nohup在登出ssh会话后仍继续运行命令\nranger      文件浏览\nlsblk    查看磁盘挂载</code></pre><p><strong>进程管理</strong></p>\n<pre><code>kill pid    杀掉进程</code></pre><p><strong>暂停并在后台运行命令</strong></p>\n<pre><code>ctrl + z    暂停应用程序\nbg          让其在后台运行\nfg          重新将运用程序唤到前台</code></pre><p><strong>linux命令行快捷键</strong></p>\n<pre><code>ctrl + u    剪切光标前的内容\nctrl + k    剪切光标至行未的内容\ncrrl + y    粘帖\nctrl + e    移动光标至行抹\nctrl + a    移动光标到行首\nalt  + f    跳到下一个空格\nalt  + b    跳到上一个空格\nalt  + Backspace  删除前一个单词\nctrl + w    剪切光标前一个单词\nctrl + l    清屏\nstty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n^a^b^       替换上一个命令a变成b(命令输错可用)</code></pre><p><strong>命令复用</strong></p>\n<pre><code>!!          重复上一条命令\nc         重复上一条以ec开头的命令\n!76         用命令历史(history)中的76号命令</code></pre><p><strong>{}()语法</strong></p>\n<pre><code>touch name{1..10}.text\n$(cmd)  #执行cmd在替换原来的命令\n()  # 命令组括号中的命令会在开一个子shell执行</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>linux命令这么多我该怎么记-如何查找Linux的命令</strong><br><a href=\"https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\" target=\"_blank\" rel=\"noopener\">https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html</a></p>\n<p><em>find        查找</em></p>\n<blockquote>\n<p>-name         名称<br>  -maxdepth     递归层级(大)<br>  -mindepth     递归层级(小)<br>  -user         用户<br>  -group        属组<br>  -perm         权限<br>  -not          非(-not -user [name] #不是name用户,group等也可以组合)<br>  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  </p>\n</blockquote>\n<pre><code>free -m     查看内存的使用\nuname -a    查看内核版本\nlocate      简单的查找文件\nldd     查看命令依赖\nwhereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\nwhich       搜索命令位置\nnl          查看文件内容会显示行号\nwc          统计文件信息\ntype        查看是不是shell自带命令\nhistory     查看最近的所有命令可以陪grep使用，效果更好\nwhoami      查看当前用户\nuseradd     创建用户\nchmod       权限操作\nchown       修改文件所有者(属主)\nalias       取别名\ndf -h       显示已经挂载的分区列表\ndu -sh      查看目录占用空间\ndu -h       查看文件大小\nsed &apos;s/stringa1/stringa2/g&apos; example.txt 替换命令，将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;\ndump -0aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的完整备份\nnohup       使用nohup在登出ssh会话后仍继续运行命令\nranger      文件浏览\nlsblk    查看磁盘挂载</code></pre><p><strong>进程管理</strong></p>\n<pre><code>kill pid    杀掉进程</code></pre><p><strong>暂停并在后台运行命令</strong></p>\n<pre><code>ctrl + z    暂停应用程序\nbg          让其在后台运行\nfg          重新将运用程序唤到前台</code></pre><p><strong>linux命令行快捷键</strong></p>\n<pre><code>ctrl + u    剪切光标前的内容\nctrl + k    剪切光标至行未的内容\ncrrl + y    粘帖\nctrl + e    移动光标至行抹\nctrl + a    移动光标到行首\nalt  + f    跳到下一个空格\nalt  + b    跳到上一个空格\nalt  + Backspace  删除前一个单词\nctrl + w    剪切光标前一个单词\nctrl + l    清屏\nstty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n^a^b^       替换上一个命令a变成b(命令输错可用)</code></pre><p><strong>命令复用</strong></p>\n<pre><code>!!          重复上一条命令\nc         重复上一条以ec开头的命令\n!76         用命令历史(history)中的76号命令</code></pre><p><strong>{}()语法</strong></p>\n<pre><code>touch name{1..10}.text\n$(cmd)  #执行cmd在替换原来的命令\n()  # 命令组括号中的命令会在开一个子shell执行</code></pre>"},{"title":"pacman简记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n#1. 第一部分使用 pacman-mirrors 更新官方软件源\n##1.1  按照地区自动更新为最快最稳定的软件源镜像地址\n  sudo pacman-mirrors --country China\n##1.2. 恢复默认软件源操作\n  sudo pacman-mirrors --interactive --default\n\n##1.3 软件源更新之后，我们一般会进行系统更新\n  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作\n\n##1.4 查看所有可用的地区信息\n  sudo pacman-mirrors -l\n————————————————\n\n\n#2. 第二部分使用 pacman 管理软件\n##2.1 同步并且更新你的系统\n  sudo pacman -Syyu\n##2.2 在软件仓库中搜索软件\n  sudo pacman -Ss [software package name]\n##2.3 查看已安装软件\n  sudo pacman -Qs [software package name]\n  sudo pacman -Qi [software package name] # 附带详细信息\n  sudo pacman -Qii [software package name] # 附带更加详细的包信息\n  sudo pacman -Ql # 列出所有安装的软件包\n##2.4 查看软件的详细依赖\n  sudo pactree [software package name]\n##2.5 查看系统中那些没有被使用软件依赖包（orphans）\n  sudo pacman -Qdt\n##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove --purge】\n  sudo pacman -Rs $(pacman -Qdtq)\n##2.7 下载并安装软件包\n  sudo pacman -Syu [software package name] # 从软件仓库安装\n  yay -S [software package name]  # Packages from the AUR\n  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装\n  pacman -U http://www.examplepackage/repo/examplepkg.tar.xz # 从网络安装【非官方仓库】\n##2.8 卸载软件\n  sudo pacman -R [software package name] \n  sudo pacman -Rs [software package name] # 同时删除依赖\n  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除\n##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】\n  sudo pacman -Sc\n  sudo pacman -Scc # 更彻底的清理\n  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看\n————————————————\n","source":"_posts/pacman简记.md","raw":"---\ntitle: pacman简记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [arch, pacman,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n#1. 第一部分使用 pacman-mirrors 更新官方软件源\n##1.1  按照地区自动更新为最快最稳定的软件源镜像地址\n  sudo pacman-mirrors --country China\n##1.2. 恢复默认软件源操作\n  sudo pacman-mirrors --interactive --default\n\n##1.3 软件源更新之后，我们一般会进行系统更新\n  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作\n\n##1.4 查看所有可用的地区信息\n  sudo pacman-mirrors -l\n————————————————\n\n\n#2. 第二部分使用 pacman 管理软件\n##2.1 同步并且更新你的系统\n  sudo pacman -Syyu\n##2.2 在软件仓库中搜索软件\n  sudo pacman -Ss [software package name]\n##2.3 查看已安装软件\n  sudo pacman -Qs [software package name]\n  sudo pacman -Qi [software package name] # 附带详细信息\n  sudo pacman -Qii [software package name] # 附带更加详细的包信息\n  sudo pacman -Ql # 列出所有安装的软件包\n##2.4 查看软件的详细依赖\n  sudo pactree [software package name]\n##2.5 查看系统中那些没有被使用软件依赖包（orphans）\n  sudo pacman -Qdt\n##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove --purge】\n  sudo pacman -Rs $(pacman -Qdtq)\n##2.7 下载并安装软件包\n  sudo pacman -Syu [software package name] # 从软件仓库安装\n  yay -S [software package name]  # Packages from the AUR\n  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装\n  pacman -U http://www.examplepackage/repo/examplepkg.tar.xz # 从网络安装【非官方仓库】\n##2.8 卸载软件\n  sudo pacman -R [software package name] \n  sudo pacman -Rs [software package name] # 同时删除依赖\n  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除\n##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】\n  sudo pacman -Sc\n  sudo pacman -Scc # 更彻底的清理\n  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看\n————————————————\n","slug":"pacman简记","published":1,"updated":"2020-02-16T14:03:51.614Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4bq00061cno6c9bghcm","content":"<p>#1. 第一部分使用 pacman-mirrors 更新官方软件源<br>##1.1  按照地区自动更新为最快最稳定的软件源镜像地址<br>  sudo pacman-mirrors –country China<br>##1.2. 恢复默认软件源操作<br>  sudo pacman-mirrors –interactive –default</p>\n<p>##1.3 软件源更新之后，我们一般会进行系统更新<br>  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作</p>\n<p>##1.4 查看所有可用的地区信息<br>  sudo pacman-mirrors -l<br>————————————————</p>\n<p>#2. 第二部分使用 pacman 管理软件<br>##2.1 同步并且更新你的系统<br>  sudo pacman -Syyu<br>##2.2 在软件仓库中搜索软件<br>  sudo pacman -Ss [software package name]<br>##2.3 查看已安装软件<br>  sudo pacman -Qs [software package name]<br>  sudo pacman -Qi [software package name] # 附带详细信息<br>  sudo pacman -Qii [software package name] # 附带更加详细的包信息<br>  sudo pacman -Ql # 列出所有安装的软件包<br>##2.4 查看软件的详细依赖<br>  sudo pactree [software package name]<br>##2.5 查看系统中那些没有被使用软件依赖包（orphans）<br>  sudo pacman -Qdt<br>##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove –purge】<br>  sudo pacman -Rs $(pacman -Qdtq)<br>##2.7 下载并安装软件包<br>  sudo pacman -Syu [software package name] # 从软件仓库安装<br>  yay -S [software package name]  # Packages from the AUR<br>  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装<br>  pacman -U <a href=\"http://www.examplepackage/repo/examplepkg.tar.xz\" target=\"_blank\" rel=\"noopener\">http://www.examplepackage/repo/examplepkg.tar.xz</a> # 从网络安装【非官方仓库】<br>##2.8 卸载软件<br>  sudo pacman -R [software package name]<br>  sudo pacman -Rs [software package name] # 同时删除依赖<br>  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除<br>##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】<br>  sudo pacman -Sc<br>  sudo pacman -Scc # 更彻底的清理<br>  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看<br>————————————————</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#1. 第一部分使用 pacman-mirrors 更新官方软件源<br>##1.1  按照地区自动更新为最快最稳定的软件源镜像地址<br>  sudo pacman-mirrors –country China<br>##1.2. 恢复默认软件源操作<br>  sudo pacman-mirrors –interactive –default</p>\n<p>##1.3 软件源更新之后，我们一般会进行系统更新<br>  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作</p>\n<p>##1.4 查看所有可用的地区信息<br>  sudo pacman-mirrors -l<br>————————————————</p>\n<p>#2. 第二部分使用 pacman 管理软件<br>##2.1 同步并且更新你的系统<br>  sudo pacman -Syyu<br>##2.2 在软件仓库中搜索软件<br>  sudo pacman -Ss [software package name]<br>##2.3 查看已安装软件<br>  sudo pacman -Qs [software package name]<br>  sudo pacman -Qi [software package name] # 附带详细信息<br>  sudo pacman -Qii [software package name] # 附带更加详细的包信息<br>  sudo pacman -Ql # 列出所有安装的软件包<br>##2.4 查看软件的详细依赖<br>  sudo pactree [software package name]<br>##2.5 查看系统中那些没有被使用软件依赖包（orphans）<br>  sudo pacman -Qdt<br>##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove –purge】<br>  sudo pacman -Rs $(pacman -Qdtq)<br>##2.7 下载并安装软件包<br>  sudo pacman -Syu [software package name] # 从软件仓库安装<br>  yay -S [software package name]  # Packages from the AUR<br>  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装<br>  pacman -U <a href=\"http://www.examplepackage/repo/examplepkg.tar.xz\" target=\"_blank\" rel=\"noopener\">http://www.examplepackage/repo/examplepkg.tar.xz</a> # 从网络安装【非官方仓库】<br>##2.8 卸载软件<br>  sudo pacman -R [software package name]<br>  sudo pacman -Rs [software package name] # 同时删除依赖<br>  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除<br>##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】<br>  sudo pacman -Sc<br>  sudo pacman -Scc # 更彻底的清理<br>  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看<br>————————————————</p>\n"},{"title":"shell常用快捷键","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**方向          ＜－前               后 -＞**  \n**删除**  \nctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl  \nctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh  \nctrl + k     删除光标后面所有字符相当于VIM里d shift+$  \nctrl + u     删除光标前面所有字符相当于VIM里d shift+^  \nctrl + w     删除光标前一个单词相当于VIM里db  \nctrl + y     恢复ctrl+u上次执行时删除的字符  \nctrl + ?     撤消前一次输入  \nalt  + r     撤消前一次动作  \nalt  + d     删除光标所在位置的后单词  \n\n**移动**  \nctrl + a      将光标移动到命令行开头相当于VIM里shift+^  \nctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$  \nctrl + f      光标向后移动一个字符相当于VIM里l  \nctrl + b      光标向前移动一个字符相当于VIM里h  \nctrl + 方向键左键    光标移动到前一个单词开头  \nctrl + 方向键右键    光标移动到后一个单词结尾  \nctrl + x       在上次光标所在字符和当前光标所在字符之间跳转  \nalt  + f      跳到光标所在位置单词尾部  \n\n\n**替换**  \nctrl + t     将光标当前字符与前面一个字符替换  \nalt  + t     交换两个光标当前所处位置单词和光标前一个单词  \nalt  + u     把光标当前位置单词变为大写  \nalt  + l     把光标当前位置单词变为小写  \nalt  + c     把光标当前位置单词头一个字母变为大写  \n^oldstr^newstr    替换前一次命令中字符串  \n\n**历史命令编辑**  \nctrl + p    返回上一次输入命令字符  \nctrl + r    输入单词搜索历史命令  \nalt  + p    输入字符查找与字符相接近的历史命令  \nalt  + >    返回上一次执行命令  \n\n**其它**  \nctrl + s      锁住终端  \nctrl + q      解锁终端  \nctrl + l      清屏相当于命令clear  \nctrl + c      另起一行  \nctrl + i      类似TAB健补全功能  \nctrl + o      重复执行命令  \nalt  + 数字键  操作的次数  \n\n**实际操作:**  \n```bash\n-#c+l  清屏先  \nminuit@suse:~>str1 str2 str3  \n#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c\nminuit@suse:~> Str1 str2 str3\n#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人\n#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住\n#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。\nminuit@suse:~> Str1 STR2 str3\n#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单\n#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子\n#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]\n#标题:如何将数据文件中的每个词的第一个字母变成大写？\n#哈哈这个难不到我们吧因为我们已经会了a+c了\nminuit@suse:~> welcome to chinaunix!\n#不就是变个大小写吗按住c+a接着a+3+c看看效果\nminuit@suse:~> Welcome To Chinaunix!\n#GOOD很简单\n我们再来试试替换\nminuit@suse:~> Welcome To Chinaunix!\n#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t\nminuit@suse:~> To Welcome Chinaunix!\n#现在成这样子的了如果我用再按a+2+t那又变了一个样\nminuit@suse:~> Chinaunix!  Welcome To\n#好了来一点比较常用的\nminuit@suse:~>ls /tmp/\n #看看下面有些什么\nfile1 file2 file3 ..... ..\nminuit@suse:~>^ls^cd\n #现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间\ncd /tmp/\nminuit@suse:/tmp>\n#进入了tmp目录了\n```\n###跳转的命令就不试了大家自己体会试也看不见^_^   ###\n","source":"_posts/shell常用快捷键.md","raw":"---\ntitle: shell常用快捷键 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [shell,笔记,linux] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**方向          ＜－前               后 -＞**  \n**删除**  \nctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl  \nctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh  \nctrl + k     删除光标后面所有字符相当于VIM里d shift+$  \nctrl + u     删除光标前面所有字符相当于VIM里d shift+^  \nctrl + w     删除光标前一个单词相当于VIM里db  \nctrl + y     恢复ctrl+u上次执行时删除的字符  \nctrl + ?     撤消前一次输入  \nalt  + r     撤消前一次动作  \nalt  + d     删除光标所在位置的后单词  \n\n**移动**  \nctrl + a      将光标移动到命令行开头相当于VIM里shift+^  \nctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$  \nctrl + f      光标向后移动一个字符相当于VIM里l  \nctrl + b      光标向前移动一个字符相当于VIM里h  \nctrl + 方向键左键    光标移动到前一个单词开头  \nctrl + 方向键右键    光标移动到后一个单词结尾  \nctrl + x       在上次光标所在字符和当前光标所在字符之间跳转  \nalt  + f      跳到光标所在位置单词尾部  \n\n\n**替换**  \nctrl + t     将光标当前字符与前面一个字符替换  \nalt  + t     交换两个光标当前所处位置单词和光标前一个单词  \nalt  + u     把光标当前位置单词变为大写  \nalt  + l     把光标当前位置单词变为小写  \nalt  + c     把光标当前位置单词头一个字母变为大写  \n^oldstr^newstr    替换前一次命令中字符串  \n\n**历史命令编辑**  \nctrl + p    返回上一次输入命令字符  \nctrl + r    输入单词搜索历史命令  \nalt  + p    输入字符查找与字符相接近的历史命令  \nalt  + >    返回上一次执行命令  \n\n**其它**  \nctrl + s      锁住终端  \nctrl + q      解锁终端  \nctrl + l      清屏相当于命令clear  \nctrl + c      另起一行  \nctrl + i      类似TAB健补全功能  \nctrl + o      重复执行命令  \nalt  + 数字键  操作的次数  \n\n**实际操作:**  \n```bash\n-#c+l  清屏先  \nminuit@suse:~>str1 str2 str3  \n#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c\nminuit@suse:~> Str1 str2 str3\n#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人\n#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住\n#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。\nminuit@suse:~> Str1 STR2 str3\n#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单\n#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子\n#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]\n#标题:如何将数据文件中的每个词的第一个字母变成大写？\n#哈哈这个难不到我们吧因为我们已经会了a+c了\nminuit@suse:~> welcome to chinaunix!\n#不就是变个大小写吗按住c+a接着a+3+c看看效果\nminuit@suse:~> Welcome To Chinaunix!\n#GOOD很简单\n我们再来试试替换\nminuit@suse:~> Welcome To Chinaunix!\n#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t\nminuit@suse:~> To Welcome Chinaunix!\n#现在成这样子的了如果我用再按a+2+t那又变了一个样\nminuit@suse:~> Chinaunix!  Welcome To\n#好了来一点比较常用的\nminuit@suse:~>ls /tmp/\n #看看下面有些什么\nfile1 file2 file3 ..... ..\nminuit@suse:~>^ls^cd\n #现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间\ncd /tmp/\nminuit@suse:/tmp>\n#进入了tmp目录了\n```\n###跳转的命令就不试了大家自己体会试也看不见^_^   ###\n","slug":"shell常用快捷键","published":1,"updated":"2020-02-16T14:06:55.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4bs00071cno9s5q1swm","content":"<p><strong>方向          ＜－前               后 -＞</strong><br><strong>删除</strong><br>ctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl<br>ctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh<br>ctrl + k     删除光标后面所有字符相当于VIM里d shift+$<br>ctrl + u     删除光标前面所有字符相当于VIM里d shift+^<br>ctrl + w     删除光标前一个单词相当于VIM里db<br>ctrl + y     恢复ctrl+u上次执行时删除的字符<br>ctrl + ?     撤消前一次输入<br>alt  + r     撤消前一次动作<br>alt  + d     删除光标所在位置的后单词  </p>\n<p><strong>移动</strong><br>ctrl + a      将光标移动到命令行开头相当于VIM里shift+^<br>ctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$<br>ctrl + f      光标向后移动一个字符相当于VIM里l<br>ctrl + b      光标向前移动一个字符相当于VIM里h<br>ctrl + 方向键左键    光标移动到前一个单词开头<br>ctrl + 方向键右键    光标移动到后一个单词结尾<br>ctrl + x       在上次光标所在字符和当前光标所在字符之间跳转<br>alt  + f      跳到光标所在位置单词尾部  </p>\n<p><strong>替换</strong><br>ctrl + t     将光标当前字符与前面一个字符替换<br>alt  + t     交换两个光标当前所处位置单词和光标前一个单词<br>alt  + u     把光标当前位置单词变为大写<br>alt  + l     把光标当前位置单词变为小写<br>alt  + c     把光标当前位置单词头一个字母变为大写<br>^oldstr^newstr    替换前一次命令中字符串  </p>\n<p><strong>历史命令编辑</strong><br>ctrl + p    返回上一次输入命令字符<br>ctrl + r    输入单词搜索历史命令<br>alt  + p    输入字符查找与字符相接近的历史命令<br>alt  + &gt;    返回上一次执行命令  </p>\n<p><strong>其它</strong><br>ctrl + s      锁住终端<br>ctrl + q      解锁终端<br>ctrl + l      清屏相当于命令clear<br>ctrl + c      另起一行<br>ctrl + i      类似TAB健补全功能<br>ctrl + o      重复执行命令<br>alt  + 数字键  操作的次数  </p>\n<p><strong>实际操作:</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"comment\">#c+l  清屏先  </span></span><br><span class=\"line\">minuit@suse:~&gt;str1 str2 str3  </span><br><span class=\"line\"><span class=\"comment\">#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 str2 str3</span><br><span class=\"line\"><span class=\"comment\">#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人</span></span><br><span class=\"line\"><span class=\"comment\">#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住</span></span><br><span class=\"line\"><span class=\"comment\">#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 STR2 str3</span><br><span class=\"line\"><span class=\"comment\">#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单</span></span><br><span class=\"line\"><span class=\"comment\">#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子</span></span><br><span class=\"line\"><span class=\"comment\">#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]</span></span><br><span class=\"line\"><span class=\"comment\">#标题:如何将数据文件中的每个词的第一个字母变成大写？</span></span><br><span class=\"line\"><span class=\"comment\">#哈哈这个难不到我们吧因为我们已经会了a+c了</span></span><br><span class=\"line\">minuit@suse:~&gt; welcome to chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#不就是变个大小写吗按住c+a接着a+3+c看看效果</span></span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#GOOD很简单</span></span><br><span class=\"line\">我们再来试试替换</span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t</span></span><br><span class=\"line\">minuit@suse:~&gt; To Welcome Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#现在成这样子的了如果我用再按a+2+t那又变了一个样</span></span><br><span class=\"line\">minuit@suse:~&gt; Chinaunix!  Welcome To</span><br><span class=\"line\"><span class=\"comment\">#好了来一点比较常用的</span></span><br><span class=\"line\">minuit@suse:~&gt;ls /tmp/</span><br><span class=\"line\"> <span class=\"comment\">#看看下面有些什么</span></span><br><span class=\"line\">file1 file2 file3 ..... ..</span><br><span class=\"line\">minuit@suse:~&gt;^ls^<span class=\"built_in\">cd</span></span><br><span class=\"line\"> <span class=\"comment\">#现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/</span><br><span class=\"line\">minuit@suse:/tmp&gt;</span><br><span class=\"line\"><span class=\"comment\">#进入了tmp目录了</span></span><br></pre></td></tr></table></figure>\n<p>###跳转的命令就不试了大家自己体会试也看不见^_^   ###</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>方向          ＜－前               后 -＞</strong><br><strong>删除</strong><br>ctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl<br>ctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh<br>ctrl + k     删除光标后面所有字符相当于VIM里d shift+$<br>ctrl + u     删除光标前面所有字符相当于VIM里d shift+^<br>ctrl + w     删除光标前一个单词相当于VIM里db<br>ctrl + y     恢复ctrl+u上次执行时删除的字符<br>ctrl + ?     撤消前一次输入<br>alt  + r     撤消前一次动作<br>alt  + d     删除光标所在位置的后单词  </p>\n<p><strong>移动</strong><br>ctrl + a      将光标移动到命令行开头相当于VIM里shift+^<br>ctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$<br>ctrl + f      光标向后移动一个字符相当于VIM里l<br>ctrl + b      光标向前移动一个字符相当于VIM里h<br>ctrl + 方向键左键    光标移动到前一个单词开头<br>ctrl + 方向键右键    光标移动到后一个单词结尾<br>ctrl + x       在上次光标所在字符和当前光标所在字符之间跳转<br>alt  + f      跳到光标所在位置单词尾部  </p>\n<p><strong>替换</strong><br>ctrl + t     将光标当前字符与前面一个字符替换<br>alt  + t     交换两个光标当前所处位置单词和光标前一个单词<br>alt  + u     把光标当前位置单词变为大写<br>alt  + l     把光标当前位置单词变为小写<br>alt  + c     把光标当前位置单词头一个字母变为大写<br>^oldstr^newstr    替换前一次命令中字符串  </p>\n<p><strong>历史命令编辑</strong><br>ctrl + p    返回上一次输入命令字符<br>ctrl + r    输入单词搜索历史命令<br>alt  + p    输入字符查找与字符相接近的历史命令<br>alt  + &gt;    返回上一次执行命令  </p>\n<p><strong>其它</strong><br>ctrl + s      锁住终端<br>ctrl + q      解锁终端<br>ctrl + l      清屏相当于命令clear<br>ctrl + c      另起一行<br>ctrl + i      类似TAB健补全功能<br>ctrl + o      重复执行命令<br>alt  + 数字键  操作的次数  </p>\n<p><strong>实际操作:</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"comment\">#c+l  清屏先  </span></span><br><span class=\"line\">minuit@suse:~&gt;str1 str2 str3  </span><br><span class=\"line\"><span class=\"comment\">#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 str2 str3</span><br><span class=\"line\"><span class=\"comment\">#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人</span></span><br><span class=\"line\"><span class=\"comment\">#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住</span></span><br><span class=\"line\"><span class=\"comment\">#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 STR2 str3</span><br><span class=\"line\"><span class=\"comment\">#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单</span></span><br><span class=\"line\"><span class=\"comment\">#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子</span></span><br><span class=\"line\"><span class=\"comment\">#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]</span></span><br><span class=\"line\"><span class=\"comment\">#标题:如何将数据文件中的每个词的第一个字母变成大写？</span></span><br><span class=\"line\"><span class=\"comment\">#哈哈这个难不到我们吧因为我们已经会了a+c了</span></span><br><span class=\"line\">minuit@suse:~&gt; welcome to chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#不就是变个大小写吗按住c+a接着a+3+c看看效果</span></span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#GOOD很简单</span></span><br><span class=\"line\">我们再来试试替换</span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t</span></span><br><span class=\"line\">minuit@suse:~&gt; To Welcome Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#现在成这样子的了如果我用再按a+2+t那又变了一个样</span></span><br><span class=\"line\">minuit@suse:~&gt; Chinaunix!  Welcome To</span><br><span class=\"line\"><span class=\"comment\">#好了来一点比较常用的</span></span><br><span class=\"line\">minuit@suse:~&gt;ls /tmp/</span><br><span class=\"line\"> <span class=\"comment\">#看看下面有些什么</span></span><br><span class=\"line\">file1 file2 file3 ..... ..</span><br><span class=\"line\">minuit@suse:~&gt;^ls^<span class=\"built_in\">cd</span></span><br><span class=\"line\"> <span class=\"comment\">#现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/</span><br><span class=\"line\">minuit@suse:/tmp&gt;</span><br><span class=\"line\"><span class=\"comment\">#进入了tmp目录了</span></span><br></pre></td></tr></table></figure>\n<p>###跳转的命令就不试了大家自己体会试也看不见^_^   ###</p>\n"},{"title":"postName","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n以下是正文\n","source":"_posts/templates.md","raw":"---\ntitle: postName #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n以下是正文\n","slug":"templates","published":1,"updated":"2020-02-16T14:07:23.889Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4bx000a1cno1ks75ubx","content":"<p>以下是正文</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以下是正文</p>\n"},{"title":"vim笔记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**标记功能在浏览文件时非常有用**\n这个功能分为几种状态\n\n    m{a-zA-Z}   用标记\n    `{a-z}  文件\n    `{A-Z}  所有文件\n    `{0-9}  上次推出的位置\n    ``      至上次跳转之前的位置\n    `\"      至上次编辑此文件的位置\n    :marks  列出所有活动的标记\n\n**映射在文件修改时很有用**\n\n这个功能可映射几种模式\n\n\t:map\t\t普通，可视模式及操作符等待模式\n\t:vmap\t\t可视模式\n\t:nmap\t\t普通模式\n\t:omap\t\t操作符等待模式\n\t:map!\t\t插入和命令行模式\n\t:imap\t\t插入模式\n\t:cmap\t\t命令行模式\n\n**删 除 映 射**\n要删除一个映射，使用 \":unmap\" 命令。同样，删除映射的命令也和运行模式相关:\n\n\t:unmap\t\t普通，可视和操作符等待模式\n\t:vunmap\t\t可视模式\n\t:nunmap\t\t普通模式\n\t:ounmap\t\t操作符等待模式\n\t:unmap!\t\t插入和命令行模式\n\t:iunmap\t\t插入模式\n\t:cunmap\t\t命令行模式\n\nmap \\p {映射的键组合}\n这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操\n作的时候就很有用\n\n**重复操作及宏录制**\n\n    q{a-z}   开始录制\n    :执行vim操作:registers  (可以查看这些操作)\n    q   再次按q结束录制\n    @{a-z}  播放操作\n    N@a   重复10次名字为a的宏\n","source":"_posts/vim简记.md","raw":"---\ntitle: vim笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [vim,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**标记功能在浏览文件时非常有用**\n这个功能分为几种状态\n\n    m{a-zA-Z}   用标记\n    `{a-z}  文件\n    `{A-Z}  所有文件\n    `{0-9}  上次推出的位置\n    ``      至上次跳转之前的位置\n    `\"      至上次编辑此文件的位置\n    :marks  列出所有活动的标记\n\n**映射在文件修改时很有用**\n\n这个功能可映射几种模式\n\n\t:map\t\t普通，可视模式及操作符等待模式\n\t:vmap\t\t可视模式\n\t:nmap\t\t普通模式\n\t:omap\t\t操作符等待模式\n\t:map!\t\t插入和命令行模式\n\t:imap\t\t插入模式\n\t:cmap\t\t命令行模式\n\n**删 除 映 射**\n要删除一个映射，使用 \":unmap\" 命令。同样，删除映射的命令也和运行模式相关:\n\n\t:unmap\t\t普通，可视和操作符等待模式\n\t:vunmap\t\t可视模式\n\t:nunmap\t\t普通模式\n\t:ounmap\t\t操作符等待模式\n\t:unmap!\t\t插入和命令行模式\n\t:iunmap\t\t插入模式\n\t:cunmap\t\t命令行模式\n\nmap \\p {映射的键组合}\n这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操\n作的时候就很有用\n\n**重复操作及宏录制**\n\n    q{a-z}   开始录制\n    :执行vim操作:registers  (可以查看这些操作)\n    q   再次按q结束录制\n    @{a-z}  播放操作\n    N@a   重复10次名字为a的宏\n","slug":"vim简记","published":1,"updated":"2020-02-16T14:08:29.205Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4bz000b1cnoam7y9k0i","content":"<p><strong>标记功能在浏览文件时非常有用</strong><br>这个功能分为几种状态</p>\n<pre><code>m{a-zA-Z}   用标记\n`{a-z}  文件\n`{A-Z}  所有文件\n`{0-9}  上次推出的位置\n``      至上次跳转之前的位置\n`&quot;      至上次编辑此文件的位置\n:marks  列出所有活动的标记</code></pre><p><strong>映射在文件修改时很有用</strong></p>\n<p>这个功能可映射几种模式</p>\n<pre><code>:map        普通，可视模式及操作符等待模式\n:vmap        可视模式\n:nmap        普通模式\n:omap        操作符等待模式\n:map!        插入和命令行模式\n:imap        插入模式\n:cmap        命令行模式</code></pre><p><strong>删 除 映 射</strong><br>要删除一个映射，使用 “:unmap” 命令。同样，删除映射的命令也和运行模式相关:</p>\n<pre><code>:unmap        普通，可视和操作符等待模式\n:vunmap        可视模式\n:nunmap        普通模式\n:ounmap        操作符等待模式\n:unmap!        插入和命令行模式\n:iunmap        插入模式\n:cunmap        命令行模式</code></pre><p>map \\p {映射的键组合}<br>这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操<br>作的时候就很有用</p>\n<p><strong>重复操作及宏录制</strong></p>\n<pre><code>q{a-z}   开始录制\n:执行vim操作:registers  (可以查看这些操作)\nq   再次按q结束录制\n@{a-z}  播放操作\nN@a   重复10次名字为a的宏</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>标记功能在浏览文件时非常有用</strong><br>这个功能分为几种状态</p>\n<pre><code>m{a-zA-Z}   用标记\n`{a-z}  文件\n`{A-Z}  所有文件\n`{0-9}  上次推出的位置\n``      至上次跳转之前的位置\n`&quot;      至上次编辑此文件的位置\n:marks  列出所有活动的标记</code></pre><p><strong>映射在文件修改时很有用</strong></p>\n<p>这个功能可映射几种模式</p>\n<pre><code>:map        普通，可视模式及操作符等待模式\n:vmap        可视模式\n:nmap        普通模式\n:omap        操作符等待模式\n:map!        插入和命令行模式\n:imap        插入模式\n:cmap        命令行模式</code></pre><p><strong>删 除 映 射</strong><br>要删除一个映射，使用 “:unmap” 命令。同样，删除映射的命令也和运行模式相关:</p>\n<pre><code>:unmap        普通，可视和操作符等待模式\n:vunmap        可视模式\n:nunmap        普通模式\n:ounmap        操作符等待模式\n:unmap!        插入和命令行模式\n:iunmap        插入模式\n:cunmap        命令行模式</code></pre><p>map \\p {映射的键组合}<br>这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操<br>作的时候就很有用</p>\n<p><strong>重复操作及宏录制</strong></p>\n<pre><code>q{a-z}   开始录制\n:执行vim操作:registers  (可以查看这些操作)\nq   再次按q结束录制\n@{a-z}  播放操作\nN@a   重复10次名字为a的宏</code></pre>"},{"title":"python内建函数列表","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n# python内建函数列表\n\n**数学运算类**\n```python\nabs(x)                      求绝对值\ncomplex([real[, imag]]) \t创建一个复数\ndivmod(a, b) \t            分别取商和余数\nfloat([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回0.0\nint([x[, base]])  \t        将一个字符转换为int类型，base表示进制\nlong([x[, base]])  \t        将一个字符转换为long类型\npow(x, y[, z])  \t        返回x的y次幂\nrange([start], stop[, step])\n                            产生一个序列，默认从0开始\nround(x[, n])  \t            四舍五入\nsum(iterable[, start])  \t对集合求和\noct(x) \t                    将一个数字转化为8进制\nhex(x) \t                    将整数x转换为16进制字符串\nchr(i) \t                    返回整数i对应的ASCII字符\nbin(x) \t                    将整数x转换为二进制字符串\nbool([x]) \t                将x转换为Boolean类型k\n```\n\n**集合操作类**\n```python\nbasestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断\nformat(value [, format_spec])\n                            格式化输出字符串格式化的参数顺序从0开始，如“I am {0},I like {1}”\nunichr(i) \t                返回给定int类型的unicode\nenumerate(sequence [, start = 0])\n                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple\niter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符\nmax(iterable[, args...][key])\n                            返回集合中的最大值\nmin(iterable[, args...][key])\n                            返回集合中的最小值\ndict([arg]) \t            创建数据字典\nlist([iterable])  \t        将一个集合类转换为另外一个集合类\nset() \t                    set对象实例化\nfrozenset([iterable]) \t    产生一个不可变的set\nstr([object])  \t            转换为string类型\nsorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序\ntuple([iterable])  \t        生成一个tuple类型\nxrange([start], stop[, step])\n                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一\n                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列\n                            表很大时，这个特性能为我们节省内存\n```\n\n**逻辑判断**\n```python\nall(iterable)               iterable为True或迭代起为空返回True\nany(iterable)               如果iterable任一元素为真返回True如果迭代器为空返回False\ncmp(x, y) \t                如果x < y ,返回负数；x == y, 返回0；x > y,返回正数\n\n**反射**\n\ncallable(object)            检查对象object是否可调用\ncompile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)\n                            将source编译为代码或者AST对象。代码对象能够通过exec语句来执行或者eval()进行求值。\n                            1、参数source：字符串或者AST（Abstract Syntax Trees）对象。\n                            2、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。\n                            3、参数model：指定编译代码的种类。可以指定为 ‘exec’,’eval’,’single’。\n                            4、参数flag和dont_inherit：这两个参数暂不介绍\n dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。\n                            1、不带参数时，返回当前范围内的变量、方法和定义的类型列表；\n                            2、带参数时，返回参数的属性、方法列表。\n                            3、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。\n                            4、如果参数不包含__dir__()，该方法将最大限度地收集参数信息\ndelattr(object, name)       删除object对象名为name的属性\neval(expression, globals=None, locals=None)\n                            计算表达式expression的值\nexec(object[, globals[, locals]])\n                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。\n                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）\nfilter(function, iterable)  构造一个序列，等价于[ item for item in iterable if function(item)]\n                            1、参数function：返回值为True或False的函数，可以为None\n                            2、参数iterable：序列或可迭代对象\ngetattr(object, name[, default])\n                            获取一个类的属性\nglobals()                   返回表示当前全局符号表的字典\nhasattr(object, name)       判断对象object是否包含名为name的特性\nhash(object)                返回该对象的哈希值（如果它有的话）\nid(object)                  返回对象的“标识值”\nisinstance(object, classinfo)\n                            判断object是否是class的实例\nissubclass(class, classinfo)\n                            判断是否是子类\nlen(s)  \t                返回集合长度\nlocals()  \t                返回当前的变量列表\nmap(function, iterable, ...)\n                            遍历每个元素，执行function操作\nmemoryview(obj)  \t        返回一个内存镜像类型的对象\nnext(iterator[, default])  \t类似于iterator.next()\nproperty([fget[, fset[, fdel[, doc]]]])\n                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter\nreduce(function, iterable[, initializer])\n                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推\nreload(module)  \t        重新加载模块\nsetattr(object, name, value)\n                            设置属性值\nrepr(object)  \t            将一个对象变幻为可打印的格式\nslice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象\nstaticmethod \t            声明静态方法，是个注解\nsuper(type[, object-or-type])\n                            引用父类\ntype(object) \t            返回该object的类型\nvars([object])  \t        返回对象的变量，若无参数与dict()方法类似\nbytearray([source [, encoding [, errors]]])\n                            返回一个byte数组\n                            1、如果source为整数，则返回一个长度为source的初始化数组；\n                            2、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；\n                            3、如果source为可迭代类型，则元素必须为[0 ,255]中的整数；\n                            4、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.\nzip(*iterables)             创建一个聚合了来自每个\n```\n\n**IO操作**\n```python\nfile(filename [, mode [, bufsize]])\n                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，\n                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode\n                            参数中，将允许对文件同时进行读写操作\n                            1、参数filename：文件名称。\n                            2、参数mode：'r'（读）、'w'（写）、'a'（追加）。\n                            3、参数bufsize：如果为0表示不进行缓冲，如果为1表示进行行缓冲，如果是一个大于1的数表示缓冲区的大小 。\ninput([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入\nopen(name[, mode[, buffering]])\n                            打开文件与file有什么不同？推荐使用open\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\n                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。\n                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出\nraw_input([prompt])  \t    设置输入，输入都是作为字符串处理\n```\n\n**其他**\n\nhelp()--帮助信息\n\n[参照python3.7.4中文官方说明](https://docs.python.org/zh-cn/3.7/library/functions.html#hash)\n\n**__init__.py文件**\n\n这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．\n当我们导入一个包的时候实际上是导入了它的__init__.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．\n```python\n# __init__.py\n__all__ = ['os', 'sys', 're', 'urllib']\n\n# a.py\nfrom package import *\n```\n这时就会把注册在__init__.py文件中__all__列表中的模块和包导入到当前文件中来.\n\n**python 返回函数的理解**\n\n返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是\n不会立即执行而是等到调用的时候才执行优点是可以延迟计算\n\n**文件操作**\n\n```python\nwith open('name','r+') as f:\n    f.seek(0)   # 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空\n    f.truncate()\n```\n","source":"_posts/python简记.md","raw":"---\ntitle: python内建函数列表 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [python,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n# python内建函数列表\n\n**数学运算类**\n```python\nabs(x)                      求绝对值\ncomplex([real[, imag]]) \t创建一个复数\ndivmod(a, b) \t            分别取商和余数\nfloat([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回0.0\nint([x[, base]])  \t        将一个字符转换为int类型，base表示进制\nlong([x[, base]])  \t        将一个字符转换为long类型\npow(x, y[, z])  \t        返回x的y次幂\nrange([start], stop[, step])\n                            产生一个序列，默认从0开始\nround(x[, n])  \t            四舍五入\nsum(iterable[, start])  \t对集合求和\noct(x) \t                    将一个数字转化为8进制\nhex(x) \t                    将整数x转换为16进制字符串\nchr(i) \t                    返回整数i对应的ASCII字符\nbin(x) \t                    将整数x转换为二进制字符串\nbool([x]) \t                将x转换为Boolean类型k\n```\n\n**集合操作类**\n```python\nbasestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断\nformat(value [, format_spec])\n                            格式化输出字符串格式化的参数顺序从0开始，如“I am {0},I like {1}”\nunichr(i) \t                返回给定int类型的unicode\nenumerate(sequence [, start = 0])\n                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple\niter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符\nmax(iterable[, args...][key])\n                            返回集合中的最大值\nmin(iterable[, args...][key])\n                            返回集合中的最小值\ndict([arg]) \t            创建数据字典\nlist([iterable])  \t        将一个集合类转换为另外一个集合类\nset() \t                    set对象实例化\nfrozenset([iterable]) \t    产生一个不可变的set\nstr([object])  \t            转换为string类型\nsorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序\ntuple([iterable])  \t        生成一个tuple类型\nxrange([start], stop[, step])\n                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一\n                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列\n                            表很大时，这个特性能为我们节省内存\n```\n\n**逻辑判断**\n```python\nall(iterable)               iterable为True或迭代起为空返回True\nany(iterable)               如果iterable任一元素为真返回True如果迭代器为空返回False\ncmp(x, y) \t                如果x < y ,返回负数；x == y, 返回0；x > y,返回正数\n\n**反射**\n\ncallable(object)            检查对象object是否可调用\ncompile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)\n                            将source编译为代码或者AST对象。代码对象能够通过exec语句来执行或者eval()进行求值。\n                            1、参数source：字符串或者AST（Abstract Syntax Trees）对象。\n                            2、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。\n                            3、参数model：指定编译代码的种类。可以指定为 ‘exec’,’eval’,’single’。\n                            4、参数flag和dont_inherit：这两个参数暂不介绍\n dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。\n                            1、不带参数时，返回当前范围内的变量、方法和定义的类型列表；\n                            2、带参数时，返回参数的属性、方法列表。\n                            3、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。\n                            4、如果参数不包含__dir__()，该方法将最大限度地收集参数信息\ndelattr(object, name)       删除object对象名为name的属性\neval(expression, globals=None, locals=None)\n                            计算表达式expression的值\nexec(object[, globals[, locals]])\n                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。\n                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）\nfilter(function, iterable)  构造一个序列，等价于[ item for item in iterable if function(item)]\n                            1、参数function：返回值为True或False的函数，可以为None\n                            2、参数iterable：序列或可迭代对象\ngetattr(object, name[, default])\n                            获取一个类的属性\nglobals()                   返回表示当前全局符号表的字典\nhasattr(object, name)       判断对象object是否包含名为name的特性\nhash(object)                返回该对象的哈希值（如果它有的话）\nid(object)                  返回对象的“标识值”\nisinstance(object, classinfo)\n                            判断object是否是class的实例\nissubclass(class, classinfo)\n                            判断是否是子类\nlen(s)  \t                返回集合长度\nlocals()  \t                返回当前的变量列表\nmap(function, iterable, ...)\n                            遍历每个元素，执行function操作\nmemoryview(obj)  \t        返回一个内存镜像类型的对象\nnext(iterator[, default])  \t类似于iterator.next()\nproperty([fget[, fset[, fdel[, doc]]]])\n                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter\nreduce(function, iterable[, initializer])\n                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推\nreload(module)  \t        重新加载模块\nsetattr(object, name, value)\n                            设置属性值\nrepr(object)  \t            将一个对象变幻为可打印的格式\nslice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象\nstaticmethod \t            声明静态方法，是个注解\nsuper(type[, object-or-type])\n                            引用父类\ntype(object) \t            返回该object的类型\nvars([object])  \t        返回对象的变量，若无参数与dict()方法类似\nbytearray([source [, encoding [, errors]]])\n                            返回一个byte数组\n                            1、如果source为整数，则返回一个长度为source的初始化数组；\n                            2、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；\n                            3、如果source为可迭代类型，则元素必须为[0 ,255]中的整数；\n                            4、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.\nzip(*iterables)             创建一个聚合了来自每个\n```\n\n**IO操作**\n```python\nfile(filename [, mode [, bufsize]])\n                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，\n                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode\n                            参数中，将允许对文件同时进行读写操作\n                            1、参数filename：文件名称。\n                            2、参数mode：'r'（读）、'w'（写）、'a'（追加）。\n                            3、参数bufsize：如果为0表示不进行缓冲，如果为1表示进行行缓冲，如果是一个大于1的数表示缓冲区的大小 。\ninput([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入\nopen(name[, mode[, buffering]])\n                            打开文件与file有什么不同？推荐使用open\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\n                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。\n                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出\nraw_input([prompt])  \t    设置输入，输入都是作为字符串处理\n```\n\n**其他**\n\nhelp()--帮助信息\n\n[参照python3.7.4中文官方说明](https://docs.python.org/zh-cn/3.7/library/functions.html#hash)\n\n**__init__.py文件**\n\n这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．\n当我们导入一个包的时候实际上是导入了它的__init__.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．\n```python\n# __init__.py\n__all__ = ['os', 'sys', 're', 'urllib']\n\n# a.py\nfrom package import *\n```\n这时就会把注册在__init__.py文件中__all__列表中的模块和包导入到当前文件中来.\n\n**python 返回函数的理解**\n\n返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是\n不会立即执行而是等到调用的时候才执行优点是可以延迟计算\n\n**文件操作**\n\n```python\nwith open('name','r+') as f:\n    f.seek(0)   # 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空\n    f.truncate()\n```\n","slug":"python简记","published":1,"updated":"2020-02-16T14:05:25.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6p5v4k7001a1cno9mcb4k7k","content":"<h1 id=\"python内建函数列表\"><a href=\"#python内建函数列表\" class=\"headerlink\" title=\"python内建函数列表\"></a>python内建函数列表</h1><p><strong>数学运算类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abs(x)                      求绝对值</span><br><span class=\"line\">complex([real[, imag]]) \t创建一个复数</span><br><span class=\"line\">divmod(a, b) \t            分别取商和余数</span><br><span class=\"line\">float([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回<span class=\"number\">0.0</span></span><br><span class=\"line\">int([x[, base]])  \t        将一个字符转换为int类型，base表示进制</span><br><span class=\"line\">long([x[, base]])  \t        将一个字符转换为long类型</span><br><span class=\"line\">pow(x, y[, z])  \t        返回x的y次幂</span><br><span class=\"line\">range([start], stop[, step])</span><br><span class=\"line\">                            产生一个序列，默认从<span class=\"number\">0</span>开始</span><br><span class=\"line\">round(x[, n])  \t            四舍五入</span><br><span class=\"line\">sum(iterable[, start])  \t对集合求和</span><br><span class=\"line\">oct(x) \t                    将一个数字转化为<span class=\"number\">8</span>进制</span><br><span class=\"line\">hex(x) \t                    将整数x转换为<span class=\"number\">16</span>进制字符串</span><br><span class=\"line\">chr(i) \t                    返回整数i对应的ASCII字符</span><br><span class=\"line\">bin(x) \t                    将整数x转换为二进制字符串</span><br><span class=\"line\">bool([x]) \t                将x转换为Boolean类型k</span><br></pre></td></tr></table></figure>\n\n<p><strong>集合操作类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">basestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断</span><br><span class=\"line\">format(value [, format_spec])</span><br><span class=\"line\">                            格式化输出字符串格式化的参数顺序从<span class=\"number\">0</span>开始，如“I am &#123;<span class=\"number\">0</span>&#125;,I like &#123;<span class=\"number\">1</span>&#125;”</span><br><span class=\"line\">unichr(i) \t                返回给定int类型的unicode</span><br><span class=\"line\">enumerate(sequence [, start = <span class=\"number\">0</span>])</span><br><span class=\"line\">                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple</span><br><span class=\"line\">iter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符</span><br><span class=\"line\">max(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最大值</span><br><span class=\"line\">min(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最小值</span><br><span class=\"line\">dict([arg]) \t            创建数据字典</span><br><span class=\"line\">list([iterable])  \t        将一个集合类转换为另外一个集合类</span><br><span class=\"line\">set() \t                    set对象实例化</span><br><span class=\"line\">frozenset([iterable]) \t    产生一个不可变的set</span><br><span class=\"line\">str([object])  \t            转换为string类型</span><br><span class=\"line\">sorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序</span><br><span class=\"line\">tuple([iterable])  \t        生成一个tuple类型</span><br><span class=\"line\">xrange([start], stop[, step])</span><br><span class=\"line\">                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一</span><br><span class=\"line\">                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列</span><br><span class=\"line\">                            表很大时，这个特性能为我们节省内存</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑判断</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all(iterable)               iterable为<span class=\"literal\">True</span>或迭代起为空返回<span class=\"literal\">True</span></span><br><span class=\"line\">any(iterable)               如果iterable任一元素为真返回<span class=\"literal\">True</span>如果迭代器为空返回<span class=\"literal\">False</span></span><br><span class=\"line\">cmp(x, y) \t                如果x &lt; y ,返回负数；x == y, 返回<span class=\"number\">0</span>；x &gt; y,返回正数</span><br><span class=\"line\"></span><br><span class=\"line\">**反射**</span><br><span class=\"line\"></span><br><span class=\"line\">callable(object)            检查对象object是否可调用</span><br><span class=\"line\">compile(source, filename, mode, flags=<span class=\"number\">0</span>, dont_inherit=<span class=\"literal\">False</span>, optimize=<span class=\"number\">-1</span>)</span><br><span class=\"line\">                            将source编译为代码或者AST对象。代码对象能够通过<span class=\"keyword\">exec</span>语句来执行或者eval()进行求值。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数source：字符串或者AST（Abstract Syntax Trees）对象。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数model：指定编译代码的种类。可以指定为 ‘<span class=\"keyword\">exec</span>’,’eval’,’single’。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、参数flag和dont_inherit：这两个参数暂不介绍</span><br><span class=\"line\"> dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、不带参数时，返回当前范围内的变量、方法和定义的类型列表；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、带参数时，返回参数的属性、方法列表。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果参数不包含__dir__()，该方法将最大限度地收集参数信息</span><br><span class=\"line\">delattr(object, name)       删除object对象名为name的属性</span><br><span class=\"line\">eval(expression, globals=<span class=\"literal\">None</span>, locals=<span class=\"literal\">None</span>)</span><br><span class=\"line\">                            计算表达式expression的值</span><br><span class=\"line\">exec(object[, globals[, locals]])</span><br><span class=\"line\">                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。</span><br><span class=\"line\">                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）</span><br><span class=\"line\">filter(function, iterable)  构造一个序列，等价于[ item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> iterable <span class=\"keyword\">if</span> function(item)]</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数function：返回值为<span class=\"literal\">True</span>或<span class=\"literal\">False</span>的函数，可以为<span class=\"literal\">None</span></span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数iterable：序列或可迭代对象</span><br><span class=\"line\">getattr(object, name[, default])</span><br><span class=\"line\">                            获取一个类的属性</span><br><span class=\"line\">globals()                   返回表示当前全局符号表的字典</span><br><span class=\"line\">hasattr(object, name)       判断对象object是否包含名为name的特性</span><br><span class=\"line\">hash(object)                返回该对象的哈希值（如果它有的话）</span><br><span class=\"line\">id(object)                  返回对象的“标识值”</span><br><span class=\"line\">isinstance(object, classinfo)</span><br><span class=\"line\">                            判断object是否是<span class=\"class\"><span class=\"keyword\">class</span>的实例</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">issubclass</span><span class=\"params\">(class, classinfo)</span></span></span><br><span class=\"line\"><span class=\"class\">                            判断是否是子类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">len</span><span class=\"params\">(s)</span>  \t                返回集合长度</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">locals</span><span class=\"params\">()</span>  \t                返回当前的变量列表</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">map</span><span class=\"params\">(function, iterable, ...)</span></span></span><br><span class=\"line\"><span class=\"class\">                            遍历每个元素，执行<span class=\"title\">function</span>操作</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">memoryview</span><span class=\"params\">(obj)</span>  \t        返回一个内存镜像类型的对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">next</span><span class=\"params\">(iterator[, default])</span>  \t类似于<span class=\"title\">iterator</span>.<span class=\"title\">next</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">property</span><span class=\"params\">([fget[, fset[, fdel[, doc]]]])</span></span></span><br><span class=\"line\">                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter</span><br><span class=\"line\">reduce(function, iterable[, initializer])</span><br><span class=\"line\">                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推</span><br><span class=\"line\">reload(module)  \t        重新加载模块</span><br><span class=\"line\">setattr(object, name, value)</span><br><span class=\"line\">                            设置属性值</span><br><span class=\"line\">repr(object)  \t            将一个对象变幻为可打印的格式</span><br><span class=\"line\">slice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象</span><br><span class=\"line\">staticmethod \t            声明静态方法，是个注解</span><br><span class=\"line\">super(type[, object-<span class=\"keyword\">or</span>-type])</span><br><span class=\"line\">                            引用父类</span><br><span class=\"line\">type(object) \t            返回该object的类型</span><br><span class=\"line\">vars([object])  \t        返回对象的变量，若无参数与dict()方法类似</span><br><span class=\"line\">bytearray([source [, encoding [, errors]]])</span><br><span class=\"line\">                            返回一个byte数组</span><br><span class=\"line\">                            <span class=\"number\">1</span>、如果source为整数，则返回一个长度为source的初始化数组；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果source为可迭代类型，则元素必须为[<span class=\"number\">0</span> ,<span class=\"number\">255</span>]中的整数；</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.</span><br><span class=\"line\">zip(*iterables)             创建一个聚合了来自每个</span><br></pre></td></tr></table></figure>\n\n<p><strong>IO操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file(filename [, mode [, bufsize]])</span><br><span class=\"line\">                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，</span><br><span class=\"line\">                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode</span><br><span class=\"line\">                            参数中，将允许对文件同时进行读写操作</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数filename：文件名称。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数mode：<span class=\"string\">'r'</span>（读）、<span class=\"string\">'w'</span>（写）、<span class=\"string\">'a'</span>（追加）。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数bufsize：如果为<span class=\"number\">0</span>表示不进行缓冲，如果为<span class=\"number\">1</span>表示进行行缓冲，如果是一个大于<span class=\"number\">1</span>的数表示缓冲区的大小 。</span><br><span class=\"line\">input([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入</span><br><span class=\"line\">open(name[, mode[, buffering]])</span><br><span class=\"line\">                            打开文件与file有什么不同？推荐使用open</span><br><span class=\"line\">print(*objects, sep=<span class=\"string\">' '</span>, end=<span class=\"string\">'\\n'</span>, file=sys.stdout, flush=<span class=\"literal\">False</span>)</span><br><span class=\"line\">                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。</span><br><span class=\"line\">                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出</span><br><span class=\"line\">raw_input([prompt])  \t    设置输入，输入都是作为字符串处理</span><br></pre></td></tr></table></figure>\n\n<p><strong>其他</strong></p>\n<p>help()–帮助信息</p>\n<p><a href=\"https://docs.python.org/zh-cn/3.7/library/functions.html#hash\" target=\"_blank\" rel=\"noopener\">参照python3.7.4中文官方说明</a></p>\n<p><strong><strong>init</strong>.py文件</strong></p>\n<p>这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．<br>当我们导入一个包的时候实际上是导入了它的<strong>init</strong>.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># __init__.py</span></span><br><span class=\"line\">__all__ = [<span class=\"string\">'os'</span>, <span class=\"string\">'sys'</span>, <span class=\"string\">'re'</span>, <span class=\"string\">'urllib'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>这时就会把注册在<strong>init</strong>.py文件中<strong>all</strong>列表中的模块和包导入到当前文件中来.</p>\n<p><strong>python 返回函数的理解</strong></p>\n<p>返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是<br>不会立即执行而是等到调用的时候才执行优点是可以延迟计算</p>\n<p><strong>文件操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'name'</span>,<span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.seek(<span class=\"number\">0</span>)   <span class=\"comment\"># 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空</span></span><br><span class=\"line\">    f.truncate()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"python内建函数列表\"><a href=\"#python内建函数列表\" class=\"headerlink\" title=\"python内建函数列表\"></a>python内建函数列表</h1><p><strong>数学运算类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abs(x)                      求绝对值</span><br><span class=\"line\">complex([real[, imag]]) \t创建一个复数</span><br><span class=\"line\">divmod(a, b) \t            分别取商和余数</span><br><span class=\"line\">float([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回<span class=\"number\">0.0</span></span><br><span class=\"line\">int([x[, base]])  \t        将一个字符转换为int类型，base表示进制</span><br><span class=\"line\">long([x[, base]])  \t        将一个字符转换为long类型</span><br><span class=\"line\">pow(x, y[, z])  \t        返回x的y次幂</span><br><span class=\"line\">range([start], stop[, step])</span><br><span class=\"line\">                            产生一个序列，默认从<span class=\"number\">0</span>开始</span><br><span class=\"line\">round(x[, n])  \t            四舍五入</span><br><span class=\"line\">sum(iterable[, start])  \t对集合求和</span><br><span class=\"line\">oct(x) \t                    将一个数字转化为<span class=\"number\">8</span>进制</span><br><span class=\"line\">hex(x) \t                    将整数x转换为<span class=\"number\">16</span>进制字符串</span><br><span class=\"line\">chr(i) \t                    返回整数i对应的ASCII字符</span><br><span class=\"line\">bin(x) \t                    将整数x转换为二进制字符串</span><br><span class=\"line\">bool([x]) \t                将x转换为Boolean类型k</span><br></pre></td></tr></table></figure>\n\n<p><strong>集合操作类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">basestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断</span><br><span class=\"line\">format(value [, format_spec])</span><br><span class=\"line\">                            格式化输出字符串格式化的参数顺序从<span class=\"number\">0</span>开始，如“I am &#123;<span class=\"number\">0</span>&#125;,I like &#123;<span class=\"number\">1</span>&#125;”</span><br><span class=\"line\">unichr(i) \t                返回给定int类型的unicode</span><br><span class=\"line\">enumerate(sequence [, start = <span class=\"number\">0</span>])</span><br><span class=\"line\">                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple</span><br><span class=\"line\">iter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符</span><br><span class=\"line\">max(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最大值</span><br><span class=\"line\">min(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最小值</span><br><span class=\"line\">dict([arg]) \t            创建数据字典</span><br><span class=\"line\">list([iterable])  \t        将一个集合类转换为另外一个集合类</span><br><span class=\"line\">set() \t                    set对象实例化</span><br><span class=\"line\">frozenset([iterable]) \t    产生一个不可变的set</span><br><span class=\"line\">str([object])  \t            转换为string类型</span><br><span class=\"line\">sorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序</span><br><span class=\"line\">tuple([iterable])  \t        生成一个tuple类型</span><br><span class=\"line\">xrange([start], stop[, step])</span><br><span class=\"line\">                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一</span><br><span class=\"line\">                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列</span><br><span class=\"line\">                            表很大时，这个特性能为我们节省内存</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑判断</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all(iterable)               iterable为<span class=\"literal\">True</span>或迭代起为空返回<span class=\"literal\">True</span></span><br><span class=\"line\">any(iterable)               如果iterable任一元素为真返回<span class=\"literal\">True</span>如果迭代器为空返回<span class=\"literal\">False</span></span><br><span class=\"line\">cmp(x, y) \t                如果x &lt; y ,返回负数；x == y, 返回<span class=\"number\">0</span>；x &gt; y,返回正数</span><br><span class=\"line\"></span><br><span class=\"line\">**反射**</span><br><span class=\"line\"></span><br><span class=\"line\">callable(object)            检查对象object是否可调用</span><br><span class=\"line\">compile(source, filename, mode, flags=<span class=\"number\">0</span>, dont_inherit=<span class=\"literal\">False</span>, optimize=<span class=\"number\">-1</span>)</span><br><span class=\"line\">                            将source编译为代码或者AST对象。代码对象能够通过<span class=\"keyword\">exec</span>语句来执行或者eval()进行求值。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数source：字符串或者AST（Abstract Syntax Trees）对象。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数model：指定编译代码的种类。可以指定为 ‘<span class=\"keyword\">exec</span>’,’eval’,’single’。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、参数flag和dont_inherit：这两个参数暂不介绍</span><br><span class=\"line\"> dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、不带参数时，返回当前范围内的变量、方法和定义的类型列表；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、带参数时，返回参数的属性、方法列表。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果参数不包含__dir__()，该方法将最大限度地收集参数信息</span><br><span class=\"line\">delattr(object, name)       删除object对象名为name的属性</span><br><span class=\"line\">eval(expression, globals=<span class=\"literal\">None</span>, locals=<span class=\"literal\">None</span>)</span><br><span class=\"line\">                            计算表达式expression的值</span><br><span class=\"line\">exec(object[, globals[, locals]])</span><br><span class=\"line\">                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。</span><br><span class=\"line\">                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）</span><br><span class=\"line\">filter(function, iterable)  构造一个序列，等价于[ item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> iterable <span class=\"keyword\">if</span> function(item)]</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数function：返回值为<span class=\"literal\">True</span>或<span class=\"literal\">False</span>的函数，可以为<span class=\"literal\">None</span></span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数iterable：序列或可迭代对象</span><br><span class=\"line\">getattr(object, name[, default])</span><br><span class=\"line\">                            获取一个类的属性</span><br><span class=\"line\">globals()                   返回表示当前全局符号表的字典</span><br><span class=\"line\">hasattr(object, name)       判断对象object是否包含名为name的特性</span><br><span class=\"line\">hash(object)                返回该对象的哈希值（如果它有的话）</span><br><span class=\"line\">id(object)                  返回对象的“标识值”</span><br><span class=\"line\">isinstance(object, classinfo)</span><br><span class=\"line\">                            判断object是否是<span class=\"class\"><span class=\"keyword\">class</span>的实例</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">issubclass</span><span class=\"params\">(class, classinfo)</span></span></span><br><span class=\"line\"><span class=\"class\">                            判断是否是子类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">len</span><span class=\"params\">(s)</span>  \t                返回集合长度</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">locals</span><span class=\"params\">()</span>  \t                返回当前的变量列表</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">map</span><span class=\"params\">(function, iterable, ...)</span></span></span><br><span class=\"line\"><span class=\"class\">                            遍历每个元素，执行<span class=\"title\">function</span>操作</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">memoryview</span><span class=\"params\">(obj)</span>  \t        返回一个内存镜像类型的对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">next</span><span class=\"params\">(iterator[, default])</span>  \t类似于<span class=\"title\">iterator</span>.<span class=\"title\">next</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">property</span><span class=\"params\">([fget[, fset[, fdel[, doc]]]])</span></span></span><br><span class=\"line\">                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter</span><br><span class=\"line\">reduce(function, iterable[, initializer])</span><br><span class=\"line\">                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推</span><br><span class=\"line\">reload(module)  \t        重新加载模块</span><br><span class=\"line\">setattr(object, name, value)</span><br><span class=\"line\">                            设置属性值</span><br><span class=\"line\">repr(object)  \t            将一个对象变幻为可打印的格式</span><br><span class=\"line\">slice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象</span><br><span class=\"line\">staticmethod \t            声明静态方法，是个注解</span><br><span class=\"line\">super(type[, object-<span class=\"keyword\">or</span>-type])</span><br><span class=\"line\">                            引用父类</span><br><span class=\"line\">type(object) \t            返回该object的类型</span><br><span class=\"line\">vars([object])  \t        返回对象的变量，若无参数与dict()方法类似</span><br><span class=\"line\">bytearray([source [, encoding [, errors]]])</span><br><span class=\"line\">                            返回一个byte数组</span><br><span class=\"line\">                            <span class=\"number\">1</span>、如果source为整数，则返回一个长度为source的初始化数组；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果source为可迭代类型，则元素必须为[<span class=\"number\">0</span> ,<span class=\"number\">255</span>]中的整数；</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.</span><br><span class=\"line\">zip(*iterables)             创建一个聚合了来自每个</span><br></pre></td></tr></table></figure>\n\n<p><strong>IO操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file(filename [, mode [, bufsize]])</span><br><span class=\"line\">                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，</span><br><span class=\"line\">                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode</span><br><span class=\"line\">                            参数中，将允许对文件同时进行读写操作</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数filename：文件名称。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数mode：<span class=\"string\">'r'</span>（读）、<span class=\"string\">'w'</span>（写）、<span class=\"string\">'a'</span>（追加）。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数bufsize：如果为<span class=\"number\">0</span>表示不进行缓冲，如果为<span class=\"number\">1</span>表示进行行缓冲，如果是一个大于<span class=\"number\">1</span>的数表示缓冲区的大小 。</span><br><span class=\"line\">input([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入</span><br><span class=\"line\">open(name[, mode[, buffering]])</span><br><span class=\"line\">                            打开文件与file有什么不同？推荐使用open</span><br><span class=\"line\">print(*objects, sep=<span class=\"string\">' '</span>, end=<span class=\"string\">'\\n'</span>, file=sys.stdout, flush=<span class=\"literal\">False</span>)</span><br><span class=\"line\">                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。</span><br><span class=\"line\">                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出</span><br><span class=\"line\">raw_input([prompt])  \t    设置输入，输入都是作为字符串处理</span><br></pre></td></tr></table></figure>\n\n<p><strong>其他</strong></p>\n<p>help()–帮助信息</p>\n<p><a href=\"https://docs.python.org/zh-cn/3.7/library/functions.html#hash\" target=\"_blank\" rel=\"noopener\">参照python3.7.4中文官方说明</a></p>\n<p><strong><strong>init</strong>.py文件</strong></p>\n<p>这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．<br>当我们导入一个包的时候实际上是导入了它的<strong>init</strong>.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># __init__.py</span></span><br><span class=\"line\">__all__ = [<span class=\"string\">'os'</span>, <span class=\"string\">'sys'</span>, <span class=\"string\">'re'</span>, <span class=\"string\">'urllib'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>这时就会把注册在<strong>init</strong>.py文件中<strong>all</strong>列表中的模块和包导入到当前文件中来.</p>\n<p><strong>python 返回函数的理解</strong></p>\n<p>返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是<br>不会立即执行而是等到调用的时候才执行优点是可以延迟计算</p>\n<p><strong>文件操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'name'</span>,<span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.seek(<span class=\"number\">0</span>)   <span class=\"comment\"># 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空</span></span><br><span class=\"line\">    f.truncate()</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck6p5v4bq00061cno6c9bghcm","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c0000c1cnocs6m7379"},{"post_id":"ck6p5v4ao00001cnob3w10y23","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c1000e1cno29zvbgjb"},{"post_id":"ck6p5v4bs00071cno9s5q1swm","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c2000g1cno8v8u8ve4"},{"post_id":"ck6p5v4bx000a1cno1ks75ubx","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c4000j1cno55fvb9yv"},{"post_id":"ck6p5v4bo00051cnob1q1ep1w","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c4000k1cno9z33glvu"},{"post_id":"ck6p5v4bz000b1cnoam7y9k0i","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4c5000m1cnobmlph4we"},{"post_id":"ck6p5v4k7001a1cno9mcb4k7k","category_id":"ck6p5v4bk00031cnoausu79bk","_id":"ck6p5v4kd001c1cnohza471jb"}],"PostTag":[{"post_id":"ck6p5v4ao00001cnob3w10y23","tag_id":"ck6p5v4bn00041cno0bab65s6","_id":"ck6p5v4c2000f1cno59w7f1pj"},{"post_id":"ck6p5v4ao00001cnob3w10y23","tag_id":"ck6p5v4bt00091cno3p5ibivt","_id":"ck6p5v4c3000h1cno45lzg7ep"},{"post_id":"ck6p5v4bo00051cnob1q1ep1w","tag_id":"ck6p5v4c0000d1cnoaz6rh68w","_id":"ck6p5v4c6000n1cno7vhp8rpx"},{"post_id":"ck6p5v4bo00051cnob1q1ep1w","tag_id":"ck6p5v4c3000i1cno67cuehrs","_id":"ck6p5v4c6000o1cno1bow88zd"},{"post_id":"ck6p5v4bq00061cno6c9bghcm","tag_id":"ck6p5v4c5000l1cnodrp93nyc","_id":"ck6p5v4ca000s1cno06qa3wtb"},{"post_id":"ck6p5v4bq00061cno6c9bghcm","tag_id":"ck6p5v4c6000p1cno7ff95jr6","_id":"ck6p5v4ca000t1cno8920gz57"},{"post_id":"ck6p5v4bq00061cno6c9bghcm","tag_id":"ck6p5v4c3000i1cno67cuehrs","_id":"ck6p5v4cb000v1cnogpto5uer"},{"post_id":"ck6p5v4bs00071cno9s5q1swm","tag_id":"ck6p5v4c9000r1cno5dmk0lk5","_id":"ck6p5v4cd000y1cnodpjl02fm"},{"post_id":"ck6p5v4bs00071cno9s5q1swm","tag_id":"ck6p5v4c3000i1cno67cuehrs","_id":"ck6p5v4ce000z1cno9eyn7gfw"},{"post_id":"ck6p5v4bs00071cno9s5q1swm","tag_id":"ck6p5v4c0000d1cnoaz6rh68w","_id":"ck6p5v4cf00111cno8oxk2mwd"},{"post_id":"ck6p5v4bx000a1cno1ks75ubx","tag_id":"ck6p5v4cd000x1cno77m0etwh","_id":"ck6p5v4cj00141cno14v0asus"},{"post_id":"ck6p5v4bx000a1cno1ks75ubx","tag_id":"ck6p5v4ce00101cnohrdm585o","_id":"ck6p5v4ck00151cnob7wb9lhj"},{"post_id":"ck6p5v4bx000a1cno1ks75ubx","tag_id":"ck6p5v4ch00121cno8ocnepfm","_id":"ck6p5v4cl00171cnofosf75zt"},{"post_id":"ck6p5v4bz000b1cnoam7y9k0i","tag_id":"ck6p5v4ci00131cno6igi5uy8","_id":"ck6p5v4cm00181cnofx767ou2"},{"post_id":"ck6p5v4bz000b1cnoam7y9k0i","tag_id":"ck6p5v4c3000i1cno67cuehrs","_id":"ck6p5v4cn00191cnofnku2fxa"},{"post_id":"ck6p5v4k7001a1cno9mcb4k7k","tag_id":"ck6p5v4k8001b1cnofxhybr2t","_id":"ck6p5v4kd001d1cnobhl8cusf"},{"post_id":"ck6p5v4k7001a1cno9mcb4k7k","tag_id":"ck6p5v4c3000i1cno67cuehrs","_id":"ck6p5v4kd001e1cnobevl7y1r"}],"Tag":[{"name":"git","_id":"ck6p5v4bn00041cno0bab65s6"},{"name":"命令","_id":"ck6p5v4bt00091cno3p5ibivt"},{"name":"linux","_id":"ck6p5v4c0000d1cnoaz6rh68w"},{"name":"笔记","_id":"ck6p5v4c3000i1cno67cuehrs"},{"name":"arch","_id":"ck6p5v4c5000l1cnodrp93nyc"},{"name":"pacman","_id":"ck6p5v4c6000p1cno7ff95jr6"},{"name":"shell","_id":"ck6p5v4c9000r1cno5dmk0lk5"},{"name":"tag1","_id":"ck6p5v4cd000x1cno77m0etwh"},{"name":"tag2","_id":"ck6p5v4ce00101cnohrdm585o"},{"name":"tag3","_id":"ck6p5v4ch00121cno8ocnepfm"},{"name":"vim","_id":"ck6p5v4ci00131cno6igi5uy8"},{"name":"python","_id":"ck6p5v4k8001b1cnofxhybr2t"}]}}