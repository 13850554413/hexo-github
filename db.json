{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/tags/index.md.back","path":"tags/index.md.back","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1581860639214},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1582021577373},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1582021577373},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1582021577373},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1581860639217},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1581860639217},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1581860639217},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1582021577373},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1582021577373},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1581860639217},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1581860639220},{"_id":"themes/next/_config.yml","hash":"a7b52e0d51083babcde15d33c835d3af32a06ce1","modified":1582024211432},{"_id":"themes/next/README.md","hash":"d3035c6961280c1b4afb3a07661f5a635ce1eaff","modified":1582021577373},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1581860639220},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1581860639220},{"_id":"themes/next/package.json","hash":"213bd6ff96a027f5db6d1ce966a2cc75499a3e10","modified":1582021577387},{"_id":"source/_posts/git简记.md","hash":"7cbd843a5165e0e0a189af0250d4b0424ed30bd7","modified":1582024693183},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1581832834797},{"_id":"source/_posts/linux简记.md","hash":"4109c56fd6a1ff8e7feb6a7e80a930f5a06347bb","modified":1582024637775},{"_id":"source/_posts/linux学习心得.md","hash":"52311501f4a76e8df10331cef3b9ac397e37f26f","modified":1582024895066},{"_id":"source/_posts/pacman简记.md","hash":"087b96c29e2c163c3f4c37a7fc655e6577bde489","modified":1581938999471},{"_id":"source/_posts/templates.md","hash":"55ed8f5c0f429a506073f999d96c2857cfdcd81c","modified":1581940604786},{"_id":"source/_posts/shell常用快捷键.md","hash":"2de74455522923490362e3e03e553578dd6697c0","modified":1581939056821},{"_id":"source/_posts/vim简记.md","hash":"64076b1cfd8e735d6760e15b9855cafe70ecb5ce","modified":1581939084667},{"_id":"source/_posts/如何获得linux源码.md","hash":"8ce3f6567edf4797868c3ed5f84b76321aac5e47","modified":1581940579949},{"_id":"source/_posts/爬虫框架思考.md","hash":"5f487c4d274088dc57738dfae6a465495175b1f2","modified":1581940368442},{"_id":"source/categories/index.md","hash":"8a2208f86f2155eb32a050be62c82c08502eda72","modified":1581941880772},{"_id":"source/tags/index.md","hash":"98ec4545921ce27802f82d0371b85d4c390a3cb3","modified":1581941681742},{"_id":"source/tags/index.md.back","hash":"d0737d47bd4a9a0c704de4f181f65ef672855976","modified":1581860885372},{"_id":"source/_posts/python简记.md","hash":"062a1c010313470f5a3f1d0ee53ad45738a2d4fa","modified":1581939026421},{"_id":"themes/next/languages/default.yml","hash":"20f951dc4df8602ffdd05a1d5899c5a9bc1759cc","modified":1582021577380},{"_id":"themes/next/languages/en.yml","hash":"20f951dc4df8602ffdd05a1d5899c5a9bc1759cc","modified":1582021577380},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1581860639220},{"_id":"themes/next/languages/id.yml","hash":"6037450ecd02796e08ca2e98037845b7c30c2807","modified":1582021577380},{"_id":"themes/next/languages/it.yml","hash":"ba2c8f51f2f719dabe71b6053c6fe6866161ec66","modified":1582021577380},{"_id":"themes/next/languages/de.yml","hash":"109943f7adcd5cdbe4c6c95c9d279603f07edacb","modified":1582021577380},{"_id":"themes/next/languages/ja.yml","hash":"5e13b521201944815665bd077b65d7ce69622b81","modified":1582021577380},{"_id":"themes/next/languages/ko.yml","hash":"4aa8f3bf06e02879863b19901476cb23ecd2d709","modified":1582021577380},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1581860639224},{"_id":"themes/next/languages/pt.yml","hash":"f7516b9d86b52c80bf63d3efc7ee6fd985205001","modified":1582021577380},{"_id":"themes/next/languages/pt-BR.yml","hash":"0660471e067d01ec80962d5721ae282aafff274d","modified":1582021577380},{"_id":"themes/next/languages/ru.yml","hash":"7dcb2aab65a4b202476856f3e004862334229bcb","modified":1582021577380},{"_id":"themes/next/languages/vi.yml","hash":"ffc144f606e171fdd8cdb41808ac36e406015a54","modified":1582021577380},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1581860639224},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1581860639224},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1581860639224},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1582021577387},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1582021577387},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1582021577387},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1582021577387},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1582021577387},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1581860639234},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1582021577387},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1581860639237},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1581860639237},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1581860639320},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1581860639320},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1581860639320},{"_id":"themes/next/layout/_layout.swig","hash":"29ee038b0d5ffdb45327598733ea968588367769","modified":1582021577380},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639254},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1581860639224},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1581860639224},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1582021577380},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1581860639224},{"_id":"themes/next/layout/_macro/post.swig","hash":"87a40f829ae6bb786c6c51bd83d110140eb41b80","modified":1582021577380},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1581860639227},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1581860639227},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e2c9db54cc9e154e882008fde6588b065fadc9a7","modified":1582021577380},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1581860639227},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1581860639230},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1582021577383},{"_id":"themes/next/layout/_partials/comments.swig","hash":"0c4914a5fd08f15beec71940218c814ad9a89f3f","modified":1582021577380},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ee6335c12773dc43f8b92136770cb10d460c25c","modified":1582021577380},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1581860639227},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1581860639227},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1581860639227},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1582021577383},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1581860639227},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1581860639234},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1581860639234},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1581860639234},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1581860639234},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1582021577383},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1581860639234},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1581860639234},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1582021577390},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1581860639237},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1581860639237},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1582021577390},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1582021577390},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1581860639237},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1582021577390},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1582021577390},{"_id":"themes/next/source/404/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1581942945365},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1582021577390},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1582021577400},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1581860639254},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1581860639254},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1582021577400},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1581860639257},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1581860639257},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1581860639257},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1581860639257},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1581860639257},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1581860639257},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1581860639257},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1581860639257},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1581860639257},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1581860639257},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1581860639257},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1581860639257},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1582021577383},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1582021577383},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639250},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1582021577400},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1581860639254},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1581860639230},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1582021577383},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1582021577383},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1581860639227},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1581860639227},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2791a8dc20a276704fc8b03f9822f76578a9152d","modified":1582021577383},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1581860639227},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1581860639227},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1581860639227},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1582021577383},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1582021577383},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1582021577383},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1581860639230},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1581860639230},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1581860639234},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1582021577383},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1581860639234},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1581860639234},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1581860639230},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1581860639250},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1582021577397},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1582021577397},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1582021577397},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1582021577400},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1582021577400},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1582021577400},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d4e817e2b238ace5d7ac568ce0c5380196a6d039","modified":1582021577400},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1581860639260},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1581860639260},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1581860639260},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1581860639260},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1581860639260},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1581860639260},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1581860639260},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1581860639260},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1581860639260},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1581860639260},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1581860639260},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1581860639270},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1581860639277},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1581860639277},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1581860639277},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1581860639280},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1581860639287},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1581860639310},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1581860639310},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1581860639314},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1581860639314},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1581860639314},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1581860639314},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1581860639314},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1581860639320},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1581860639320},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1581860639310},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1581860639234},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1581860639234},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4f7879a50d4608c46cc2061c725a2564597a45bd","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1581860639247},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"8e1cc5e3b20d804a7265f945b877388bffee39eb","modified":1582021577393},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"1693ec6b53758ac15d2c7798c789d6ae8af913ea","modified":1582021577397},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1581860639244},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"adea92b504d436780c2792af0269f8b7835525f3","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"3d52f762577afac1ab50390e555b069408370fe8","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a54662bd4cbbe316048a811d3b5c83fb6df63739","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"b797c693378d94160121a2b8d9df0622a76cdbda","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"698f25ad68508450dd8a41f2732d2bab14f8d1fe","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1581860639254},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"06098b8f8ea343c434c858207297a47c1275155a","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1582021577400},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1581860639260},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1581860639267},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1581860639267},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1581860639284},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1581860639284},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1581860639284},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1581860639287},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1581860639287},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1581860639287},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1581860639320},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1581860639320},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1581860639267},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1581860639310},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1581860639310},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1581860639320},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1581860639240},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"af182c0d1e52f94280f6108936914f04ed541eee","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9df5ba77e6cf36129bddc270407215c23c60ff38","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"c7939407797acbd1ae0d8bae8e13b2bf045f870e","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1581860639244},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1581860639247},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1582021577390},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1581860639250},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1581860639254},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1581860639264},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1581860639264},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1581860639280},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1581860639280},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1581860639310},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1581860639297},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1581860639294},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1581860639277},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1581860639317},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1581860639304},{"_id":"source/_drafts/templates.md","hash":"55ed8f5c0f429a506073f999d96c2857cfdcd81c","modified":1581940604786},{"_id":"source/about/index.md","hash":"adc9e61e678375f6882bd769dbecb1ca4d56be54","modified":1581950416542},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1582021577373},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1582021577373},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1582021577373},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1582021577377},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1582021577373},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"1b87a7d22d466d78856900bd94875944181c991a","modified":1582021577373},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1582021577373},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"715dcf9b0429a4a4c7107d6d1d00a34e4cf9aa99","modified":1582021577373},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1582021577373},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1582021577373},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1582021577373},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1582021577373},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1582021577373},{"_id":"themes/next/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1582021577373},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1582021577373},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1582021577377},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1582021577377},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1582021577377},{"_id":"themes/next/docs/DATA-FILES.md","hash":"40a8089076005e0d26ef7c0db58a2b5b464cda6c","modified":1582021577377},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1582021577377},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1582021577377},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1582021577377},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1582021577377},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"682937d48bf5d243842a76190921322e26c75247","modified":1582021577377},{"_id":"themes/next/languages/es.yml","hash":"53ef4a621fd628748b8ed711fe86080e9c9c91c8","modified":1582021577380},{"_id":"themes/next/languages/fa.yml","hash":"a24e0cf28e9f137d0d2219498778693c3c3960b2","modified":1582021577380},{"_id":"themes/next/languages/fr.yml","hash":"578a30a51b9ecbbcb4c200362ad9a37ffd3272db","modified":1582021577380},{"_id":"themes/next/languages/hu.yml","hash":"074d069af9aed5ad34fa809bd058a3b9e2d01051","modified":1582021577380},{"_id":"themes/next/languages/nl.yml","hash":"e27b29c60d88ef4c30de291b595cf8cad639c5d1","modified":1582021577380},{"_id":"themes/next/languages/uk.yml","hash":"21a573cdf8e26d87d5e32c5555bc645983268abe","modified":1582021577380},{"_id":"themes/next/languages/tr.yml","hash":"145d28f6f051129dc6393affe8f68cd7ba925078","modified":1582021577380},{"_id":"themes/next/languages/zh-CN.yml","hash":"038c3a650d2e3a288be9ba6580564172c50b4289","modified":1582021577380},{"_id":"themes/next/languages/zh-HK.yml","hash":"2620632caa3c94022d9513ab1971d15512e737e7","modified":1582021577380},{"_id":"themes/next/languages/zh-TW.yml","hash":"0964e90406bbd495e901d6b9d5f10124c8cad950","modified":1582021577380},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1582021577387},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"8ae029084b9ac482adf0fae2a0979dd388476513","modified":1582021577373},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"7a9526f749205c882d672a4f51e6a3033c80ca6e","modified":1582021577373},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"89667adbb85c25716dba607cd7a38191acf60736","modified":1582021577373},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"789a3cceb8f37a4b63b1fb2452a03332a3c365ed","modified":1582021577373},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1582021577377},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1582021577377},{"_id":"themes/next/docs/ru/README.md","hash":"2b3988e79d96b66640d6a98f0c0e6de9099805e6","modified":1582021577377},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0b0b9ec6ec4a89e701a3b91f8d7d95752d3e241b","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/README.md","hash":"e5f6668c3a79e4a364931b9b4e5fa92f8c771ec8","modified":1582021577377},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"7f37327bbcae7ed7d04d187fd5e9bc6bbf14926a","modified":1582021577377},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1582021577383},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1582021577383},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1582021577383},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"a3462c37ab6d7642b1e95860ea5c4cfbac78efab","modified":1582021577383},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1582021577383},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1582021577383},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1582021577383},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"dd6bd817cb69b5ad5e9746498146314b54054ff8","modified":1582021577383},{"_id":"themes/next/scripts/events/index.js","hash":"9047d8ae2670e43429b16a7919a08a0a0a81afe0","modified":1582021577387},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1582021577387},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1582021577387},{"_id":"themes/next/scripts/filters/locals.js","hash":"5bbfdc1c373542159660b7a68ed0b57ca18ad10b","modified":1582021577387},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1582021577387},{"_id":"themes/next/scripts/filters/post.js","hash":"f2f566f2577c554377fd704442399acdd14a8118","modified":1582021577387},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cb211b6b50913454b1737782e9e2af96cfa40448","modified":1582021577387},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1582021577387},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1582021577387},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1582021577387},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1582021577390},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1582021577390},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1582021577390},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1582021577390},{"_id":"themes/next/source/js/algolia-search.js","hash":"f31a633c15391ce0095579735a479f3f92622eab","modified":1582021577403},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1582021577403},{"_id":"themes/next/source/js/local-search.js","hash":"0d30f1c0e4d4a1cc26d494808f3f36132d06ae14","modified":1582021577403},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1582021577403},{"_id":"themes/next/source/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1582021577403},{"_id":"themes/next/source/js/utils.js","hash":"4faf7598289774fe091f33fa693b2e6b2ca1e994","modified":1582021577403},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1582021577407},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"1638483d2d2dad1da4c841a6fb9f6ee96b850187","modified":1582021577380},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"1ea12d4b9490d9065ebf1b8739b90ce5defd6398","modified":1582021577380},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"6cd12613863c3fd7a10c6a81c84f57a770f96566","modified":1582021577380},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1582021577380},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"e6076865dba066c5f0008e22217efb850d5af69c","modified":1582021577380},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1582021577380},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"54ba9508a901c295a02c8e34e9cece7c7dcad518","modified":1582021577380},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1582021577380},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1582021577380},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1582021577383},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"14c33bd544903e74388739599fffe3ecb66ed4b0","modified":1582021577383},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1582021577383},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1582021577383},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1582021577383},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"716b78cd90addc4216413719554721cb362b0c18","modified":1582021577383},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"a2bb0bec243685e670b60a3d54142950adc03af0","modified":1582021577383},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1582021577383},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1582021577383},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1582021577383},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1582021577383},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1582021577383},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1582021577383},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"a18a9b52f58c7988c411a819518d8e7715e5fb92","modified":1582021577383},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1582021577383},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1582021577387},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1582021577387},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1582021577387},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1582021577387},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1582021577387},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"a239f1558d1209012ce4571cbc665fe461291e41","modified":1582021577387},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1582021577387},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"529d752f269afcf8f64e07a1eacd6fda70fb211f","modified":1582021577387},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1582021577387},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1582021577387},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1582021577387},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1582021577387},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1582021577403},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1582021577403},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1582021577383},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1582021577383},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1582021577393},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"bc87cea0b534f2d75db60f300b069456f6516d1b","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1582021577390},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"5ae608ce00ec2d7b9aa4ab2d8dfdf4a73422acc4","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"a406ecd03d2d3b0e160b44a42deeae1ed9aa6aa1","modified":1582021577397},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1582021577397},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"f5821481440a0624c8aec5fc85f093de1527095f","modified":1582021577390},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1582021577390},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1582021577390},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"9a418cadb160a11e7203a3964aef4149a54808a5","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"c26c60317ae9c49ca55779ea89892db90cfbad2e","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"521534f483440434e808f92377bc3fc73667c89a","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"6d8680894e24a516e2b5263af86b485767c3be63","modified":1582021577393},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1582021577393},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"60ed14e9ddcb138837ca22efb8886f9bff2a3dd2","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"bcba503e956e4b737b062faa66341bd880f16c10","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1582021577390},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"418890a2041e4d623e235890951143d183df6f03","modified":1582021577390},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"5e655bc1d9e213e466af2f8358725fdc668fe52d","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"b4923515ca8e44aa62e839ce948f759cfd1f896f","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1582021577393},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1582021577397},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1582021577397},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"1a14c1b92d8a4dd8aabb5949333ac0ac79094c6c","modified":1582021577397},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1582021577397},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"d2f0f2171722533bba308f944a2ec727b083582c","modified":1582021577397},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1582021577397},{"_id":"themes/next/source/404.html","hash":"a5991bb3598c5d934bd97e3bc4ed14b71ebf1e62","modified":1581942945365}],"Category":[{"name":"笔记","_id":"ck6qhajbf0004zsno24oxa7fw"},{"name":"linux,笔记","_id":"ck6qhajbl0009zsno74j35tc7"},{"name":"日志","_id":"ck6qhajbp000ezsnoar9tbghz"},{"name":"默认分类","_id":"ck6qhajbt000mzsno2w2z9sg6"},{"name":"shell, linux, 笔记","_id":"ck6qhajbx000rzsnoewmyg0oj"},{"name":"vim, 笔记","_id":"ck6qhajc4000yzsno3m1vb1uo"},{"name":"python, 笔记","_id":"ck6qhajf6001nzsno7jpidxvj"}],"Data":[],"Page":[{"title":"标签","type":"tags","comments":1,"date":"2020-02-16T13:48:05.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\ncomments: true\ndate: 2020-02-16 21:48:05\n---\n","updated":"2020-02-17T12:14:41.742Z","path":"tags/index.html","layout":"page","_id":"ck6qhajb70001zsnocwupc0j5","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2020-02-17T12:16:19.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2020-02-17 20:16:19\ntype: \"categories\"\n---\n","updated":"2020-02-17T12:18:00.772Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck6qhajbb0003zsnofiq5a3rw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于","type":"about","date":"2020-02-16T13:48:05.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 关于\ntype: \"about\"\ndate: 2020-02-16 21:48:05\n---\n","updated":"2020-02-17T14:40:16.542Z","path":"about/index.html","_id":"ck6qk1zor0004henoeytk22vc","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"git笔记","date":"2013-12-02T07:30:16.000Z","description":"git命令快查","_content":"\n**创建仓库和提交**\n\n    git init 把这个目录变成git可以管理的目录\n    git add 添加到仓库\n    git commit -m 提交到仓库\n    git status 查看仓库当前的状态\n    git diff 查看文件的变化\n\n**版本回退**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git log 查看提交日志\n    git reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\n    git reset --hard \"commit id\"    可以穿梭回去\n    git checkout -- \"file\"  撤销修改/返回上次修改的状态add之前的状态\n    git rm \"file\"   删除一个文件\n    git push -u origin master 第一次推送\n    git push 推送\n    git remote add origin \"仓库地址\"  关联远程仓库\n    git clone 克隆一个项目\n\n**分支操作**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git checout -b \"新分支\" 创建并切换到新分支\n    git branch  查看当前分支\n    git checkout \"分支名称\" 切换分支\n    git merge \"指定分支\"    合并指定分支到当前分支\n    git branch -d \"分支名称\"    删除分支\n    git branch origin --delete dev\n    git push origin :dev\n    git log --graph 查看分支合并图\n\n**更新的两种方法**\n\n    git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\n    git fetch 从另外一个仓库下载对象和引用\n    git merge 合并\n\n**远程操作**\n\n    git clone [url] 克隆／下载\n    git clone -b <branch> [url] 下载一个分支\n    git branch --set-upstream-to=origin/develop 关联一个远程分支develop\n    git remote -v 查看远程仓库信息  \n    git remote add [name] [url] 添加远程仓库  \n    git remote remove [name] 删除远程仓库name\n    git fetch [name] 从name仓库更新同步代码\n    git fetch -all 更新所有\n    git merage --no-ff [name]/master 合并到本地代码\n    git pull origin master 更新并合并自己远程仓库的代码\n    git push -u 向自己的远程仓库推送刚才同步源仓库后的代码\n\n**标签操作**\n\n    git tag <tagname>   新建一个标签\n    git tag -a <tanname> -m \"aabbbcc....\"   可以指定标签信息\n    git tag 可以查看所有标签\n    git push orgin <tagname> 推送一个本地标签\n    git push orgin --tags 推送全部未推送过的标签\n    git tag -d <tagname> 删除一个本地标签\n    git push orgin :refs/tags/<tagname> 删除一个远程标签\n    注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况\n","source":"_posts/git简记.md","raw":"---\ntitle: git笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 笔记 #分类\ntags: [git,命令] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: git命令快查\n---\n\n**创建仓库和提交**\n\n    git init 把这个目录变成git可以管理的目录\n    git add 添加到仓库\n    git commit -m 提交到仓库\n    git status 查看仓库当前的状态\n    git diff 查看文件的变化\n\n**版本回退**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git log 查看提交日志\n    git reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\n    git reset --hard \"commit id\"    可以穿梭回去\n    git checkout -- \"file\"  撤销修改/返回上次修改的状态add之前的状态\n    git rm \"file\"   删除一个文件\n    git push -u origin master 第一次推送\n    git push 推送\n    git remote add origin \"仓库地址\"  关联远程仓库\n    git clone 克隆一个项目\n\n**分支操作**\n\n注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重\n\n    git checout -b \"新分支\" 创建并切换到新分支\n    git branch  查看当前分支\n    git checkout \"分支名称\" 切换分支\n    git merge \"指定分支\"    合并指定分支到当前分支\n    git branch -d \"分支名称\"    删除分支\n    git branch origin --delete dev\n    git push origin :dev\n    git log --graph 查看分支合并图\n\n**更新的两种方法**\n\n    git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\n    git fetch 从另外一个仓库下载对象和引用\n    git merge 合并\n\n**远程操作**\n\n    git clone [url] 克隆／下载\n    git clone -b <branch> [url] 下载一个分支\n    git branch --set-upstream-to=origin/develop 关联一个远程分支develop\n    git remote -v 查看远程仓库信息  \n    git remote add [name] [url] 添加远程仓库  \n    git remote remove [name] 删除远程仓库name\n    git fetch [name] 从name仓库更新同步代码\n    git fetch -all 更新所有\n    git merage --no-ff [name]/master 合并到本地代码\n    git pull origin master 更新并合并自己远程仓库的代码\n    git push -u 向自己的远程仓库推送刚才同步源仓库后的代码\n\n**标签操作**\n\n    git tag <tagname>   新建一个标签\n    git tag -a <tanname> -m \"aabbbcc....\"   可以指定标签信息\n    git tag 可以查看所有标签\n    git push orgin <tagname> 推送一个本地标签\n    git push orgin --tags 推送全部未推送过的标签\n    git tag -d <tagname> 删除一个本地标签\n    git push orgin :refs/tags/<tagname> 删除一个远程标签\n    注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况\n","slug":"git简记","published":1,"updated":"2020-02-18T11:18:13.183Z","_id":"ck6qhajb00000zsnodgpi6iz6","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>创建仓库和提交</strong></p>\n<pre><code>git init 把这个目录变成git可以管理的目录\ngit add 添加到仓库\ngit commit -m 提交到仓库\ngit status 查看仓库当前的状态\ngit diff 查看文件的变化</code></pre><p><strong>版本回退</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git log 查看提交日志\ngit reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\ngit reset --hard &quot;commit id&quot;    可以穿梭回去\ngit checkout -- &quot;file&quot;  撤销修改/返回上次修改的状态add之前的状态\ngit rm &quot;file&quot;   删除一个文件\ngit push -u origin master 第一次推送\ngit push 推送\ngit remote add origin &quot;仓库地址&quot;  关联远程仓库\ngit clone 克隆一个项目</code></pre><p><strong>分支操作</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git checout -b &quot;新分支&quot; 创建并切换到新分支\ngit branch  查看当前分支\ngit checkout &quot;分支名称&quot; 切换分支\ngit merge &quot;指定分支&quot;    合并指定分支到当前分支\ngit branch -d &quot;分支名称&quot;    删除分支\ngit branch origin --delete dev\ngit push origin :dev\ngit log --graph 查看分支合并图</code></pre><p><strong>更新的两种方法</strong></p>\n<pre><code>git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\ngit fetch 从另外一个仓库下载对象和引用\ngit merge 合并</code></pre><p><strong>远程操作</strong></p>\n<pre><code>git clone [url] 克隆／下载\ngit clone -b &lt;branch&gt; [url] 下载一个分支\ngit branch --set-upstream-to=origin/develop 关联一个远程分支develop\ngit remote -v 查看远程仓库信息  \ngit remote add [name] [url] 添加远程仓库  \ngit remote remove [name] 删除远程仓库name\ngit fetch [name] 从name仓库更新同步代码\ngit fetch -all 更新所有\ngit merage --no-ff [name]/master 合并到本地代码\ngit pull origin master 更新并合并自己远程仓库的代码\ngit push -u 向自己的远程仓库推送刚才同步源仓库后的代码</code></pre><p><strong>标签操作</strong></p>\n<pre><code>git tag &lt;tagname&gt;   新建一个标签\ngit tag -a &lt;tanname&gt; -m &quot;aabbbcc....&quot;   可以指定标签信息\ngit tag 可以查看所有标签\ngit push orgin &lt;tagname&gt; 推送一个本地标签\ngit push orgin --tags 推送全部未推送过的标签\ngit tag -d &lt;tagname&gt; 删除一个本地标签\ngit push orgin :refs/tags/&lt;tagname&gt; 删除一个远程标签\n注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>创建仓库和提交</strong></p>\n<pre><code>git init 把这个目录变成git可以管理的目录\ngit add 添加到仓库\ngit commit -m 提交到仓库\ngit status 查看仓库当前的状态\ngit diff 查看文件的变化</code></pre><p><strong>版本回退</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git log 查看提交日志\ngit reset --hard HEAD^  回退到上一个版本(上上个版本HEAD^^)\ngit reset --hard &quot;commit id&quot;    可以穿梭回去\ngit checkout -- &quot;file&quot;  撤销修改/返回上次修改的状态add之前的状态\ngit rm &quot;file&quot;   删除一个文件\ngit push -u origin master 第一次推送\ngit push 推送\ngit remote add origin &quot;仓库地址&quot;  关联远程仓库\ngit clone 克隆一个项目</code></pre><p><strong>分支操作</strong></p>\n<p>注意：git之所以厉害是因为历史可回退和分支编辑，所以学好分支和版本回退是重中之重</p>\n<pre><code>git checout -b &quot;新分支&quot; 创建并切换到新分支\ngit branch  查看当前分支\ngit checkout &quot;分支名称&quot; 切换分支\ngit merge &quot;指定分支&quot;    合并指定分支到当前分支\ngit branch -d &quot;分支名称&quot;    删除分支\ngit branch origin --delete dev\ngit push origin :dev\ngit log --graph 查看分支合并图</code></pre><p><strong>更新的两种方法</strong></p>\n<pre><code>git pull 直接拉取远程分支，简单但是把过程细节都隐藏了，一旦有问题很难找出错的地方\ngit fetch 从另外一个仓库下载对象和引用\ngit merge 合并</code></pre><p><strong>远程操作</strong></p>\n<pre><code>git clone [url] 克隆／下载\ngit clone -b &lt;branch&gt; [url] 下载一个分支\ngit branch --set-upstream-to=origin/develop 关联一个远程分支develop\ngit remote -v 查看远程仓库信息  \ngit remote add [name] [url] 添加远程仓库  \ngit remote remove [name] 删除远程仓库name\ngit fetch [name] 从name仓库更新同步代码\ngit fetch -all 更新所有\ngit merage --no-ff [name]/master 合并到本地代码\ngit pull origin master 更新并合并自己远程仓库的代码\ngit push -u 向自己的远程仓库推送刚才同步源仓库后的代码</code></pre><p><strong>标签操作</strong></p>\n<pre><code>git tag &lt;tagname&gt;   新建一个标签\ngit tag -a &lt;tanname&gt; -m &quot;aabbbcc....&quot;   可以指定标签信息\ngit tag 可以查看所有标签\ngit push orgin &lt;tagname&gt; 推送一个本地标签\ngit push orgin --tags 推送全部未推送过的标签\ngit tag -d &lt;tagname&gt; 删除一个本地标签\ngit push orgin :refs/tags/&lt;tagname&gt; 删除一个远程标签\n注意：删除文件需在执行一次 git rm 不然可能会有奇怪的情况</code></pre>"},{"title":"linux笔记","date":"2013-12-02T07:30:16.000Z","description":"附linux命令这么多我该怎么记-如何查找Linux的命令","_content":"\n**linux命令这么多我该怎么记-如何查找Linux的命令**\nhttps://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\n\n*find        查找*\n> -name         名称\n  -maxdepth     递归层级(大)  \n  -mindepth     递归层级(小)  \n  -user         用户  \n  -group        属组  \n  -perm         权限  \n  -not          非(-not -user [name] #不是name用户,group等也可以组合)  \n  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  \n\n    free -m     查看内存的使用\n    uname -a    查看内核版本\n    locate      简单的查找文件\n    ldd \t查看命令依赖\n    whereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\n    which       搜索命令位置\n    nl          查看文件内容会显示行号\n    wc          统计文件信息\n    type        查看是不是shell自带命令\n    history     查看最近的所有命令可以陪grep使用，效果更好\n    whoami      查看当前用户\n    useradd     创建用户\n    chmod       权限操作\n    chown       修改文件所有者(属主)\n    alias       取别名\n    df -h       显示已经挂载的分区列表\n    du -sh      查看目录占用空间\n    du -h       查看文件大小\n    sed 's/stringa1/stringa2/g' example.txt 替换命令，将example.txt文件中的 \"string1\" 替换成 \"string2\"\n    dump -0aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的完整备份\n    nohup       使用nohup在登出ssh会话后仍继续运行命令\n    ranger      文件浏览\n    lsblk\t查看磁盘挂载\n\n**进程管理**\n\n    kill pid    杀掉进程\n\n**暂停并在后台运行命令**\n\n    ctrl + z    暂停应用程序\n    bg          让其在后台运行\n    fg          重新将运用程序唤到前台\n\n**linux命令行快捷键**\n\n    ctrl + u    剪切光标前的内容\n    ctrl + k    剪切光标至行未的内容\n    crrl + y    粘帖\n    ctrl + e    移动光标至行抹\n    ctrl + a    移动光标到行首\n    alt  + f    跳到下一个空格\n    alt  + b    跳到上一个空格\n    alt  + Backspace  删除前一个单词\n    ctrl + w    剪切光标前一个单词\n    ctrl + l    清屏\n    stty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n    ^a^b^       替换上一个命令a变成b(命令输错可用)\n\n**命令复用**\n\n    !!          重复上一条命令\n    c         重复上一条以ec开头的命令\n    !76         用命令历史(history)中的76号命令\n\n**{}()语法**\n\n    touch name{1..10}.text\n    $(cmd)  #执行cmd在替换原来的命令\n    ()  # 命令组括号中的命令会在开一个子shell执行\n\n","source":"_posts/linux简记.md","raw":"---\ntitle: linux笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: linux,笔记 #分类\ntags: [linux,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附linux命令这么多我该怎么记-如何查找Linux的命令\n---\n\n**linux命令这么多我该怎么记-如何查找Linux的命令**\nhttps://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\n\n*find        查找*\n> -name         名称\n  -maxdepth     递归层级(大)  \n  -mindepth     递归层级(小)  \n  -user         用户  \n  -group        属组  \n  -perm         权限  \n  -not          非(-not -user [name] #不是name用户,group等也可以组合)  \n  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  \n\n    free -m     查看内存的使用\n    uname -a    查看内核版本\n    locate      简单的查找文件\n    ldd \t查看命令依赖\n    whereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\n    which       搜索命令位置\n    nl          查看文件内容会显示行号\n    wc          统计文件信息\n    type        查看是不是shell自带命令\n    history     查看最近的所有命令可以陪grep使用，效果更好\n    whoami      查看当前用户\n    useradd     创建用户\n    chmod       权限操作\n    chown       修改文件所有者(属主)\n    alias       取别名\n    df -h       显示已经挂载的分区列表\n    du -sh      查看目录占用空间\n    du -h       查看文件大小\n    sed 's/stringa1/stringa2/g' example.txt 替换命令，将example.txt文件中的 \"string1\" 替换成 \"string2\"\n    dump -0aj -f /tmp/home0.bak /home 制作一个 '/home' 目录的完整备份\n    nohup       使用nohup在登出ssh会话后仍继续运行命令\n    ranger      文件浏览\n    lsblk\t查看磁盘挂载\n\n**进程管理**\n\n    kill pid    杀掉进程\n\n**暂停并在后台运行命令**\n\n    ctrl + z    暂停应用程序\n    bg          让其在后台运行\n    fg          重新将运用程序唤到前台\n\n**linux命令行快捷键**\n\n    ctrl + u    剪切光标前的内容\n    ctrl + k    剪切光标至行未的内容\n    crrl + y    粘帖\n    ctrl + e    移动光标至行抹\n    ctrl + a    移动光标到行首\n    alt  + f    跳到下一个空格\n    alt  + b    跳到上一个空格\n    alt  + Backspace  删除前一个单词\n    ctrl + w    剪切光标前一个单词\n    ctrl + l    清屏\n    stty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n    ^a^b^       替换上一个命令a变成b(命令输错可用)\n\n**命令复用**\n\n    !!          重复上一条命令\n    c         重复上一条以ec开头的命令\n    !76         用命令历史(history)中的76号命令\n\n**{}()语法**\n\n    touch name{1..10}.text\n    $(cmd)  #执行cmd在替换原来的命令\n    ()  # 命令组括号中的命令会在开一个子shell执行\n\n","slug":"linux简记","published":1,"updated":"2020-02-18T11:17:17.775Z","_id":"ck6qhajbh0006zsno1b0fao4j","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong>linux命令这么多我该怎么记-如何查找Linux的命令</strong><br><a href=\"https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\" target=\"_blank\" rel=\"noopener\">https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html</a></p>\n<p><em>find        查找</em></p>\n<blockquote>\n<p>-name         名称<br>  -maxdepth     递归层级(大)<br>  -mindepth     递归层级(小)<br>  -user         用户<br>  -group        属组<br>  -perm         权限<br>  -not          非(-not -user [name] #不是name用户,group等也可以组合)<br>  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  </p>\n</blockquote>\n<pre><code>free -m     查看内存的使用\nuname -a    查看内核版本\nlocate      简单的查找文件\nldd     查看命令依赖\nwhereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\nwhich       搜索命令位置\nnl          查看文件内容会显示行号\nwc          统计文件信息\ntype        查看是不是shell自带命令\nhistory     查看最近的所有命令可以陪grep使用，效果更好\nwhoami      查看当前用户\nuseradd     创建用户\nchmod       权限操作\nchown       修改文件所有者(属主)\nalias       取别名\ndf -h       显示已经挂载的分区列表\ndu -sh      查看目录占用空间\ndu -h       查看文件大小\nsed &apos;s/stringa1/stringa2/g&apos; example.txt 替换命令，将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;\ndump -0aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的完整备份\nnohup       使用nohup在登出ssh会话后仍继续运行命令\nranger      文件浏览\nlsblk    查看磁盘挂载</code></pre><p><strong>进程管理</strong></p>\n<pre><code>kill pid    杀掉进程</code></pre><p><strong>暂停并在后台运行命令</strong></p>\n<pre><code>ctrl + z    暂停应用程序\nbg          让其在后台运行\nfg          重新将运用程序唤到前台</code></pre><p><strong>linux命令行快捷键</strong></p>\n<pre><code>ctrl + u    剪切光标前的内容\nctrl + k    剪切光标至行未的内容\ncrrl + y    粘帖\nctrl + e    移动光标至行抹\nctrl + a    移动光标到行首\nalt  + f    跳到下一个空格\nalt  + b    跳到上一个空格\nalt  + Backspace  删除前一个单词\nctrl + w    剪切光标前一个单词\nctrl + l    清屏\nstty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n^a^b^       替换上一个命令a变成b(命令输错可用)</code></pre><p><strong>命令复用</strong></p>\n<pre><code>!!          重复上一条命令\nc         重复上一条以ec开头的命令\n!76         用命令历史(history)中的76号命令</code></pre><p><strong>{}()语法</strong></p>\n<pre><code>touch name{1..10}.text\n$(cmd)  #执行cmd在替换原来的命令\n()  # 命令组括号中的命令会在开一个子shell执行</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>linux命令这么多我该怎么记-如何查找Linux的命令</strong><br><a href=\"https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html\" target=\"_blank\" rel=\"noopener\">https://linux.cn/lfs/LFS-BOOK-7.7-systemd/index.html</a></p>\n<p><em>find        查找</em></p>\n<blockquote>\n<p>-name         名称<br>  -maxdepth     递归层级(大)<br>  -mindepth     递归层级(小)<br>  -user         用户<br>  -group        属组<br>  -perm         权限<br>  -not          非(-not -user [name] #不是name用户,group等也可以组合)<br>  -exec         后接要执行的命令(-exec chmod o-w # 根据查找到的文件将其他人的权限改为不可写)  </p>\n</blockquote>\n<pre><code>free -m     查看内存的使用\nuname -a    查看内核版本\nlocate      简单的查找文件\nldd     查看命令依赖\nwhereis     程序名搜索-b二进制文件-m man说明文件 -s源代码文件\nwhich       搜索命令位置\nnl          查看文件内容会显示行号\nwc          统计文件信息\ntype        查看是不是shell自带命令\nhistory     查看最近的所有命令可以陪grep使用，效果更好\nwhoami      查看当前用户\nuseradd     创建用户\nchmod       权限操作\nchown       修改文件所有者(属主)\nalias       取别名\ndf -h       显示已经挂载的分区列表\ndu -sh      查看目录占用空间\ndu -h       查看文件大小\nsed &apos;s/stringa1/stringa2/g&apos; example.txt 替换命令，将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;\ndump -0aj -f /tmp/home0.bak /home 制作一个 &apos;/home&apos; 目录的完整备份\nnohup       使用nohup在登出ssh会话后仍继续运行命令\nranger      文件浏览\nlsblk    查看磁盘挂载</code></pre><p><strong>进程管理</strong></p>\n<pre><code>kill pid    杀掉进程</code></pre><p><strong>暂停并在后台运行命令</strong></p>\n<pre><code>ctrl + z    暂停应用程序\nbg          让其在后台运行\nfg          重新将运用程序唤到前台</code></pre><p><strong>linux命令行快捷键</strong></p>\n<pre><code>ctrl + u    剪切光标前的内容\nctrl + k    剪切光标至行未的内容\ncrrl + y    粘帖\nctrl + e    移动光标至行抹\nctrl + a    移动光标到行首\nalt  + f    跳到下一个空格\nalt  + b    跳到上一个空格\nalt  + Backspace  删除前一个单词\nctrl + w    剪切光标前一个单词\nctrl + l    清屏\nstty + a    打印或查看控制字符(ctrl-c, ctrl-d, ctrl-z等)\n^a^b^       替换上一个命令a变成b(命令输错可用)</code></pre><p><strong>命令复用</strong></p>\n<pre><code>!!          重复上一条命令\nc         重复上一条以ec开头的命令\n!76         用命令历史(history)中的76号命令</code></pre><p><strong>{}()语法</strong></p>\n<pre><code>touch name{1..10}.text\n$(cmd)  #执行cmd在替换原来的命令\n()  # 命令组括号中的命令会在开一个子shell执行</code></pre>"},{"title":"linux学习心得","date":"2018-11-11T07:30:16.000Z","description":"话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.","_content":"\n话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，\n回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是\n基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.\n\n首先你想知道你目录里面都有什么你可以用ls, 如果目录里又隐藏文件你得加l选项 -a才能看得到,查看文件\n的详细信息 -l 递归目录可以加 -r 他们的选项实在是太多了没有办法一个一个记这些就是我经常用到的，如果\n你的目录很大在-r的时候你就要注意了,有时候这些选项也可以结合起来一起使用.\n\n查看文件我一般直接vim，vim也有很多选项，Linux什么命令都有很多选项，vim我就很少记，还有一个不得不知\n道的命令就是cat -n显示行号.此外还有tac从最后一行开始显示，nl more less heat tail 这些都可以上网查查,\n关键字（Linux查看文件内容）网上的例子太多了，more和less都是分页显示有时我们可以和管管道符结合起来使\n用.\n\n改写文件我习惯直接vim，关于vim正常都会安装一些插件和修改配置文件，这也可能是我在Linux里修改的第一个\n配置文件，插件一般会用到一些主题语法高亮，自动补全，还有帮助文档汉化也是很重要的，还有快速移动目录\n树等等，一般我用现成的配置k-vim，如果遇到YCM编译问题可能需要上网查找或人工编译，一般比较多都是环境\n和依赖问题，有时也会有配置方面的问题出现。\n\n删除文件和目录应该用rm 如果他是一个目录你应该加上 -r 选项目前没有了解到更多的删除工具或许你可以用组\n合命令,但是并不推荐这么做.\n\n关于复制文件或目录用的最多的就是cp了,同样,在Linux下很多选项都功能比较接近 -i 是处理前询问, -r是处理\n目录,加上 -f 是强制性的使用时则不会在处理的时候显示提问.\n\n移动和重命名就用mv 有时我会弄不清楚命令在执行的时候是重命名还是移动,我找了网上的一些说明,主要是第\n二个参数:如果是文件名将会重命名,如果第二个参数是已存在的目录它会将文件或目录全部转移至目录,当然它\n也可以同时完成移动和重命名操作.但是要注意的是mv的文件只会产生一个,这边也有一些选项：-b 存在则备份\n-i 询问 -f 强制执行 -u 如果目标文件存在只有是比较新才会复制。\n\n关于Linux的文件操作主要就是这些当然还得了解一下文件的属性及权限操作还有他们的拥有者操作,这些有时候\n也会困扰到你,不同发行版也有不同有些对刚接触的人会比较友好,有些则难度比较大(他们会把很多命令和文件\n都定义只有root用户可以操作,这是各有利弊主要的权限类命令有chown 修改所有者, chgrp 修改文件组别,\nchmod 修改权限, 详细以后在加以讨论.\n\n我在总结这些的时候也在网上查了很多,好像离了网我就什么都干不了了,不得不说什么都知道一点真的是不行\n总是什么都看起来好像很熟悉而用起来又感觉好像什么都不知道, 听说很多人都会用blog来给自己总结,所以\n我也开始了,最重要的是要把被动学习变成主动学习(被动学习就是你什么不知道的情况下你第一感觉就是\n上网查查, 如果不是很急比较特别的问题我觉得还是不要一遇问题就查网会比较好))\n\n如果希望和我取得联系可以给我发邮件给我:(hu.yihui@163.com),虽然没什么人给我发邮件我也很少去看.\n","source":"_posts/linux学习心得.md","raw":"---\ntitle: linux学习心得\ndate: 2018-11-11 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 日志\ntags: [linux] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.\n---\n\n话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，\n回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是\n基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.\n\n首先你想知道你目录里面都有什么你可以用ls, 如果目录里又隐藏文件你得加l选项 -a才能看得到,查看文件\n的详细信息 -l 递归目录可以加 -r 他们的选项实在是太多了没有办法一个一个记这些就是我经常用到的，如果\n你的目录很大在-r的时候你就要注意了,有时候这些选项也可以结合起来一起使用.\n\n查看文件我一般直接vim，vim也有很多选项，Linux什么命令都有很多选项，vim我就很少记，还有一个不得不知\n道的命令就是cat -n显示行号.此外还有tac从最后一行开始显示，nl more less heat tail 这些都可以上网查查,\n关键字（Linux查看文件内容）网上的例子太多了，more和less都是分页显示有时我们可以和管管道符结合起来使\n用.\n\n改写文件我习惯直接vim，关于vim正常都会安装一些插件和修改配置文件，这也可能是我在Linux里修改的第一个\n配置文件，插件一般会用到一些主题语法高亮，自动补全，还有帮助文档汉化也是很重要的，还有快速移动目录\n树等等，一般我用现成的配置k-vim，如果遇到YCM编译问题可能需要上网查找或人工编译，一般比较多都是环境\n和依赖问题，有时也会有配置方面的问题出现。\n\n删除文件和目录应该用rm 如果他是一个目录你应该加上 -r 选项目前没有了解到更多的删除工具或许你可以用组\n合命令,但是并不推荐这么做.\n\n关于复制文件或目录用的最多的就是cp了,同样,在Linux下很多选项都功能比较接近 -i 是处理前询问, -r是处理\n目录,加上 -f 是强制性的使用时则不会在处理的时候显示提问.\n\n移动和重命名就用mv 有时我会弄不清楚命令在执行的时候是重命名还是移动,我找了网上的一些说明,主要是第\n二个参数:如果是文件名将会重命名,如果第二个参数是已存在的目录它会将文件或目录全部转移至目录,当然它\n也可以同时完成移动和重命名操作.但是要注意的是mv的文件只会产生一个,这边也有一些选项：-b 存在则备份\n-i 询问 -f 强制执行 -u 如果目标文件存在只有是比较新才会复制。\n\n关于Linux的文件操作主要就是这些当然还得了解一下文件的属性及权限操作还有他们的拥有者操作,这些有时候\n也会困扰到你,不同发行版也有不同有些对刚接触的人会比较友好,有些则难度比较大(他们会把很多命令和文件\n都定义只有root用户可以操作,这是各有利弊主要的权限类命令有chown 修改所有者, chgrp 修改文件组别,\nchmod 修改权限, 详细以后在加以讨论.\n\n我在总结这些的时候也在网上查了很多,好像离了网我就什么都干不了了,不得不说什么都知道一点真的是不行\n总是什么都看起来好像很熟悉而用起来又感觉好像什么都不知道, 听说很多人都会用blog来给自己总结,所以\n我也开始了,最重要的是要把被动学习变成主动学习(被动学习就是你什么不知道的情况下你第一感觉就是\n上网查查, 如果不是很急比较特别的问题我觉得还是不要一遇问题就查网会比较好))\n\n如果希望和我取得联系可以给我发邮件给我:(hu.yihui@163.com),虽然没什么人给我发邮件我也很少去看.\n","slug":"linux学习心得","published":1,"updated":"2020-02-18T11:21:35.066Z","_id":"ck6qhajbj0007zsnoatpy21zd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，<br>回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是<br>基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.</p>\n<p>首先你想知道你目录里面都有什么你可以用ls, 如果目录里又隐藏文件你得加l选项 -a才能看得到,查看文件<br>的详细信息 -l 递归目录可以加 -r 他们的选项实在是太多了没有办法一个一个记这些就是我经常用到的，如果<br>你的目录很大在-r的时候你就要注意了,有时候这些选项也可以结合起来一起使用.</p>\n<p>查看文件我一般直接vim，vim也有很多选项，Linux什么命令都有很多选项，vim我就很少记，还有一个不得不知<br>道的命令就是cat -n显示行号.此外还有tac从最后一行开始显示，nl more less heat tail 这些都可以上网查查,<br>关键字（Linux查看文件内容）网上的例子太多了，more和less都是分页显示有时我们可以和管管道符结合起来使<br>用.</p>\n<p>改写文件我习惯直接vim，关于vim正常都会安装一些插件和修改配置文件，这也可能是我在Linux里修改的第一个<br>配置文件，插件一般会用到一些主题语法高亮，自动补全，还有帮助文档汉化也是很重要的，还有快速移动目录<br>树等等，一般我用现成的配置k-vim，如果遇到YCM编译问题可能需要上网查找或人工编译，一般比较多都是环境<br>和依赖问题，有时也会有配置方面的问题出现。</p>\n<p>删除文件和目录应该用rm 如果他是一个目录你应该加上 -r 选项目前没有了解到更多的删除工具或许你可以用组<br>合命令,但是并不推荐这么做.</p>\n<p>关于复制文件或目录用的最多的就是cp了,同样,在Linux下很多选项都功能比较接近 -i 是处理前询问, -r是处理<br>目录,加上 -f 是强制性的使用时则不会在处理的时候显示提问.</p>\n<p>移动和重命名就用mv 有时我会弄不清楚命令在执行的时候是重命名还是移动,我找了网上的一些说明,主要是第<br>二个参数:如果是文件名将会重命名,如果第二个参数是已存在的目录它会将文件或目录全部转移至目录,当然它<br>也可以同时完成移动和重命名操作.但是要注意的是mv的文件只会产生一个,这边也有一些选项：-b 存在则备份<br>-i 询问 -f 强制执行 -u 如果目标文件存在只有是比较新才会复制。</p>\n<p>关于Linux的文件操作主要就是这些当然还得了解一下文件的属性及权限操作还有他们的拥有者操作,这些有时候<br>也会困扰到你,不同发行版也有不同有些对刚接触的人会比较友好,有些则难度比较大(他们会把很多命令和文件<br>都定义只有root用户可以操作,这是各有利弊主要的权限类命令有chown 修改所有者, chgrp 修改文件组别,<br>chmod 修改权限, 详细以后在加以讨论.</p>\n<p>我在总结这些的时候也在网上查了很多,好像离了网我就什么都干不了了,不得不说什么都知道一点真的是不行<br>总是什么都看起来好像很熟悉而用起来又感觉好像什么都不知道, 听说很多人都会用blog来给自己总结,所以<br>我也开始了,最重要的是要把被动学习变成主动学习(被动学习就是你什么不知道的情况下你第一感觉就是<br>上网查查, 如果不是很急比较特别的问题我觉得还是不要一遇问题就查网会比较好))</p>\n<p>如果希望和我取得联系可以给我发邮件给我:(<a href=\"mailto:hu.yihui@163.com\">hu.yihui@163.com</a>),虽然没什么人给我发邮件我也很少去看.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>话说用Linux陆陆续续也有些年头了,总感觉自己还是个菜鸟什么命令都要查一查跟高手简直不要区别太大，<br>回顾了一下自身的处境我该想想Linux重要的东西都有哪些，没错就是增删改查，增删改查那是什么？就是<br>基本的文件操作，把这些总结下来后面再来谈谈安装软件的问题.</p>\n<p>首先你想知道你目录里面都有什么你可以用ls, 如果目录里又隐藏文件你得加l选项 -a才能看得到,查看文件<br>的详细信息 -l 递归目录可以加 -r 他们的选项实在是太多了没有办法一个一个记这些就是我经常用到的，如果<br>你的目录很大在-r的时候你就要注意了,有时候这些选项也可以结合起来一起使用.</p>\n<p>查看文件我一般直接vim，vim也有很多选项，Linux什么命令都有很多选项，vim我就很少记，还有一个不得不知<br>道的命令就是cat -n显示行号.此外还有tac从最后一行开始显示，nl more less heat tail 这些都可以上网查查,<br>关键字（Linux查看文件内容）网上的例子太多了，more和less都是分页显示有时我们可以和管管道符结合起来使<br>用.</p>\n<p>改写文件我习惯直接vim，关于vim正常都会安装一些插件和修改配置文件，这也可能是我在Linux里修改的第一个<br>配置文件，插件一般会用到一些主题语法高亮，自动补全，还有帮助文档汉化也是很重要的，还有快速移动目录<br>树等等，一般我用现成的配置k-vim，如果遇到YCM编译问题可能需要上网查找或人工编译，一般比较多都是环境<br>和依赖问题，有时也会有配置方面的问题出现。</p>\n<p>删除文件和目录应该用rm 如果他是一个目录你应该加上 -r 选项目前没有了解到更多的删除工具或许你可以用组<br>合命令,但是并不推荐这么做.</p>\n<p>关于复制文件或目录用的最多的就是cp了,同样,在Linux下很多选项都功能比较接近 -i 是处理前询问, -r是处理<br>目录,加上 -f 是强制性的使用时则不会在处理的时候显示提问.</p>\n<p>移动和重命名就用mv 有时我会弄不清楚命令在执行的时候是重命名还是移动,我找了网上的一些说明,主要是第<br>二个参数:如果是文件名将会重命名,如果第二个参数是已存在的目录它会将文件或目录全部转移至目录,当然它<br>也可以同时完成移动和重命名操作.但是要注意的是mv的文件只会产生一个,这边也有一些选项：-b 存在则备份<br>-i 询问 -f 强制执行 -u 如果目标文件存在只有是比较新才会复制。</p>\n<p>关于Linux的文件操作主要就是这些当然还得了解一下文件的属性及权限操作还有他们的拥有者操作,这些有时候<br>也会困扰到你,不同发行版也有不同有些对刚接触的人会比较友好,有些则难度比较大(他们会把很多命令和文件<br>都定义只有root用户可以操作,这是各有利弊主要的权限类命令有chown 修改所有者, chgrp 修改文件组别,<br>chmod 修改权限, 详细以后在加以讨论.</p>\n<p>我在总结这些的时候也在网上查了很多,好像离了网我就什么都干不了了,不得不说什么都知道一点真的是不行<br>总是什么都看起来好像很熟悉而用起来又感觉好像什么都不知道, 听说很多人都会用blog来给自己总结,所以<br>我也开始了,最重要的是要把被动学习变成主动学习(被动学习就是你什么不知道的情况下你第一感觉就是<br>上网查查, 如果不是很急比较特别的问题我觉得还是不要一遇问题就查网会比较好))</p>\n<p>如果希望和我取得联系可以给我发邮件给我:(<a href=\"mailto:hu.yihui@163.com\">hu.yihui@163.com</a>),虽然没什么人给我发邮件我也很少去看.</p>\n"},{"title":"pacman简记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n#1. 第一部分使用 pacman-mirrors 更新官方软件源\n##1.1  按照地区自动更新为最快最稳定的软件源镜像地址\n  sudo pacman-mirrors --country China\n##1.2. 恢复默认软件源操作\n  sudo pacman-mirrors --interactive --default\n\n##1.3 软件源更新之后，我们一般会进行系统更新\n  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作\n\n##1.4 查看所有可用的地区信息\n  sudo pacman-mirrors -l\n————————————————\n\n\n#2. 第二部分使用 pacman 管理软件\n##2.1 同步并且更新你的系统\n  sudo pacman -Syyu\n##2.2 在软件仓库中搜索软件\n  sudo pacman -Ss [software package name]\n##2.3 查看已安装软件\n  sudo pacman -Qs [software package name]\n  sudo pacman -Qi [software package name] # 附带详细信息\n  sudo pacman -Qii [software package name] # 附带更加详细的包信息\n  sudo pacman -Ql # 列出所有安装的软件包\n##2.4 查看软件的详细依赖\n  sudo pactree [software package name]\n##2.5 查看系统中那些没有被使用软件依赖包（orphans）\n  sudo pacman -Qdt\n##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove --purge】\n  sudo pacman -Rs $(pacman -Qdtq)\n##2.7 下载并安装软件包\n  sudo pacman -Syu [software package name] # 从软件仓库安装\n  yay -S [software package name]  # Packages from the AUR\n  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装\n  pacman -U http://www.examplepackage/repo/examplepkg.tar.xz # 从网络安装【非官方仓库】\n##2.8 卸载软件\n  sudo pacman -R [software package name] \n  sudo pacman -Rs [software package name] # 同时删除依赖\n  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除\n##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】\n  sudo pacman -Sc\n  sudo pacman -Scc # 更彻底的清理\n  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看\n————————————————\n","source":"_posts/pacman简记.md","raw":"---\ntitle: pacman简记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 笔记 #分类\ntags: [arch, pacman,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n#1. 第一部分使用 pacman-mirrors 更新官方软件源\n##1.1  按照地区自动更新为最快最稳定的软件源镜像地址\n  sudo pacman-mirrors --country China\n##1.2. 恢复默认软件源操作\n  sudo pacman-mirrors --interactive --default\n\n##1.3 软件源更新之后，我们一般会进行系统更新\n  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作\n\n##1.4 查看所有可用的地区信息\n  sudo pacman-mirrors -l\n————————————————\n\n\n#2. 第二部分使用 pacman 管理软件\n##2.1 同步并且更新你的系统\n  sudo pacman -Syyu\n##2.2 在软件仓库中搜索软件\n  sudo pacman -Ss [software package name]\n##2.3 查看已安装软件\n  sudo pacman -Qs [software package name]\n  sudo pacman -Qi [software package name] # 附带详细信息\n  sudo pacman -Qii [software package name] # 附带更加详细的包信息\n  sudo pacman -Ql # 列出所有安装的软件包\n##2.4 查看软件的详细依赖\n  sudo pactree [software package name]\n##2.5 查看系统中那些没有被使用软件依赖包（orphans）\n  sudo pacman -Qdt\n##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove --purge】\n  sudo pacman -Rs $(pacman -Qdtq)\n##2.7 下载并安装软件包\n  sudo pacman -Syu [software package name] # 从软件仓库安装\n  yay -S [software package name]  # Packages from the AUR\n  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装\n  pacman -U http://www.examplepackage/repo/examplepkg.tar.xz # 从网络安装【非官方仓库】\n##2.8 卸载软件\n  sudo pacman -R [software package name] \n  sudo pacman -Rs [software package name] # 同时删除依赖\n  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除\n##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】\n  sudo pacman -Sc\n  sudo pacman -Scc # 更彻底的清理\n  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看\n————————————————\n","slug":"pacman简记","published":1,"updated":"2020-02-17T11:29:59.471Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajbk0008zsno1twnaepg","content":"<p>#1. 第一部分使用 pacman-mirrors 更新官方软件源<br>##1.1  按照地区自动更新为最快最稳定的软件源镜像地址<br>  sudo pacman-mirrors –country China<br>##1.2. 恢复默认软件源操作<br>  sudo pacman-mirrors –interactive –default</p>\n<p>##1.3 软件源更新之后，我们一般会进行系统更新<br>  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作</p>\n<p>##1.4 查看所有可用的地区信息<br>  sudo pacman-mirrors -l<br>————————————————</p>\n<p>#2. 第二部分使用 pacman 管理软件<br>##2.1 同步并且更新你的系统<br>  sudo pacman -Syyu<br>##2.2 在软件仓库中搜索软件<br>  sudo pacman -Ss [software package name]<br>##2.3 查看已安装软件<br>  sudo pacman -Qs [software package name]<br>  sudo pacman -Qi [software package name] # 附带详细信息<br>  sudo pacman -Qii [software package name] # 附带更加详细的包信息<br>  sudo pacman -Ql # 列出所有安装的软件包<br>##2.4 查看软件的详细依赖<br>  sudo pactree [software package name]<br>##2.5 查看系统中那些没有被使用软件依赖包（orphans）<br>  sudo pacman -Qdt<br>##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove –purge】<br>  sudo pacman -Rs $(pacman -Qdtq)<br>##2.7 下载并安装软件包<br>  sudo pacman -Syu [software package name] # 从软件仓库安装<br>  yay -S [software package name]  # Packages from the AUR<br>  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装<br>  pacman -U <a href=\"http://www.examplepackage/repo/examplepkg.tar.xz\" target=\"_blank\" rel=\"noopener\">http://www.examplepackage/repo/examplepkg.tar.xz</a> # 从网络安装【非官方仓库】<br>##2.8 卸载软件<br>  sudo pacman -R [software package name]<br>  sudo pacman -Rs [software package name] # 同时删除依赖<br>  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除<br>##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】<br>  sudo pacman -Sc<br>  sudo pacman -Scc # 更彻底的清理<br>  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看<br>————————————————</p>\n","site":{"data":{}},"excerpt":"","more":"<p>#1. 第一部分使用 pacman-mirrors 更新官方软件源<br>##1.1  按照地区自动更新为最快最稳定的软件源镜像地址<br>  sudo pacman-mirrors –country China<br>##1.2. 恢复默认软件源操作<br>  sudo pacman-mirrors –interactive –default</p>\n<p>##1.3 软件源更新之后，我们一般会进行系统更新<br>  sudo pacman -Syyu # 软件源更新完成之后进行系统软件更新操作</p>\n<p>##1.4 查看所有可用的地区信息<br>  sudo pacman-mirrors -l<br>————————————————</p>\n<p>#2. 第二部分使用 pacman 管理软件<br>##2.1 同步并且更新你的系统<br>  sudo pacman -Syyu<br>##2.2 在软件仓库中搜索软件<br>  sudo pacman -Ss [software package name]<br>##2.3 查看已安装软件<br>  sudo pacman -Qs [software package name]<br>  sudo pacman -Qi [software package name] # 附带详细信息<br>  sudo pacman -Qii [software package name] # 附带更加详细的包信息<br>  sudo pacman -Ql # 列出所有安装的软件包<br>##2.4 查看软件的详细依赖<br>  sudo pactree [software package name]<br>##2.5 查看系统中那些没有被使用软件依赖包（orphans）<br>  sudo pacman -Qdt<br>##2.6 自动移除那些系统中没有被使用的依赖包【类似于Debian下的 sudo apt autoremove –purge】<br>  sudo pacman -Rs $(pacman -Qdtq)<br>##2.7 下载并安装软件包<br>  sudo pacman -Syu [software package name] # 从软件仓库安装<br>  yay -S [software package name]  # Packages from the AUR<br>  sudo pacman -U [/package_path/][software package name.pkg.tar.xz] # 从本地安装<br>  pacman -U <a href=\"http://www.examplepackage/repo/examplepkg.tar.xz\" target=\"_blank\" rel=\"noopener\">http://www.examplepackage/repo/examplepkg.tar.xz</a> # 从网络安装【非官方仓库】<br>##2.8 卸载软件<br>  sudo pacman -R [software package name]<br>  sudo pacman -Rs [software package name] # 同时删除依赖<br>  sudo pacman -Rns [software package name] # 删除软件及其依赖，还有pacman生成的配置文件，即更彻底的删除<br>##2.9 清空缓存【默认情况下安装软件会先来缓存中查看是否已经下载过，没有再去下载，软件安装后通常下载缓存还在】<br>  sudo pacman -Sc<br>  sudo pacman -Scc # 更彻底的清理<br>  关于 pacman 常用就这些了，更多请使用 man pacman OR pacman -h 去查看<br>————————————————</p>\n"},{"title":"shell常用快捷键","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**方向          ＜－前               后 -＞**  \n**删除**  \nctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl  \nctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh  \nctrl + k     删除光标后面所有字符相当于VIM里d shift+$  \nctrl + u     删除光标前面所有字符相当于VIM里d shift+^  \nctrl + w     删除光标前一个单词相当于VIM里db  \nctrl + y     恢复ctrl+u上次执行时删除的字符  \nctrl + ?     撤消前一次输入  \nalt  + r     撤消前一次动作  \nalt  + d     删除光标所在位置的后单词  \n\n**移动**  \nctrl + a      将光标移动到命令行开头相当于VIM里shift+^  \nctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$  \nctrl + f      光标向后移动一个字符相当于VIM里l  \nctrl + b      光标向前移动一个字符相当于VIM里h  \nctrl + 方向键左键    光标移动到前一个单词开头  \nctrl + 方向键右键    光标移动到后一个单词结尾  \nctrl + x       在上次光标所在字符和当前光标所在字符之间跳转  \nalt  + f      跳到光标所在位置单词尾部  \n\n\n**替换**  \nctrl + t     将光标当前字符与前面一个字符替换  \nalt  + t     交换两个光标当前所处位置单词和光标前一个单词  \nalt  + u     把光标当前位置单词变为大写  \nalt  + l     把光标当前位置单词变为小写  \nalt  + c     把光标当前位置单词头一个字母变为大写  \n^oldstr^newstr    替换前一次命令中字符串  \n\n**历史命令编辑**  \nctrl + p    返回上一次输入命令字符  \nctrl + r    输入单词搜索历史命令  \nalt  + p    输入字符查找与字符相接近的历史命令  \nalt  + >    返回上一次执行命令  \n\n**其它**  \nctrl + s      锁住终端  \nctrl + q      解锁终端  \nctrl + l      清屏相当于命令clear  \nctrl + c      另起一行  \nctrl + i      类似TAB健补全功能  \nctrl + o      重复执行命令  \nalt  + 数字键  操作的次数  \n\n**实际操作:**  \n```bash\n-#c+l  清屏先  \nminuit@suse:~>str1 str2 str3  \n#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c\nminuit@suse:~> Str1 str2 str3\n#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人\n#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住\n#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。\nminuit@suse:~> Str1 STR2 str3\n#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单\n#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子\n#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]\n#标题:如何将数据文件中的每个词的第一个字母变成大写？\n#哈哈这个难不到我们吧因为我们已经会了a+c了\nminuit@suse:~> welcome to chinaunix!\n#不就是变个大小写吗按住c+a接着a+3+c看看效果\nminuit@suse:~> Welcome To Chinaunix!\n#GOOD很简单\n我们再来试试替换\nminuit@suse:~> Welcome To Chinaunix!\n#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t\nminuit@suse:~> To Welcome Chinaunix!\n#现在成这样子的了如果我用再按a+2+t那又变了一个样\nminuit@suse:~> Chinaunix!  Welcome To\n#好了来一点比较常用的\nminuit@suse:~>ls /tmp/\n #看看下面有些什么\nfile1 file2 file3 ..... ..\nminuit@suse:~>^ls^cd\n #现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间\ncd /tmp/\nminuit@suse:/tmp>\n#进入了tmp目录了\n```\n###跳转的命令就不试了大家自己体会试也看不见^_^   ###\n","source":"_posts/shell常用快捷键.md","raw":"---\ntitle: shell常用快捷键 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: shell, linux, 笔记 #分类\ntags: [shell,笔记,linux] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**方向          ＜－前               后 -＞**  \n**删除**  \nctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl  \nctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh  \nctrl + k     删除光标后面所有字符相当于VIM里d shift+$  \nctrl + u     删除光标前面所有字符相当于VIM里d shift+^  \nctrl + w     删除光标前一个单词相当于VIM里db  \nctrl + y     恢复ctrl+u上次执行时删除的字符  \nctrl + ?     撤消前一次输入  \nalt  + r     撤消前一次动作  \nalt  + d     删除光标所在位置的后单词  \n\n**移动**  \nctrl + a      将光标移动到命令行开头相当于VIM里shift+^  \nctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$  \nctrl + f      光标向后移动一个字符相当于VIM里l  \nctrl + b      光标向前移动一个字符相当于VIM里h  \nctrl + 方向键左键    光标移动到前一个单词开头  \nctrl + 方向键右键    光标移动到后一个单词结尾  \nctrl + x       在上次光标所在字符和当前光标所在字符之间跳转  \nalt  + f      跳到光标所在位置单词尾部  \n\n\n**替换**  \nctrl + t     将光标当前字符与前面一个字符替换  \nalt  + t     交换两个光标当前所处位置单词和光标前一个单词  \nalt  + u     把光标当前位置单词变为大写  \nalt  + l     把光标当前位置单词变为小写  \nalt  + c     把光标当前位置单词头一个字母变为大写  \n^oldstr^newstr    替换前一次命令中字符串  \n\n**历史命令编辑**  \nctrl + p    返回上一次输入命令字符  \nctrl + r    输入单词搜索历史命令  \nalt  + p    输入字符查找与字符相接近的历史命令  \nalt  + >    返回上一次执行命令  \n\n**其它**  \nctrl + s      锁住终端  \nctrl + q      解锁终端  \nctrl + l      清屏相当于命令clear  \nctrl + c      另起一行  \nctrl + i      类似TAB健补全功能  \nctrl + o      重复执行命令  \nalt  + 数字键  操作的次数  \n\n**实际操作:**  \n```bash\n-#c+l  清屏先  \nminuit@suse:~>str1 str2 str3  \n#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c\nminuit@suse:~> Str1 str2 str3\n#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人\n#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住\n#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。\nminuit@suse:~> Str1 STR2 str3\n#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单\n#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子\n#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]\n#标题:如何将数据文件中的每个词的第一个字母变成大写？\n#哈哈这个难不到我们吧因为我们已经会了a+c了\nminuit@suse:~> welcome to chinaunix!\n#不就是变个大小写吗按住c+a接着a+3+c看看效果\nminuit@suse:~> Welcome To Chinaunix!\n#GOOD很简单\n我们再来试试替换\nminuit@suse:~> Welcome To Chinaunix!\n#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t\nminuit@suse:~> To Welcome Chinaunix!\n#现在成这样子的了如果我用再按a+2+t那又变了一个样\nminuit@suse:~> Chinaunix!  Welcome To\n#好了来一点比较常用的\nminuit@suse:~>ls /tmp/\n #看看下面有些什么\nfile1 file2 file3 ..... ..\nminuit@suse:~>^ls^cd\n #现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间\ncd /tmp/\nminuit@suse:/tmp>\n#进入了tmp目录了\n```\n###跳转的命令就不试了大家自己体会试也看不见^_^   ###\n","slug":"shell常用快捷键","published":1,"updated":"2020-02-17T11:30:56.821Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajbo000czsnofaf43017","content":"<p><strong>方向          ＜－前               后 -＞</strong><br><strong>删除</strong><br>ctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl<br>ctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh<br>ctrl + k     删除光标后面所有字符相当于VIM里d shift+$<br>ctrl + u     删除光标前面所有字符相当于VIM里d shift+^<br>ctrl + w     删除光标前一个单词相当于VIM里db<br>ctrl + y     恢复ctrl+u上次执行时删除的字符<br>ctrl + ?     撤消前一次输入<br>alt  + r     撤消前一次动作<br>alt  + d     删除光标所在位置的后单词  </p>\n<p><strong>移动</strong><br>ctrl + a      将光标移动到命令行开头相当于VIM里shift+^<br>ctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$<br>ctrl + f      光标向后移动一个字符相当于VIM里l<br>ctrl + b      光标向前移动一个字符相当于VIM里h<br>ctrl + 方向键左键    光标移动到前一个单词开头<br>ctrl + 方向键右键    光标移动到后一个单词结尾<br>ctrl + x       在上次光标所在字符和当前光标所在字符之间跳转<br>alt  + f      跳到光标所在位置单词尾部  </p>\n<p><strong>替换</strong><br>ctrl + t     将光标当前字符与前面一个字符替换<br>alt  + t     交换两个光标当前所处位置单词和光标前一个单词<br>alt  + u     把光标当前位置单词变为大写<br>alt  + l     把光标当前位置单词变为小写<br>alt  + c     把光标当前位置单词头一个字母变为大写<br>^oldstr^newstr    替换前一次命令中字符串  </p>\n<p><strong>历史命令编辑</strong><br>ctrl + p    返回上一次输入命令字符<br>ctrl + r    输入单词搜索历史命令<br>alt  + p    输入字符查找与字符相接近的历史命令<br>alt  + &gt;    返回上一次执行命令  </p>\n<p><strong>其它</strong><br>ctrl + s      锁住终端<br>ctrl + q      解锁终端<br>ctrl + l      清屏相当于命令clear<br>ctrl + c      另起一行<br>ctrl + i      类似TAB健补全功能<br>ctrl + o      重复执行命令<br>alt  + 数字键  操作的次数  </p>\n<p><strong>实际操作:</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"comment\">#c+l  清屏先  </span></span><br><span class=\"line\">minuit@suse:~&gt;str1 str2 str3  </span><br><span class=\"line\"><span class=\"comment\">#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 str2 str3</span><br><span class=\"line\"><span class=\"comment\">#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人</span></span><br><span class=\"line\"><span class=\"comment\">#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住</span></span><br><span class=\"line\"><span class=\"comment\">#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 STR2 str3</span><br><span class=\"line\"><span class=\"comment\">#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单</span></span><br><span class=\"line\"><span class=\"comment\">#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子</span></span><br><span class=\"line\"><span class=\"comment\">#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]</span></span><br><span class=\"line\"><span class=\"comment\">#标题:如何将数据文件中的每个词的第一个字母变成大写？</span></span><br><span class=\"line\"><span class=\"comment\">#哈哈这个难不到我们吧因为我们已经会了a+c了</span></span><br><span class=\"line\">minuit@suse:~&gt; welcome to chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#不就是变个大小写吗按住c+a接着a+3+c看看效果</span></span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#GOOD很简单</span></span><br><span class=\"line\">我们再来试试替换</span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t</span></span><br><span class=\"line\">minuit@suse:~&gt; To Welcome Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#现在成这样子的了如果我用再按a+2+t那又变了一个样</span></span><br><span class=\"line\">minuit@suse:~&gt; Chinaunix!  Welcome To</span><br><span class=\"line\"><span class=\"comment\">#好了来一点比较常用的</span></span><br><span class=\"line\">minuit@suse:~&gt;ls /tmp/</span><br><span class=\"line\"> <span class=\"comment\">#看看下面有些什么</span></span><br><span class=\"line\">file1 file2 file3 ..... ..</span><br><span class=\"line\">minuit@suse:~&gt;^ls^<span class=\"built_in\">cd</span></span><br><span class=\"line\"> <span class=\"comment\">#现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/</span><br><span class=\"line\">minuit@suse:/tmp&gt;</span><br><span class=\"line\"><span class=\"comment\">#进入了tmp目录了</span></span><br></pre></td></tr></table></figure>\n<p>###跳转的命令就不试了大家自己体会试也看不见^_^   ###</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>方向          ＜－前               后 -＞</strong><br><strong>删除</strong><br>ctrl + d     删除光标所在位置上的字符相当于VIM里x或者dl<br>ctrl + h     删除光标所在位置前的字符相当于VIM里hx或者dh<br>ctrl + k     删除光标后面所有字符相当于VIM里d shift+$<br>ctrl + u     删除光标前面所有字符相当于VIM里d shift+^<br>ctrl + w     删除光标前一个单词相当于VIM里db<br>ctrl + y     恢复ctrl+u上次执行时删除的字符<br>ctrl + ?     撤消前一次输入<br>alt  + r     撤消前一次动作<br>alt  + d     删除光标所在位置的后单词  </p>\n<p><strong>移动</strong><br>ctrl + a      将光标移动到命令行开头相当于VIM里shift+^<br>ctrl + e      将光标移动到命令行结尾处相当于VIM里shift+$<br>ctrl + f      光标向后移动一个字符相当于VIM里l<br>ctrl + b      光标向前移动一个字符相当于VIM里h<br>ctrl + 方向键左键    光标移动到前一个单词开头<br>ctrl + 方向键右键    光标移动到后一个单词结尾<br>ctrl + x       在上次光标所在字符和当前光标所在字符之间跳转<br>alt  + f      跳到光标所在位置单词尾部  </p>\n<p><strong>替换</strong><br>ctrl + t     将光标当前字符与前面一个字符替换<br>alt  + t     交换两个光标当前所处位置单词和光标前一个单词<br>alt  + u     把光标当前位置单词变为大写<br>alt  + l     把光标当前位置单词变为小写<br>alt  + c     把光标当前位置单词头一个字母变为大写<br>^oldstr^newstr    替换前一次命令中字符串  </p>\n<p><strong>历史命令编辑</strong><br>ctrl + p    返回上一次输入命令字符<br>ctrl + r    输入单词搜索历史命令<br>alt  + p    输入字符查找与字符相接近的历史命令<br>alt  + &gt;    返回上一次执行命令  </p>\n<p><strong>其它</strong><br>ctrl + s      锁住终端<br>ctrl + q      解锁终端<br>ctrl + l      清屏相当于命令clear<br>ctrl + c      另起一行<br>ctrl + i      类似TAB健补全功能<br>ctrl + o      重复执行命令<br>alt  + 数字键  操作的次数  </p>\n<p><strong>实际操作:</strong>  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-<span class=\"comment\">#c+l  清屏先  </span></span><br><span class=\"line\">minuit@suse:~&gt;str1 str2 str3  </span><br><span class=\"line\"><span class=\"comment\">#输入三个单词发现第一单词需要大写好按c+a跳到开头按a+c</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 str2 str3</span><br><span class=\"line\"><span class=\"comment\">#好现在单词就变成了现在这个样子,又发现第二个单词要全大写(这样的命令真是玩死人</span></span><br><span class=\"line\"><span class=\"comment\">#:( )好吧如果你当前光标在第二个单词,那直接a+u把这个单词改变,如果不在的话那按住</span></span><br><span class=\"line\"><span class=\"comment\">#c+a接着c+f跳到第二个单词那再a+u就OK了结果像下面所示。</span></span><br><span class=\"line\">minuit@suse:~&gt; Str1 STR2 str3</span><br><span class=\"line\"><span class=\"comment\">#我想换过来怎么办我的位置已经在最后一个单词这个好办按住a+2+b哈哈跳到了第二个单</span></span><br><span class=\"line\"><span class=\"comment\">#词再来一下a+l这下第二个单词全小写了,再来一个比较典型的例子</span></span><br><span class=\"line\"><span class=\"comment\">#[url]http://bbs.chinaunix.netviewthread.php?tid=842595[/url]</span></span><br><span class=\"line\"><span class=\"comment\">#标题:如何将数据文件中的每个词的第一个字母变成大写？</span></span><br><span class=\"line\"><span class=\"comment\">#哈哈这个难不到我们吧因为我们已经会了a+c了</span></span><br><span class=\"line\">minuit@suse:~&gt; welcome to chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#不就是变个大小写吗按住c+a接着a+3+c看看效果</span></span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#GOOD很简单</span></span><br><span class=\"line\">我们再来试试替换</span><br><span class=\"line\">minuit@suse:~&gt; Welcome To Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#还是这三单词c+a跳到开头再接着跳到第二个单词那(因为a+t只能跟前一个单词做替换所以不能在第一个单词按a+t)按住a+t</span></span><br><span class=\"line\">minuit@suse:~&gt; To Welcome Chinaunix!</span><br><span class=\"line\"><span class=\"comment\">#现在成这样子的了如果我用再按a+2+t那又变了一个样</span></span><br><span class=\"line\">minuit@suse:~&gt; Chinaunix!  Welcome To</span><br><span class=\"line\"><span class=\"comment\">#好了来一点比较常用的</span></span><br><span class=\"line\">minuit@suse:~&gt;ls /tmp/</span><br><span class=\"line\"> <span class=\"comment\">#看看下面有些什么</span></span><br><span class=\"line\">file1 file2 file3 ..... ..</span><br><span class=\"line\">minuit@suse:~&gt;^ls^<span class=\"built_in\">cd</span></span><br><span class=\"line\"> <span class=\"comment\">#现在再又想进入目录很简单的健入替换命令就行了在命令很长时用这个替换可以省掉很多按a+b或a+f的时间</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/</span><br><span class=\"line\">minuit@suse:/tmp&gt;</span><br><span class=\"line\"><span class=\"comment\">#进入了tmp目录了</span></span><br></pre></td></tr></table></figure>\n<p>###跳转的命令就不试了大家自己体会试也看不见^_^   ###</p>\n"},{"title":"vim笔记","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n**标记功能在浏览文件时非常有用**\n这个功能分为几种状态\n\n    m{a-zA-Z}   用标记\n    `{a-z}  文件\n    `{A-Z}  所有文件\n    `{0-9}  上次推出的位置\n    ``      至上次跳转之前的位置\n    `\"      至上次编辑此文件的位置\n    :marks  列出所有活动的标记\n\n**映射在文件修改时很有用**\n\n这个功能可映射几种模式\n\n\t:map\t\t普通，可视模式及操作符等待模式\n\t:vmap\t\t可视模式\n\t:nmap\t\t普通模式\n\t:omap\t\t操作符等待模式\n\t:map!\t\t插入和命令行模式\n\t:imap\t\t插入模式\n\t:cmap\t\t命令行模式\n\n**删 除 映 射**\n要删除一个映射，使用 \":unmap\" 命令。同样，删除映射的命令也和运行模式相关:\n\n\t:unmap\t\t普通，可视和操作符等待模式\n\t:vunmap\t\t可视模式\n\t:nunmap\t\t普通模式\n\t:ounmap\t\t操作符等待模式\n\t:unmap!\t\t插入和命令行模式\n\t:iunmap\t\t插入模式\n\t:cunmap\t\t命令行模式\n\nmap \\p {映射的键组合}\n这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操\n作的时候就很有用\n\n**重复操作及宏录制**\n\n    q{a-z}   开始录制\n    :执行vim操作:registers  (可以查看这些操作)\n    q   再次按q结束录制\n    @{a-z}  播放操作\n    N@a   重复10次名字为a的宏\n","source":"_posts/vim简记.md","raw":"---\ntitle: vim笔记 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: vim, 笔记 #分类\ntags: [vim,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n**标记功能在浏览文件时非常有用**\n这个功能分为几种状态\n\n    m{a-zA-Z}   用标记\n    `{a-z}  文件\n    `{A-Z}  所有文件\n    `{0-9}  上次推出的位置\n    ``      至上次跳转之前的位置\n    `\"      至上次编辑此文件的位置\n    :marks  列出所有活动的标记\n\n**映射在文件修改时很有用**\n\n这个功能可映射几种模式\n\n\t:map\t\t普通，可视模式及操作符等待模式\n\t:vmap\t\t可视模式\n\t:nmap\t\t普通模式\n\t:omap\t\t操作符等待模式\n\t:map!\t\t插入和命令行模式\n\t:imap\t\t插入模式\n\t:cmap\t\t命令行模式\n\n**删 除 映 射**\n要删除一个映射，使用 \":unmap\" 命令。同样，删除映射的命令也和运行模式相关:\n\n\t:unmap\t\t普通，可视和操作符等待模式\n\t:vunmap\t\t可视模式\n\t:nunmap\t\t普通模式\n\t:ounmap\t\t操作符等待模式\n\t:unmap!\t\t插入和命令行模式\n\t:iunmap\t\t插入模式\n\t:cunmap\t\t命令行模式\n\nmap \\p {映射的键组合}\n这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操\n作的时候就很有用\n\n**重复操作及宏录制**\n\n    q{a-z}   开始录制\n    :执行vim操作:registers  (可以查看这些操作)\n    q   再次按q结束录制\n    @{a-z}  播放操作\n    N@a   重复10次名字为a的宏\n","slug":"vim简记","published":1,"updated":"2020-02-17T11:31:24.667Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajbq000gzsnoap3nco5y","content":"<p><strong>标记功能在浏览文件时非常有用</strong><br>这个功能分为几种状态</p>\n<pre><code>m{a-zA-Z}   用标记\n`{a-z}  文件\n`{A-Z}  所有文件\n`{0-9}  上次推出的位置\n``      至上次跳转之前的位置\n`&quot;      至上次编辑此文件的位置\n:marks  列出所有活动的标记</code></pre><p><strong>映射在文件修改时很有用</strong></p>\n<p>这个功能可映射几种模式</p>\n<pre><code>:map        普通，可视模式及操作符等待模式\n:vmap        可视模式\n:nmap        普通模式\n:omap        操作符等待模式\n:map!        插入和命令行模式\n:imap        插入模式\n:cmap        命令行模式</code></pre><p><strong>删 除 映 射</strong><br>要删除一个映射，使用 “:unmap” 命令。同样，删除映射的命令也和运行模式相关:</p>\n<pre><code>:unmap        普通，可视和操作符等待模式\n:vunmap        可视模式\n:nunmap        普通模式\n:ounmap        操作符等待模式\n:unmap!        插入和命令行模式\n:iunmap        插入模式\n:cunmap        命令行模式</code></pre><p>map \\p {映射的键组合}<br>这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操<br>作的时候就很有用</p>\n<p><strong>重复操作及宏录制</strong></p>\n<pre><code>q{a-z}   开始录制\n:执行vim操作:registers  (可以查看这些操作)\nq   再次按q结束录制\n@{a-z}  播放操作\nN@a   重复10次名字为a的宏</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><strong>标记功能在浏览文件时非常有用</strong><br>这个功能分为几种状态</p>\n<pre><code>m{a-zA-Z}   用标记\n`{a-z}  文件\n`{A-Z}  所有文件\n`{0-9}  上次推出的位置\n``      至上次跳转之前的位置\n`&quot;      至上次编辑此文件的位置\n:marks  列出所有活动的标记</code></pre><p><strong>映射在文件修改时很有用</strong></p>\n<p>这个功能可映射几种模式</p>\n<pre><code>:map        普通，可视模式及操作符等待模式\n:vmap        可视模式\n:nmap        普通模式\n:omap        操作符等待模式\n:map!        插入和命令行模式\n:imap        插入模式\n:cmap        命令行模式</code></pre><p><strong>删 除 映 射</strong><br>要删除一个映射，使用 “:unmap” 命令。同样，删除映射的命令也和运行模式相关:</p>\n<pre><code>:unmap        普通，可视和操作符等待模式\n:vunmap        可视模式\n:nunmap        普通模式\n:ounmap        操作符等待模式\n:unmap!        插入和命令行模式\n:iunmap        插入模式\n:cunmap        命令行模式</code></pre><p>map \\p {映射的键组合}<br>这个组合可以是任何按键的组合也可以是自己编写的函数，假设现在有一段复杂重复的操<br>作的时候就很有用</p>\n<p><strong>重复操作及宏录制</strong></p>\n<pre><code>q{a-z}   开始录制\n:执行vim操作:registers  (可以查看这些操作)\nq   再次按q结束录制\n@{a-z}  播放操作\nN@a   重复10次名字为a的宏</code></pre>"},{"title":"爬虫框架思考","date":"2018-11-11T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n这个框架是否可以扩展插件,比如把 python 一些模块集成到里面去以扩展他的功能,\n目前正在学习阶段所以不是很明白,现在主要以 requests + re 为主,\n理解编程掌握 python 语法基础.\n","source":"_posts/爬虫框架思考.md","raw":"---\ntitle: 爬虫框架思考\ndate: 2018-11-11 15:30:16\ncategories: 日志 #分类\ntags: [爬虫] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n这个框架是否可以扩展插件,比如把 python 一些模块集成到里面去以扩展他的功能,\n目前正在学习阶段所以不是很明白,现在主要以 requests + re 为主,\n理解编程掌握 python 语法基础.\n","slug":"爬虫框架思考","published":1,"updated":"2020-02-17T11:52:48.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajbr000jzsnogrv112gc","content":"<p>这个框架是否可以扩展插件,比如把 python 一些模块集成到里面去以扩展他的功能,<br>目前正在学习阶段所以不是很明白,现在主要以 requests + re 为主,<br>理解编程掌握 python 语法基础.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这个框架是否可以扩展插件,比如把 python 一些模块集成到里面去以扩展他的功能,<br>目前正在学习阶段所以不是很明白,现在主要以 requests + re 为主,<br>理解编程掌握 python 语法基础.</p>\n"},{"title":"如何获得linux源码","date":"2018-11-05T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n1.终端输入which [命令名],获取程序所在目录\n2.输入dpkg -S [命令路径],得知命令所在包\n3.sudo apt-get source [包名],下载指定的包\n4.如果遇到找不到合适的源的问题请用root权限编辑/etc/apt/sources.list添加国内源,个人觉得网易的不错\n5.下载源更新完毕后,就可以下载了,源码文件在包的src目录下\n","source":"_posts/如何获得linux源码.md","raw":"---\ntitle: 如何获得linux源码\ndate: 2018-11-05 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 日志\ntags: [linux] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n1.终端输入which [命令名],获取程序所在目录\n2.输入dpkg -S [命令路径],得知命令所在包\n3.sudo apt-get source [包名],下载指定的包\n4.如果遇到找不到合适的源的问题请用root权限编辑/etc/apt/sources.list添加国内源,个人觉得网易的不错\n5.下载源更新完毕后,就可以下载了,源码文件在包的src目录下\n","slug":"如何获得linux源码","published":1,"updated":"2020-02-17T11:56:19.949Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajbu000ozsno9s8g4jap","content":"<p>1.终端输入which [命令名],获取程序所在目录<br>2.输入dpkg -S [命令路径],得知命令所在包<br>3.sudo apt-get source [包名],下载指定的包<br>4.如果遇到找不到合适的源的问题请用root权限编辑/etc/apt/sources.list添加国内源,个人觉得网易的不错<br>5.下载源更新完毕后,就可以下载了,源码文件在包的src目录下</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.终端输入which [命令名],获取程序所在目录<br>2.输入dpkg -S [命令路径],得知命令所在包<br>3.sudo apt-get source [包名],下载指定的包<br>4.如果遇到找不到合适的源的问题请用root权限编辑/etc/apt/sources.list添加国内源,个人觉得网易的不错<br>5.下载源更新完毕后,就可以下载了,源码文件在包的src目录下</p>\n"},{"title":"python内建函数列表","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n# python内建函数列表\n\n**数学运算类**\n```python\nabs(x)                      求绝对值\ncomplex([real[, imag]]) \t创建一个复数\ndivmod(a, b) \t            分别取商和余数\nfloat([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回0.0\nint([x[, base]])  \t        将一个字符转换为int类型，base表示进制\nlong([x[, base]])  \t        将一个字符转换为long类型\npow(x, y[, z])  \t        返回x的y次幂\nrange([start], stop[, step])\n                            产生一个序列，默认从0开始\nround(x[, n])  \t            四舍五入\nsum(iterable[, start])  \t对集合求和\noct(x) \t                    将一个数字转化为8进制\nhex(x) \t                    将整数x转换为16进制字符串\nchr(i) \t                    返回整数i对应的ASCII字符\nbin(x) \t                    将整数x转换为二进制字符串\nbool([x]) \t                将x转换为Boolean类型k\n```\n\n**集合操作类**\n```python\nbasestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断\nformat(value [, format_spec])\n                            格式化输出字符串格式化的参数顺序从0开始，如“I am {0},I like {1}”\nunichr(i) \t                返回给定int类型的unicode\nenumerate(sequence [, start = 0])\n                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple\niter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符\nmax(iterable[, args...][key])\n                            返回集合中的最大值\nmin(iterable[, args...][key])\n                            返回集合中的最小值\ndict([arg]) \t            创建数据字典\nlist([iterable])  \t        将一个集合类转换为另外一个集合类\nset() \t                    set对象实例化\nfrozenset([iterable]) \t    产生一个不可变的set\nstr([object])  \t            转换为string类型\nsorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序\ntuple([iterable])  \t        生成一个tuple类型\nxrange([start], stop[, step])\n                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一\n                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列\n                            表很大时，这个特性能为我们节省内存\n```\n\n**逻辑判断**\n```python\nall(iterable)               iterable为True或迭代起为空返回True\nany(iterable)               如果iterable任一元素为真返回True如果迭代器为空返回False\ncmp(x, y) \t                如果x < y ,返回负数；x == y, 返回0；x > y,返回正数\n\n**反射**\n\ncallable(object)            检查对象object是否可调用\ncompile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)\n                            将source编译为代码或者AST对象。代码对象能够通过exec语句来执行或者eval()进行求值。\n                            1、参数source：字符串或者AST（Abstract Syntax Trees）对象。\n                            2、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。\n                            3、参数model：指定编译代码的种类。可以指定为 ‘exec’,’eval’,’single’。\n                            4、参数flag和dont_inherit：这两个参数暂不介绍\n dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。\n                            1、不带参数时，返回当前范围内的变量、方法和定义的类型列表；\n                            2、带参数时，返回参数的属性、方法列表。\n                            3、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。\n                            4、如果参数不包含__dir__()，该方法将最大限度地收集参数信息\ndelattr(object, name)       删除object对象名为name的属性\neval(expression, globals=None, locals=None)\n                            计算表达式expression的值\nexec(object[, globals[, locals]])\n                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。\n                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）\nfilter(function, iterable)  构造一个序列，等价于[ item for item in iterable if function(item)]\n                            1、参数function：返回值为True或False的函数，可以为None\n                            2、参数iterable：序列或可迭代对象\ngetattr(object, name[, default])\n                            获取一个类的属性\nglobals()                   返回表示当前全局符号表的字典\nhasattr(object, name)       判断对象object是否包含名为name的特性\nhash(object)                返回该对象的哈希值（如果它有的话）\nid(object)                  返回对象的“标识值”\nisinstance(object, classinfo)\n                            判断object是否是class的实例\nissubclass(class, classinfo)\n                            判断是否是子类\nlen(s)  \t                返回集合长度\nlocals()  \t                返回当前的变量列表\nmap(function, iterable, ...)\n                            遍历每个元素，执行function操作\nmemoryview(obj)  \t        返回一个内存镜像类型的对象\nnext(iterator[, default])  \t类似于iterator.next()\nproperty([fget[, fset[, fdel[, doc]]]])\n                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter\nreduce(function, iterable[, initializer])\n                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推\nreload(module)  \t        重新加载模块\nsetattr(object, name, value)\n                            设置属性值\nrepr(object)  \t            将一个对象变幻为可打印的格式\nslice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象\nstaticmethod \t            声明静态方法，是个注解\nsuper(type[, object-or-type])\n                            引用父类\ntype(object) \t            返回该object的类型\nvars([object])  \t        返回对象的变量，若无参数与dict()方法类似\nbytearray([source [, encoding [, errors]]])\n                            返回一个byte数组\n                            1、如果source为整数，则返回一个长度为source的初始化数组；\n                            2、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；\n                            3、如果source为可迭代类型，则元素必须为[0 ,255]中的整数；\n                            4、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.\nzip(*iterables)             创建一个聚合了来自每个\n```\n\n**IO操作**\n```python\nfile(filename [, mode [, bufsize]])\n                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，\n                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode\n                            参数中，将允许对文件同时进行读写操作\n                            1、参数filename：文件名称。\n                            2、参数mode：'r'（读）、'w'（写）、'a'（追加）。\n                            3、参数bufsize：如果为0表示不进行缓冲，如果为1表示进行行缓冲，如果是一个大于1的数表示缓冲区的大小 。\ninput([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入\nopen(name[, mode[, buffering]])\n                            打开文件与file有什么不同？推荐使用open\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\n                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。\n                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出\nraw_input([prompt])  \t    设置输入，输入都是作为字符串处理\n```\n\n**其他**\n\nhelp()--帮助信息\n\n[参照python3.7.4中文官方说明](https://docs.python.org/zh-cn/3.7/library/functions.html#hash)\n\n**__init__.py文件**\n\n这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．\n当我们导入一个包的时候实际上是导入了它的__init__.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．\n```python\n# __init__.py\n__all__ = ['os', 'sys', 're', 'urllib']\n\n# a.py\nfrom package import *\n```\n这时就会把注册在__init__.py文件中__all__列表中的模块和包导入到当前文件中来.\n\n**python 返回函数的理解**\n\n返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是\n不会立即执行而是等到调用的时候才执行优点是可以延迟计算\n\n**文件操作**\n\n```python\nwith open('name','r+') as f:\n    f.seek(0)   # 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空\n    f.truncate()\n```\n","source":"_posts/python简记.md","raw":"---\ntitle: python内建函数列表 #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: python, 笔记 #分类\ntags: [python,笔记] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n# python内建函数列表\n\n**数学运算类**\n```python\nabs(x)                      求绝对值\ncomplex([real[, imag]]) \t创建一个复数\ndivmod(a, b) \t            分别取商和余数\nfloat([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回0.0\nint([x[, base]])  \t        将一个字符转换为int类型，base表示进制\nlong([x[, base]])  \t        将一个字符转换为long类型\npow(x, y[, z])  \t        返回x的y次幂\nrange([start], stop[, step])\n                            产生一个序列，默认从0开始\nround(x[, n])  \t            四舍五入\nsum(iterable[, start])  \t对集合求和\noct(x) \t                    将一个数字转化为8进制\nhex(x) \t                    将整数x转换为16进制字符串\nchr(i) \t                    返回整数i对应的ASCII字符\nbin(x) \t                    将整数x转换为二进制字符串\nbool([x]) \t                将x转换为Boolean类型k\n```\n\n**集合操作类**\n```python\nbasestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断\nformat(value [, format_spec])\n                            格式化输出字符串格式化的参数顺序从0开始，如“I am {0},I like {1}”\nunichr(i) \t                返回给定int类型的unicode\nenumerate(sequence [, start = 0])\n                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple\niter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符\nmax(iterable[, args...][key])\n                            返回集合中的最大值\nmin(iterable[, args...][key])\n                            返回集合中的最小值\ndict([arg]) \t            创建数据字典\nlist([iterable])  \t        将一个集合类转换为另外一个集合类\nset() \t                    set对象实例化\nfrozenset([iterable]) \t    产生一个不可变的set\nstr([object])  \t            转换为string类型\nsorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序\ntuple([iterable])  \t        生成一个tuple类型\nxrange([start], stop[, step])\n                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一\n                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列\n                            表很大时，这个特性能为我们节省内存\n```\n\n**逻辑判断**\n```python\nall(iterable)               iterable为True或迭代起为空返回True\nany(iterable)               如果iterable任一元素为真返回True如果迭代器为空返回False\ncmp(x, y) \t                如果x < y ,返回负数；x == y, 返回0；x > y,返回正数\n\n**反射**\n\ncallable(object)            检查对象object是否可调用\ncompile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)\n                            将source编译为代码或者AST对象。代码对象能够通过exec语句来执行或者eval()进行求值。\n                            1、参数source：字符串或者AST（Abstract Syntax Trees）对象。\n                            2、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。\n                            3、参数model：指定编译代码的种类。可以指定为 ‘exec’,’eval’,’single’。\n                            4、参数flag和dont_inherit：这两个参数暂不介绍\n dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。\n                            1、不带参数时，返回当前范围内的变量、方法和定义的类型列表；\n                            2、带参数时，返回参数的属性、方法列表。\n                            3、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。\n                            4、如果参数不包含__dir__()，该方法将最大限度地收集参数信息\ndelattr(object, name)       删除object对象名为name的属性\neval(expression, globals=None, locals=None)\n                            计算表达式expression的值\nexec(object[, globals[, locals]])\n                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。\n                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）\nfilter(function, iterable)  构造一个序列，等价于[ item for item in iterable if function(item)]\n                            1、参数function：返回值为True或False的函数，可以为None\n                            2、参数iterable：序列或可迭代对象\ngetattr(object, name[, default])\n                            获取一个类的属性\nglobals()                   返回表示当前全局符号表的字典\nhasattr(object, name)       判断对象object是否包含名为name的特性\nhash(object)                返回该对象的哈希值（如果它有的话）\nid(object)                  返回对象的“标识值”\nisinstance(object, classinfo)\n                            判断object是否是class的实例\nissubclass(class, classinfo)\n                            判断是否是子类\nlen(s)  \t                返回集合长度\nlocals()  \t                返回当前的变量列表\nmap(function, iterable, ...)\n                            遍历每个元素，执行function操作\nmemoryview(obj)  \t        返回一个内存镜像类型的对象\nnext(iterator[, default])  \t类似于iterator.next()\nproperty([fget[, fset[, fdel[, doc]]]])\n                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter\nreduce(function, iterable[, initializer])\n                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推\nreload(module)  \t        重新加载模块\nsetattr(object, name, value)\n                            设置属性值\nrepr(object)  \t            将一个对象变幻为可打印的格式\nslice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象\nstaticmethod \t            声明静态方法，是个注解\nsuper(type[, object-or-type])\n                            引用父类\ntype(object) \t            返回该object的类型\nvars([object])  \t        返回对象的变量，若无参数与dict()方法类似\nbytearray([source [, encoding [, errors]]])\n                            返回一个byte数组\n                            1、如果source为整数，则返回一个长度为source的初始化数组；\n                            2、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；\n                            3、如果source为可迭代类型，则元素必须为[0 ,255]中的整数；\n                            4、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.\nzip(*iterables)             创建一个聚合了来自每个\n```\n\n**IO操作**\n```python\nfile(filename [, mode [, bufsize]])\n                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，\n                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode\n                            参数中，将允许对文件同时进行读写操作\n                            1、参数filename：文件名称。\n                            2、参数mode：'r'（读）、'w'（写）、'a'（追加）。\n                            3、参数bufsize：如果为0表示不进行缓冲，如果为1表示进行行缓冲，如果是一个大于1的数表示缓冲区的大小 。\ninput([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入\nopen(name[, mode[, buffering]])\n                            打开文件与file有什么不同？推荐使用open\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\n                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。\n                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出\nraw_input([prompt])  \t    设置输入，输入都是作为字符串处理\n```\n\n**其他**\n\nhelp()--帮助信息\n\n[参照python3.7.4中文官方说明](https://docs.python.org/zh-cn/3.7/library/functions.html#hash)\n\n**__init__.py文件**\n\n这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．\n当我们导入一个包的时候实际上是导入了它的__init__.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．\n```python\n# __init__.py\n__all__ = ['os', 'sys', 're', 'urllib']\n\n# a.py\nfrom package import *\n```\n这时就会把注册在__init__.py文件中__all__列表中的模块和包导入到当前文件中来.\n\n**python 返回函数的理解**\n\n返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是\n不会立即执行而是等到调用的时候才执行优点是可以延迟计算\n\n**文件操作**\n\n```python\nwith open('name','r+') as f:\n    f.seek(0)   # 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空\n    f.truncate()\n```\n","slug":"python简记","published":1,"updated":"2020-02-17T11:30:26.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6qhajf5001mzsnogt6n75zz","content":"<h1 id=\"python内建函数列表\"><a href=\"#python内建函数列表\" class=\"headerlink\" title=\"python内建函数列表\"></a>python内建函数列表</h1><p><strong>数学运算类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abs(x)                      求绝对值</span><br><span class=\"line\">complex([real[, imag]]) \t创建一个复数</span><br><span class=\"line\">divmod(a, b) \t            分别取商和余数</span><br><span class=\"line\">float([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回<span class=\"number\">0.0</span></span><br><span class=\"line\">int([x[, base]])  \t        将一个字符转换为int类型，base表示进制</span><br><span class=\"line\">long([x[, base]])  \t        将一个字符转换为long类型</span><br><span class=\"line\">pow(x, y[, z])  \t        返回x的y次幂</span><br><span class=\"line\">range([start], stop[, step])</span><br><span class=\"line\">                            产生一个序列，默认从<span class=\"number\">0</span>开始</span><br><span class=\"line\">round(x[, n])  \t            四舍五入</span><br><span class=\"line\">sum(iterable[, start])  \t对集合求和</span><br><span class=\"line\">oct(x) \t                    将一个数字转化为<span class=\"number\">8</span>进制</span><br><span class=\"line\">hex(x) \t                    将整数x转换为<span class=\"number\">16</span>进制字符串</span><br><span class=\"line\">chr(i) \t                    返回整数i对应的ASCII字符</span><br><span class=\"line\">bin(x) \t                    将整数x转换为二进制字符串</span><br><span class=\"line\">bool([x]) \t                将x转换为Boolean类型k</span><br></pre></td></tr></table></figure>\n\n<p><strong>集合操作类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">basestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断</span><br><span class=\"line\">format(value [, format_spec])</span><br><span class=\"line\">                            格式化输出字符串格式化的参数顺序从<span class=\"number\">0</span>开始，如“I am &#123;<span class=\"number\">0</span>&#125;,I like &#123;<span class=\"number\">1</span>&#125;”</span><br><span class=\"line\">unichr(i) \t                返回给定int类型的unicode</span><br><span class=\"line\">enumerate(sequence [, start = <span class=\"number\">0</span>])</span><br><span class=\"line\">                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple</span><br><span class=\"line\">iter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符</span><br><span class=\"line\">max(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最大值</span><br><span class=\"line\">min(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最小值</span><br><span class=\"line\">dict([arg]) \t            创建数据字典</span><br><span class=\"line\">list([iterable])  \t        将一个集合类转换为另外一个集合类</span><br><span class=\"line\">set() \t                    set对象实例化</span><br><span class=\"line\">frozenset([iterable]) \t    产生一个不可变的set</span><br><span class=\"line\">str([object])  \t            转换为string类型</span><br><span class=\"line\">sorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序</span><br><span class=\"line\">tuple([iterable])  \t        生成一个tuple类型</span><br><span class=\"line\">xrange([start], stop[, step])</span><br><span class=\"line\">                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一</span><br><span class=\"line\">                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列</span><br><span class=\"line\">                            表很大时，这个特性能为我们节省内存</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑判断</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all(iterable)               iterable为<span class=\"literal\">True</span>或迭代起为空返回<span class=\"literal\">True</span></span><br><span class=\"line\">any(iterable)               如果iterable任一元素为真返回<span class=\"literal\">True</span>如果迭代器为空返回<span class=\"literal\">False</span></span><br><span class=\"line\">cmp(x, y) \t                如果x &lt; y ,返回负数；x == y, 返回<span class=\"number\">0</span>；x &gt; y,返回正数</span><br><span class=\"line\"></span><br><span class=\"line\">**反射**</span><br><span class=\"line\"></span><br><span class=\"line\">callable(object)            检查对象object是否可调用</span><br><span class=\"line\">compile(source, filename, mode, flags=<span class=\"number\">0</span>, dont_inherit=<span class=\"literal\">False</span>, optimize=<span class=\"number\">-1</span>)</span><br><span class=\"line\">                            将source编译为代码或者AST对象。代码对象能够通过<span class=\"keyword\">exec</span>语句来执行或者eval()进行求值。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数source：字符串或者AST（Abstract Syntax Trees）对象。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数model：指定编译代码的种类。可以指定为 ‘<span class=\"keyword\">exec</span>’,’eval’,’single’。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、参数flag和dont_inherit：这两个参数暂不介绍</span><br><span class=\"line\"> dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、不带参数时，返回当前范围内的变量、方法和定义的类型列表；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、带参数时，返回参数的属性、方法列表。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果参数不包含__dir__()，该方法将最大限度地收集参数信息</span><br><span class=\"line\">delattr(object, name)       删除object对象名为name的属性</span><br><span class=\"line\">eval(expression, globals=<span class=\"literal\">None</span>, locals=<span class=\"literal\">None</span>)</span><br><span class=\"line\">                            计算表达式expression的值</span><br><span class=\"line\">exec(object[, globals[, locals]])</span><br><span class=\"line\">                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。</span><br><span class=\"line\">                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）</span><br><span class=\"line\">filter(function, iterable)  构造一个序列，等价于[ item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> iterable <span class=\"keyword\">if</span> function(item)]</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数function：返回值为<span class=\"literal\">True</span>或<span class=\"literal\">False</span>的函数，可以为<span class=\"literal\">None</span></span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数iterable：序列或可迭代对象</span><br><span class=\"line\">getattr(object, name[, default])</span><br><span class=\"line\">                            获取一个类的属性</span><br><span class=\"line\">globals()                   返回表示当前全局符号表的字典</span><br><span class=\"line\">hasattr(object, name)       判断对象object是否包含名为name的特性</span><br><span class=\"line\">hash(object)                返回该对象的哈希值（如果它有的话）</span><br><span class=\"line\">id(object)                  返回对象的“标识值”</span><br><span class=\"line\">isinstance(object, classinfo)</span><br><span class=\"line\">                            判断object是否是<span class=\"class\"><span class=\"keyword\">class</span>的实例</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">issubclass</span><span class=\"params\">(class, classinfo)</span></span></span><br><span class=\"line\"><span class=\"class\">                            判断是否是子类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">len</span><span class=\"params\">(s)</span>  \t                返回集合长度</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">locals</span><span class=\"params\">()</span>  \t                返回当前的变量列表</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">map</span><span class=\"params\">(function, iterable, ...)</span></span></span><br><span class=\"line\"><span class=\"class\">                            遍历每个元素，执行<span class=\"title\">function</span>操作</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">memoryview</span><span class=\"params\">(obj)</span>  \t        返回一个内存镜像类型的对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">next</span><span class=\"params\">(iterator[, default])</span>  \t类似于<span class=\"title\">iterator</span>.<span class=\"title\">next</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">property</span><span class=\"params\">([fget[, fset[, fdel[, doc]]]])</span></span></span><br><span class=\"line\">                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter</span><br><span class=\"line\">reduce(function, iterable[, initializer])</span><br><span class=\"line\">                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推</span><br><span class=\"line\">reload(module)  \t        重新加载模块</span><br><span class=\"line\">setattr(object, name, value)</span><br><span class=\"line\">                            设置属性值</span><br><span class=\"line\">repr(object)  \t            将一个对象变幻为可打印的格式</span><br><span class=\"line\">slice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象</span><br><span class=\"line\">staticmethod \t            声明静态方法，是个注解</span><br><span class=\"line\">super(type[, object-<span class=\"keyword\">or</span>-type])</span><br><span class=\"line\">                            引用父类</span><br><span class=\"line\">type(object) \t            返回该object的类型</span><br><span class=\"line\">vars([object])  \t        返回对象的变量，若无参数与dict()方法类似</span><br><span class=\"line\">bytearray([source [, encoding [, errors]]])</span><br><span class=\"line\">                            返回一个byte数组</span><br><span class=\"line\">                            <span class=\"number\">1</span>、如果source为整数，则返回一个长度为source的初始化数组；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果source为可迭代类型，则元素必须为[<span class=\"number\">0</span> ,<span class=\"number\">255</span>]中的整数；</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.</span><br><span class=\"line\">zip(*iterables)             创建一个聚合了来自每个</span><br></pre></td></tr></table></figure>\n\n<p><strong>IO操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file(filename [, mode [, bufsize]])</span><br><span class=\"line\">                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，</span><br><span class=\"line\">                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode</span><br><span class=\"line\">                            参数中，将允许对文件同时进行读写操作</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数filename：文件名称。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数mode：<span class=\"string\">'r'</span>（读）、<span class=\"string\">'w'</span>（写）、<span class=\"string\">'a'</span>（追加）。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数bufsize：如果为<span class=\"number\">0</span>表示不进行缓冲，如果为<span class=\"number\">1</span>表示进行行缓冲，如果是一个大于<span class=\"number\">1</span>的数表示缓冲区的大小 。</span><br><span class=\"line\">input([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入</span><br><span class=\"line\">open(name[, mode[, buffering]])</span><br><span class=\"line\">                            打开文件与file有什么不同？推荐使用open</span><br><span class=\"line\">print(*objects, sep=<span class=\"string\">' '</span>, end=<span class=\"string\">'\\n'</span>, file=sys.stdout, flush=<span class=\"literal\">False</span>)</span><br><span class=\"line\">                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。</span><br><span class=\"line\">                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出</span><br><span class=\"line\">raw_input([prompt])  \t    设置输入，输入都是作为字符串处理</span><br></pre></td></tr></table></figure>\n\n<p><strong>其他</strong></p>\n<p>help()–帮助信息</p>\n<p><a href=\"https://docs.python.org/zh-cn/3.7/library/functions.html#hash\" target=\"_blank\" rel=\"noopener\">参照python3.7.4中文官方说明</a></p>\n<p><strong><strong>init</strong>.py文件</strong></p>\n<p>这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．<br>当我们导入一个包的时候实际上是导入了它的<strong>init</strong>.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># __init__.py</span></span><br><span class=\"line\">__all__ = [<span class=\"string\">'os'</span>, <span class=\"string\">'sys'</span>, <span class=\"string\">'re'</span>, <span class=\"string\">'urllib'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>这时就会把注册在<strong>init</strong>.py文件中<strong>all</strong>列表中的模块和包导入到当前文件中来.</p>\n<p><strong>python 返回函数的理解</strong></p>\n<p>返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是<br>不会立即执行而是等到调用的时候才执行优点是可以延迟计算</p>\n<p><strong>文件操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'name'</span>,<span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.seek(<span class=\"number\">0</span>)   <span class=\"comment\"># 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空</span></span><br><span class=\"line\">    f.truncate()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"python内建函数列表\"><a href=\"#python内建函数列表\" class=\"headerlink\" title=\"python内建函数列表\"></a>python内建函数列表</h1><p><strong>数学运算类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">abs(x)                      求绝对值</span><br><span class=\"line\">complex([real[, imag]]) \t创建一个复数</span><br><span class=\"line\">divmod(a, b) \t            分别取商和余数</span><br><span class=\"line\">float([x]) \t                将一个字符串或数转换为浮点数。如果无参数将返回<span class=\"number\">0.0</span></span><br><span class=\"line\">int([x[, base]])  \t        将一个字符转换为int类型，base表示进制</span><br><span class=\"line\">long([x[, base]])  \t        将一个字符转换为long类型</span><br><span class=\"line\">pow(x, y[, z])  \t        返回x的y次幂</span><br><span class=\"line\">range([start], stop[, step])</span><br><span class=\"line\">                            产生一个序列，默认从<span class=\"number\">0</span>开始</span><br><span class=\"line\">round(x[, n])  \t            四舍五入</span><br><span class=\"line\">sum(iterable[, start])  \t对集合求和</span><br><span class=\"line\">oct(x) \t                    将一个数字转化为<span class=\"number\">8</span>进制</span><br><span class=\"line\">hex(x) \t                    将整数x转换为<span class=\"number\">16</span>进制字符串</span><br><span class=\"line\">chr(i) \t                    返回整数i对应的ASCII字符</span><br><span class=\"line\">bin(x) \t                    将整数x转换为二进制字符串</span><br><span class=\"line\">bool([x]) \t                将x转换为Boolean类型k</span><br></pre></td></tr></table></figure>\n\n<p><strong>集合操作类</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">basestring() \t            str和unicode的超类不能直接调用，可以用作isinstance判断</span><br><span class=\"line\">format(value [, format_spec])</span><br><span class=\"line\">                            格式化输出字符串格式化的参数顺序从<span class=\"number\">0</span>开始，如“I am &#123;<span class=\"number\">0</span>&#125;,I like &#123;<span class=\"number\">1</span>&#125;”</span><br><span class=\"line\">unichr(i) \t                返回给定int类型的unicode</span><br><span class=\"line\">enumerate(sequence [, start = <span class=\"number\">0</span>])</span><br><span class=\"line\">                            返回一个可枚举的对象,该对象的next()方法将返回一个tuple</span><br><span class=\"line\">iter(o[, sentinel]) \t    生成一个对象的迭代器，第二个参数表示分隔符</span><br><span class=\"line\">max(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最大值</span><br><span class=\"line\">min(iterable[, args...][key])</span><br><span class=\"line\">                            返回集合中的最小值</span><br><span class=\"line\">dict([arg]) \t            创建数据字典</span><br><span class=\"line\">list([iterable])  \t        将一个集合类转换为另外一个集合类</span><br><span class=\"line\">set() \t                    set对象实例化</span><br><span class=\"line\">frozenset([iterable]) \t    产生一个不可变的set</span><br><span class=\"line\">str([object])  \t            转换为string类型</span><br><span class=\"line\">sorted(iterable[, cmp[, key[, reverse]]])  \t队集合排序</span><br><span class=\"line\">tuple([iterable])  \t        生成一个tuple类型</span><br><span class=\"line\">xrange([start], stop[, step])</span><br><span class=\"line\">                            xrange()函数与range()类似，但xrnage()并不创建列表，而是返回一</span><br><span class=\"line\">                            个xrange对象，它的行为与列表相似，但是只在需要时才计算列表值，当列</span><br><span class=\"line\">                            表很大时，这个特性能为我们节省内存</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑判断</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">all(iterable)               iterable为<span class=\"literal\">True</span>或迭代起为空返回<span class=\"literal\">True</span></span><br><span class=\"line\">any(iterable)               如果iterable任一元素为真返回<span class=\"literal\">True</span>如果迭代器为空返回<span class=\"literal\">False</span></span><br><span class=\"line\">cmp(x, y) \t                如果x &lt; y ,返回负数；x == y, 返回<span class=\"number\">0</span>；x &gt; y,返回正数</span><br><span class=\"line\"></span><br><span class=\"line\">**反射**</span><br><span class=\"line\"></span><br><span class=\"line\">callable(object)            检查对象object是否可调用</span><br><span class=\"line\">compile(source, filename, mode, flags=<span class=\"number\">0</span>, dont_inherit=<span class=\"literal\">False</span>, optimize=<span class=\"number\">-1</span>)</span><br><span class=\"line\">                            将source编译为代码或者AST对象。代码对象能够通过<span class=\"keyword\">exec</span>语句来执行或者eval()进行求值。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数source：字符串或者AST（Abstract Syntax Trees）对象。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数 filename：代码文件名称，如果不是从文件读取代码则传递一些可辨认的值。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数model：指定编译代码的种类。可以指定为 ‘<span class=\"keyword\">exec</span>’,’eval’,’single’。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、参数flag和dont_inherit：这两个参数暂不介绍</span><br><span class=\"line\"> dir([object])              如果有实参，它会尝试返回该对象的有效属性列表。</span><br><span class=\"line\">                            <span class=\"number\">1</span>、不带参数时，返回当前范围内的变量、方法和定义的类型列表；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、带参数时，返回参数的属性、方法列表。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果参数包含方法__dir__()，该方法将被调用。当参数为实例时。</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果参数不包含__dir__()，该方法将最大限度地收集参数信息</span><br><span class=\"line\">delattr(object, name)       删除object对象名为name的属性</span><br><span class=\"line\">eval(expression, globals=<span class=\"literal\">None</span>, locals=<span class=\"literal\">None</span>)</span><br><span class=\"line\">                            计算表达式expression的值</span><br><span class=\"line\">exec(object[, globals[, locals]])</span><br><span class=\"line\">                            这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。</span><br><span class=\"line\">                            如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）</span><br><span class=\"line\">filter(function, iterable)  构造一个序列，等价于[ item <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> iterable <span class=\"keyword\">if</span> function(item)]</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数function：返回值为<span class=\"literal\">True</span>或<span class=\"literal\">False</span>的函数，可以为<span class=\"literal\">None</span></span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数iterable：序列或可迭代对象</span><br><span class=\"line\">getattr(object, name[, default])</span><br><span class=\"line\">                            获取一个类的属性</span><br><span class=\"line\">globals()                   返回表示当前全局符号表的字典</span><br><span class=\"line\">hasattr(object, name)       判断对象object是否包含名为name的特性</span><br><span class=\"line\">hash(object)                返回该对象的哈希值（如果它有的话）</span><br><span class=\"line\">id(object)                  返回对象的“标识值”</span><br><span class=\"line\">isinstance(object, classinfo)</span><br><span class=\"line\">                            判断object是否是<span class=\"class\"><span class=\"keyword\">class</span>的实例</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">issubclass</span><span class=\"params\">(class, classinfo)</span></span></span><br><span class=\"line\"><span class=\"class\">                            判断是否是子类</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">len</span><span class=\"params\">(s)</span>  \t                返回集合长度</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">locals</span><span class=\"params\">()</span>  \t                返回当前的变量列表</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">map</span><span class=\"params\">(function, iterable, ...)</span></span></span><br><span class=\"line\"><span class=\"class\">                            遍历每个元素，执行<span class=\"title\">function</span>操作</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">memoryview</span><span class=\"params\">(obj)</span>  \t        返回一个内存镜像类型的对象</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">next</span><span class=\"params\">(iterator[, default])</span>  \t类似于<span class=\"title\">iterator</span>.<span class=\"title\">next</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">property</span><span class=\"params\">([fget[, fset[, fdel[, doc]]]])</span></span></span><br><span class=\"line\">                            属性访问的包装类，设置后可以通过c.x=value等来访问setter和getter</span><br><span class=\"line\">reduce(function, iterable[, initializer])</span><br><span class=\"line\">                            合并操作，从第一个开始是前两个参数，然后是前两个的结果与第三个合并进行处理，以此类推</span><br><span class=\"line\">reload(module)  \t        重新加载模块</span><br><span class=\"line\">setattr(object, name, value)</span><br><span class=\"line\">                            设置属性值</span><br><span class=\"line\">repr(object)  \t            将一个对象变幻为可打印的格式</span><br><span class=\"line\">slice（） \t　              返回一个表示由range(start, stop, step)所指定索引集的slice对象</span><br><span class=\"line\">staticmethod \t            声明静态方法，是个注解</span><br><span class=\"line\">super(type[, object-<span class=\"keyword\">or</span>-type])</span><br><span class=\"line\">                            引用父类</span><br><span class=\"line\">type(object) \t            返回该object的类型</span><br><span class=\"line\">vars([object])  \t        返回对象的变量，若无参数与dict()方法类似</span><br><span class=\"line\">bytearray([source [, encoding [, errors]]])</span><br><span class=\"line\">                            返回一个byte数组</span><br><span class=\"line\">                            <span class=\"number\">1</span>、如果source为整数，则返回一个长度为source的初始化数组；</span><br><span class=\"line\">                            <span class=\"number\">2</span>、如果source为字符串，则按照指定的encoding将字符串转换为字节序列；</span><br><span class=\"line\">                            <span class=\"number\">3</span>、如果source为可迭代类型，则元素必须为[<span class=\"number\">0</span> ,<span class=\"number\">255</span>]中的整数；</span><br><span class=\"line\">                            <span class=\"number\">4</span>、如果source为与buffer接口一致的对象，则此对象也可以被用于初始化bytearray.</span><br><span class=\"line\">zip(*iterables)             创建一个聚合了来自每个</span><br></pre></td></tr></table></figure>\n\n<p><strong>IO操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file(filename [, mode [, bufsize]])</span><br><span class=\"line\">                            file类型的构造函数，作用为打开一个文件，如果文件不存在且mode为写或追加时，</span><br><span class=\"line\">                            文件将被创建。添加‘b’到mode参数中，将对文件以二进制形式操作。添加‘+’到mode</span><br><span class=\"line\">                            参数中，将允许对文件同时进行读写操作</span><br><span class=\"line\">                            <span class=\"number\">1</span>、参数filename：文件名称。</span><br><span class=\"line\">                            <span class=\"number\">2</span>、参数mode：<span class=\"string\">'r'</span>（读）、<span class=\"string\">'w'</span>（写）、<span class=\"string\">'a'</span>（追加）。</span><br><span class=\"line\">                            <span class=\"number\">3</span>、参数bufsize：如果为<span class=\"number\">0</span>表示不进行缓冲，如果为<span class=\"number\">1</span>表示进行行缓冲，如果是一个大于<span class=\"number\">1</span>的数表示缓冲区的大小 。</span><br><span class=\"line\">input([prompt])  \t        获取用户输入,推荐使用raw_input，因为该函数将不会捕获用户的错误输入</span><br><span class=\"line\">open(name[, mode[, buffering]])</span><br><span class=\"line\">                            打开文件与file有什么不同？推荐使用open</span><br><span class=\"line\">print(*objects, sep=<span class=\"string\">' '</span>, end=<span class=\"string\">'\\n'</span>, file=sys.stdout, flush=<span class=\"literal\">False</span>)</span><br><span class=\"line\">                            将objects打印到file指定的文本流，以sep分隔并在末尾加上end。</span><br><span class=\"line\">                            sep, end, file 和 flush 如果存在，它们必须以关键字参数的形式给出</span><br><span class=\"line\">raw_input([prompt])  \t    设置输入，输入都是作为字符串处理</span><br></pre></td></tr></table></figure>\n\n<p><strong>其他</strong></p>\n<p>help()–帮助信息</p>\n<p><a href=\"https://docs.python.org/zh-cn/3.7/library/functions.html#hash\" target=\"_blank\" rel=\"noopener\">参照python3.7.4中文官方说明</a></p>\n<p><strong><strong>init</strong>.py文件</strong></p>\n<p>这个文件的作用是把文件夹变成一个python模块，通常是空的但是我们还可以为他增加一些其他功能．<br>当我们导入一个包的时候实际上是导入了它的<strong>init</strong>.py文件，这样就可以在里面批量导入我们所需要的模块而不用一个个导入．</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># __init__.py</span></span><br><span class=\"line\">__all__ = [<span class=\"string\">'os'</span>, <span class=\"string\">'sys'</span>, <span class=\"string\">'re'</span>, <span class=\"string\">'urllib'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># a.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> package <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>这时就会把注册在<strong>init</strong>.py文件中<strong>all</strong>列表中的模块和包导入到当前文件中来.</p>\n<p><strong>python 返回函数的理解</strong></p>\n<p>返回函数的理解，返回函数返回的不是函数执行的结果而是内定函数的对象，它的作用就是<br>不会立即执行而是等到调用的时候才执行优点是可以延迟计算</p>\n<p><strong>文件操作</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'name'</span>,<span class=\"string\">'r+'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.seek(<span class=\"number\">0</span>)   <span class=\"comment\"># 当有内容要读取并替换部分内容的时候可以把指针或句柄移到开头truncate()清空</span></span><br><span class=\"line\">    f.truncate()</span><br></pre></td></tr></table></figure>\n"},{"title":"postName","date":"2013-12-02T07:30:16.000Z","description":"附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面","_content":"\n以下是正文\n","source":"_drafts/templates.md","raw":"---\ntitle: postName #文章页面上的显示名称，一般是中文\ndate: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改\ncategories: 默认分类 #分类\ntags: [linux] #文章标签，可空，多标签请用格式，注意:后面有个空格\ndescription: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面\n---\n\n以下是正文\n","slug":"templates","published":0,"updated":"2020-02-17T11:56:44.786Z","_id":"ck6qj7e260001heno0ckz0p2w","comments":1,"layout":"post","photos":[],"link":"","content":"<p>以下是正文</p>\n","site":{"data":{}},"excerpt":"","more":"<p>以下是正文</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck6qhajb00000zsnodgpi6iz6","category_id":"ck6qhajbf0004zsno24oxa7fw","_id":"ck6qhajbo000dzsno50whbray"},{"post_id":"ck6qhajbk0008zsno1twnaepg","category_id":"ck6qhajbf0004zsno24oxa7fw","_id":"ck6qhajbq000hzsno2vrt9cpu"},{"post_id":"ck6qhajbh0006zsno1b0fao4j","category_id":"ck6qhajbl0009zsno74j35tc7","_id":"ck6qhajbt000lzsno9sis4zdb"},{"post_id":"ck6qhajbj0007zsnoatpy21zd","category_id":"ck6qhajbp000ezsnoar9tbghz","_id":"ck6qhajbx000pzsnobsgn8oxs"},{"post_id":"ck6qhajbr000jzsnogrv112gc","category_id":"ck6qhajbp000ezsnoar9tbghz","_id":"ck6qhajc3000tzsno6qjgem9c"},{"post_id":"ck6qhajbu000ozsno9s8g4jap","category_id":"ck6qhajbp000ezsnoar9tbghz","_id":"ck6qhajc4000vzsnohu4y5mnc"},{"post_id":"ck6qhajbo000czsnofaf43017","category_id":"ck6qhajbx000rzsnoewmyg0oj","_id":"ck6qhajc60011zsno96z53d1e"},{"post_id":"ck6qhajbq000gzsnoap3nco5y","category_id":"ck6qhajc4000yzsno3m1vb1uo","_id":"ck6qhajc60013zsnocp3u885j"},{"post_id":"ck6qhajf5001mzsnogt6n75zz","category_id":"ck6qhajf6001nzsno7jpidxvj","_id":"ck6qhajf7001rzsno2m0m7y8n"},{"post_id":"ck6qj7e260001heno0ckz0p2w","category_id":"ck6qhajbt000mzsno2w2z9sg6","_id":"ck6qj7e290003heno9uxehi7l"}],"PostTag":[{"post_id":"ck6qhajb00000zsnodgpi6iz6","tag_id":"ck6qhajbg0005zsno51ys5dy0","_id":"ck6qhajbq000izsno25vi9az4"},{"post_id":"ck6qhajb00000zsnodgpi6iz6","tag_id":"ck6qhajbl000azsnoacmbbceb","_id":"ck6qhajbt000kzsnod8yw6tq8"},{"post_id":"ck6qhajbu000ozsno9s8g4jap","tag_id":"ck6qhajbp000fzsno9brk673f","_id":"ck6qhajbx000qzsno58bndtrr"},{"post_id":"ck6qhajbh0006zsno1b0fao4j","tag_id":"ck6qhajbp000fzsno9brk673f","_id":"ck6qhajc3000uzsno3hck56vq"},{"post_id":"ck6qhajbh0006zsno1b0fao4j","tag_id":"ck6qhajbu000nzsnohmipe5qa","_id":"ck6qhajc4000wzsnog65n56xo"},{"post_id":"ck6qhajbj0007zsnoatpy21zd","tag_id":"ck6qhajbp000fzsno9brk673f","_id":"ck6qhajc50010zsno5jd7gsc1"},{"post_id":"ck6qhajbk0008zsno1twnaepg","tag_id":"ck6qhajc4000xzsno9l9g00or","_id":"ck6qhajc80016zsno54qlcpsz"},{"post_id":"ck6qhajbk0008zsno1twnaepg","tag_id":"ck6qhajc60012zsnodpj4bla2","_id":"ck6qhajc80017zsnoh8h6h6hg"},{"post_id":"ck6qhajbk0008zsno1twnaepg","tag_id":"ck6qhajbu000nzsnohmipe5qa","_id":"ck6qhajc90019zsnoehp8gb4c"},{"post_id":"ck6qhajbo000czsnofaf43017","tag_id":"ck6qhajc90018zsno1hb7daj1","_id":"ck6qhajcb001ezsnogrpbbzfg"},{"post_id":"ck6qhajbo000czsnofaf43017","tag_id":"ck6qhajbu000nzsnohmipe5qa","_id":"ck6qhajcc001fzsnoa9gg77a1"},{"post_id":"ck6qhajbo000czsnofaf43017","tag_id":"ck6qhajbp000fzsno9brk673f","_id":"ck6qhajcc001hzsno5l5xh7ec"},{"post_id":"ck6qhajbq000gzsnoap3nco5y","tag_id":"ck6qhajcb001dzsnofuv3abb2","_id":"ck6qhajcd001jzsnoaetcc7kf"},{"post_id":"ck6qhajbq000gzsnoap3nco5y","tag_id":"ck6qhajbu000nzsnohmipe5qa","_id":"ck6qhajce001kzsno5nmi9di4"},{"post_id":"ck6qhajbr000jzsnogrv112gc","tag_id":"ck6qhajcd001izsno28h7fw98","_id":"ck6qhajce001lzsno1u6gaf4v"},{"post_id":"ck6qhajf5001mzsnogt6n75zz","tag_id":"ck6qhajf7001ozsno9h1z13wd","_id":"ck6qhajf7001pzsno11n86v3q"},{"post_id":"ck6qhajf5001mzsnogt6n75zz","tag_id":"ck6qhajbu000nzsnohmipe5qa","_id":"ck6qhajf7001qzsnoehrca65u"},{"post_id":"ck6qj7e260001heno0ckz0p2w","tag_id":"ck6qhajbp000fzsno9brk673f","_id":"ck6qj7e290002heno9lca0bs1"}],"Tag":[{"name":"git","_id":"ck6qhajbg0005zsno51ys5dy0"},{"name":"命令","_id":"ck6qhajbl000azsnoacmbbceb"},{"name":"linux","_id":"ck6qhajbp000fzsno9brk673f"},{"name":"笔记","_id":"ck6qhajbu000nzsnohmipe5qa"},{"name":"arch","_id":"ck6qhajc4000xzsno9l9g00or"},{"name":"pacman","_id":"ck6qhajc60012zsnodpj4bla2"},{"name":"shell","_id":"ck6qhajc90018zsno1hb7daj1"},{"name":"vim","_id":"ck6qhajcb001dzsnofuv3abb2"},{"name":"爬虫","_id":"ck6qhajcd001izsno28h7fw98"},{"name":"python","_id":"ck6qhajf7001ozsno9h1z13wd"}]}}